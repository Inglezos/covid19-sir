{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.13.0-alpha.fix.417'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "196"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **16th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{2: ['Solomon Islands', 'Holy See'],\n",
        " 3: ['Tanzania', 'Timor-Leste', 'Laos', 'Saint Kitts and Nevis'],\n",
        " 4: ['Dominica', 'Brunei', 'Saint Lucia'],\n",
        " 5: ['Grenada', 'Fiji', 'Equatorial Guinea'],\n",
        " 6: ['Antigua and Barbuda', 'Mauritius', 'Saint Vincent and the Grenadines'],\n",
        " 7: ['Gambia', 'Cambodia'],\n",
        " 8: ['Madagascar', 'Seychelles', 'Northern Mariana Islands', 'Kyrgyzstan',\n",
        "     'Liechtenstein', 'Monaco', 'Trinidad and Tobago', 'Vietnam', 'Bahamas'],\n",
        " 9: ['Republic of the Congo', 'South Africa', 'Zambia', 'Swaziland', 'Ghana',\n",
        "     'Barbados', 'Zimbabwe', 'Bermuda', 'Malawi', 'Australia', 'Djibouti',\n",
        "     'Sao Tome and Principe', 'Lesotho', 'Kazakhstan', 'Suriname', 'Bolivia',\n",
        "     'Virgin Islands, U.S.', 'Uzbekistan', 'Burundi', 'Oman'],\n",
        " 10: ['Saudi Arabia', 'Comoros', 'Namibia', 'Venezuela', 'Honduras', 'Benin',\n",
        "      'Mongolia', 'Bhutan', 'Dominican Republic', 'Eritrea', 'Ethiopia',\n",
        "      'Liberia', 'Israel', 'Libya', 'Philippines', 'Guyana', \"Cote d'Ivoire\",\n",
        "      'Angola', 'Syria', 'Belize', 'Jamaica', 'Chile', 'Senegal', 'Mozambique',\n",
        "      'Maldives', 'Rwanda', 'New Zealand', 'Singapore',\n",
        "      'Central African Republic', 'Botswana', 'Guatemala', 'Kuwait',\n",
        "      'Papua New Guinea', 'Bahrain'],\n",
        " 11: ['Iraq', 'Guinea-Bissau', 'Mexico', 'Jordan', 'Nepal', 'El Salvador',\n",
        "      'Cameroon', 'Yemen', 'Cape Verde', 'Iceland', 'Peru', 'Togo', 'Colombia',\n",
        "      'Bangladesh', 'Sierra Leone', 'Kenya', 'Guam', 'Paraguay', 'Nicaragua',\n",
        "      'Puerto Rico', 'India', 'Panama', 'Gabon', 'Brazil', 'Algeria', 'Egypt',\n",
        "      'Ecuador', 'Argentina', 'Costa Rica', 'Nigeria'],\n",
        " 12: ['Qatar', 'Taiwan', 'Indonesia', 'Sudan', 'Guinea', 'Niger',\n",
        "      'Democratic Republic of the Congo', 'Kosovo', 'Slovakia', 'Montenegro',\n",
        "      'South Sudan', 'Tajikistan', 'Pakistan', 'Somalia', 'Georgia', 'Slovenia',\n",
        "      'Japan', 'Chad'],\n",
        " 13: ['Mali', 'Russia', 'Luxembourg', 'Uganda', 'Serbia', 'Tunisia', 'Latvia',\n",
        "      'San Marino', 'Mauritania', 'Malta', 'Bulgaria', 'China', 'Azerbaijan',\n",
        "      'Burkina Faso', 'Belarus', 'Cuba', 'Hungary', 'Palestine', 'Lithuania',\n",
        "      'United Arab Emirates', 'Haiti', 'Moldova', 'Andorra', 'Croatia',\n",
        "      'Cyprus'],\n",
        " 14: ['Sri Lanka', 'Myanmar', 'Poland', 'Thailand', 'Afghanistan', 'Greece',\n",
        "      'Malaysia', 'Uruguay', 'Czech Republic', 'Iran', 'Albania', 'Armenia',\n",
        "      'Ireland', 'Turkey', 'Norway', 'Morocco', 'United States', 'Spain'],\n",
        " 15: ['Switzerland', 'Bosnia and Herzegovina', 'Lebanon', 'North Macedonia',\n",
        "      'Sweden', 'Estonia', 'Germany', 'Portugal', 'Austria'],\n",
        " 16: ['Italy', 'Ukraine', 'Canada', 'Finland', 'Denmark', 'Romania',\n",
        "      'Netherlands', 'France', 'Belgium'],\n",
        " 17: ['United Kingdom']}\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=16)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "10"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{16: ['Italy', 'Ukraine', 'Canada', 'Finland', 'Denmark', 'Romania',\n",
        "      'Netherlands', 'France', 'Belgium'],\n",
        " 17: ['United Kingdom']}\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"17\" valign=\"top\">United Kingdom</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>02Apr2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Apr2020</td>\n",
        "      <td>20Apr2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Apr2020</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>20Aug2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Aug2020</td>\n",
        "      <td>18Sep2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>02Oct2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Oct2020</td>\n",
        "      <td>11Oct2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Oct2020</td>\n",
        "      <td>19Oct2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20Oct2020</td>\n",
        "      <td>25Oct2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Oct2020</td>\n",
        "      <td>05Nov2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Nov2020</td>\n",
        "      <td>11Nov2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Nov2020</td>\n",
        "      <td>17Nov2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Nov2020</td>\n",
        "      <td>24Nov2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Nov2020</td>\n",
        "      <td>01Dec2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Dec2020</td>\n",
        "      <td>08Dec2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Dec2020</td>\n",
        "      <td>15Dec2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "                      Type      Start        End  Population\n",
        "Country        Phase                                        \n",
        "United Kingdom 0th    Past  12Feb2020  02Apr2020    66460344\n",
        "               1st    Past  03Apr2020  20Apr2020    66460344\n",
        "               2nd    Past  21Apr2020  09May2020    66460344\n",
        "               3rd    Past  10May2020  12Jun2020    66460344\n",
        "               4th    Past  13Jun2020  20Aug2020    66460344\n",
        "               5th    Past  21Aug2020  18Sep2020    66460344\n",
        "               6th    Past  19Sep2020  02Oct2020    66460344\n",
        "               7th    Past  03Oct2020  11Oct2020    66460344\n",
        "               8th    Past  12Oct2020  19Oct2020    66460344\n",
        "               9th    Past  20Oct2020  25Oct2020    66460344\n",
        "               10th   Past  26Oct2020  05Nov2020    66460344\n",
        "               11th   Past  06Nov2020  11Nov2020    66460344\n",
        "               12th   Past  12Nov2020  17Nov2020    66460344\n",
        "               13th   Past  18Nov2020  24Nov2020    66460344\n",
        "               14th   Past  25Nov2020  01Dec2020    66460344\n",
        "               15th   Past  02Dec2020  08Dec2020    66460344\n",
        "               16th   Past  09Dec2020  15Dec2020    66460344"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF, timeout=10)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>\n",
        "Running optimization with 4 CPUs...\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (23Apr2020 - 18May2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  8th phase (06Oct2020 - 15Oct2020): finished  358 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN, 12th phase (20Nov2020 - 25Nov2020): finished  357 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  9th phase (30Oct2020 - 05Nov2020): finished  362 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  7th phase (12Oct2020 - 21Oct2020): finished  364 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 15th phase (09Dec2020 - 15Dec2020): finished  366 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  3rd phase (12Aug2020 - 31Aug2020): finished  358 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (28Jul2020 - 25Aug2020): finished  359 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  7th phase (01Oct2020 - 12Oct2020): finished  363 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  4th phase (10Aug2020 - 08Sep2020): finished  357 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  3rd phase (13Jun2020 - 09Aug2020): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 12th phase (11Nov2020 - 16Nov2020): finished  367 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  8th phase (12Oct2020 - 19Oct2020): finished  335 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 11th phase (01Nov2020 - 10Nov2020): finished  329 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (22Oct2020 - 31Oct2020): finished  328 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 13th phase (17Nov2020 - 24Nov2020): finished  327 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  1st phase (09Apr2020 - 24Apr2020): finished  362 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 13th phase (26Nov2020 - 01Dec2020): finished  366 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  8th phase (21Oct2020 - 28Oct2020): finished  367 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 15th phase (30Nov2020 - 15Dec2020): finished  362 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 12th phase (09Nov2020 - 15Nov2020): finished  366 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  5th phase (23Aug2020 - 14Sep2020): finished  359 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  0th phase (13Mar2020 - 30Mar2020): finished  362 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 14th phase (25Nov2020 - 05Dec2020): finished  362 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (22Sep2020 - 30Sep2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  2nd phase (20Apr2020 - 04May2020): finished  361 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  6th phase (20Sep2020 - 28Sep2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  5th phase (21Aug2020 - 18Sep2020): finished  357 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  9th phase (16Oct2020 - 25Oct2020): finished  364 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  9th phase (20Oct2020 - 25Oct2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (09Apr2020 - 22Apr2020): finished  362 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU, 13th phase (25Nov2020 - 01Dec2020): finished  366 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  6th phase (21Sep2020 - 30Sep2020): finished  364 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 15th phase (06Dec2020 - 15Dec2020): finished  363 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 11th phase (06Nov2020 - 11Nov2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  2nd phase (17Apr2020 - 22May2020): finished  345 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  5th phase (19Aug2020 - 20Sep2020): finished  355 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 12th phase (12Nov2020 - 17Nov2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  0th phase (12Feb2020 - 02Apr2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  2nd phase (08Jul2020 - 30Jul2020): finished  358 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  9th phase (24Oct2020 - 02Nov2020): finished  361 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (17Oct2020 - 22Oct2020): finished  362 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  4th phase (01Sep2020 - 16Sep2020): finished  360 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  9th phase (23Oct2020 - 29Oct2020): finished  360 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  2nd phase (09Jul2020 - 11Aug2020): finished  354 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  8th phase (13Oct2020 - 22Oct2020): finished  362 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 11th phase (13Nov2020 - 19Nov2020): finished  364 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 13th phase (18Nov2020 - 23Nov2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  5th phase (17Sep2020 - 30Sep2020): finished  364 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  3rd phase (23May2020 - 08Aug2020): finished  340 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 14th phase (25Nov2020 - 04Dec2020): finished  364 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (31Mar2020 - 25Apr2020): finished  348 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (18Mar2020 - 27Mar2020): finished  366 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  2nd phase (03May2020 - 12Jun2020): finished  349 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 15th phase (08Dec2020 - 15Dec2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  6th phase (01Oct2020 - 11Oct2020): finished  362 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  8th phase (06Oct2020 - 11Oct2020): finished  368 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  0th phase (02Mar2020 - 08Apr2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  7th phase (03Oct2020 - 11Oct2020): finished  364 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (09Oct2020 - 15Oct2020): finished  361 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 15th phase (05Dec2020 - 15Dec2020): finished  329 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (26Aug2020 - 09Sep2020): finished  343 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 10th phase (26Oct2020 - 05Nov2020): finished  343 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (18Sep2020 - 07Oct2020): finished  343 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  3rd phase (07May2020 - 27Jul2020): finished  340 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 10th phase (30Oct2020 - 04Nov2020): finished  367 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (24Aug2020 - 17Sep2020): finished  357 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 12th phase (20Nov2020 - 26Nov2020): finished  364 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 14th phase (24Nov2020 - 29Nov2020): finished  366 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (08Oct2020 - 16Oct2020): finished  362 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (07Feb2020 - 30Mar2020): finished  339 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  6th phase (15Sep2020 - 27Sep2020): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (10Sep2020 - 21Sep2020): finished  357 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  8th phase (22Oct2020 - 29Oct2020): finished  359 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 17Mar2020): finished  355 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (28Mar2020 - 08Apr2020): finished  361 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN, 10th phase (03Nov2020 - 11Nov2020): finished  363 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 11th phase (13Nov2020 - 18Nov2020): finished  366 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 10th phase (26Oct2020 - 04Nov2020): finished  360 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 12th phase (19Nov2020 - 25Nov2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 14th phase (03Dec2020 - 08Dec2020): finished  360 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 13th phase (18Nov2020 - 28Nov2020): finished  355 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  2nd phase (14Apr2020 - 06May2020): finished  343 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  1st phase (05Apr2020 - 19Apr2020): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  3rd phase (10May2020 - 12Jun2020): finished  299 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  6th phase (30Sep2020 - 11Oct2020): finished  298 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 11th phase (02Nov2020 - 08Nov2020): finished  281 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  3rd phase (05May2020 - 26May2020): finished  273 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  1st phase (31Mar2020 - 13Apr2020): finished  245 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  5th phase (10Sep2020 - 29Sep2020): finished  232 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN, 11th phase (12Nov2020 - 19Nov2020): finished  238 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  4th phase (09Aug2020 - 05Sep2020): finished  230 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  6th phase (21Sep2020 - 04Oct2020): finished  246 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  0th phase (11Mar2020 - 31Mar2020): finished  261 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (26Apr2020 - 27Jul2020): finished  218 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  2nd phase (25Apr2020 - 11May2020): finished  240 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 14th phase (02Dec2020 - 07Dec2020): finished  249 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 14th phase (29Nov2020 - 04Dec2020): finished  261 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  5th phase (23Jul2020 - 06Sep2020): finished  255 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 11th phase (02Nov2020 - 11Nov2020): finished  244 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  4th phase (27May2020 - 18Aug2020): finished  264 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  4th phase (03Jun2020 - 22Jul2020): finished  274 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  1st phase (02May2020 - 07Jul2020): finished  275 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 13th phase (16Nov2020 - 24Nov2020): finished  296 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 13th phase (27Nov2020 - 02Dec2020): finished  236 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  1st phase (03Apr2020 - 20Apr2020): finished  244 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 10th phase (22Oct2020 - 01Nov2020): finished  240 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (16Oct2020 - 21Oct2020): finished  250 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  0th phase (19Mar2020 - 12Apr2020): finished  270 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  6th phase (07Sep2020 - 28Sep2020): finished  269 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  8th phase (14Oct2020 - 23Oct2020): finished  291 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  0th phase (05Mar2020 - 01May2020): finished  273 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  0th phase (16Mar2020 - 04Apr2020): finished  258 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (23Oct2020 - 01Nov2020): finished  271 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  4th phase (20Aug2020 - 09Sep2020): finished  264 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 11th phase (05Nov2020 - 11Nov2020): finished  274 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  5th phase (09Sep2020 - 20Sep2020): finished  279 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN, 14th phase (02Dec2020 - 08Dec2020): finished  273 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  1st phase (31May2020 - 08Jul2020): finished  267 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  1st phase (13Apr2020 - 02May2020): finished  284 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 10th phase (05Nov2020 - 12Nov2020): finished  286 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  7th phase (29Sep2020 - 05Oct2020): finished  288 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (01Oct2020 - 08Oct2020): finished  281 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 10th phase (06Nov2020 - 12Nov2020): finished  271 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  4th phase (13Jun2020 - 20Aug2020): finished  260 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  7th phase (28Sep2020 - 05Oct2020): finished  283 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  7th phase (29Sep2020 - 11Oct2020): finished  282 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 13th phase (22Nov2020 - 02Dec2020): finished  278 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  1st phase (01Apr2020 - 16Apr2020): finished  289 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  6th phase (19Sep2020 - 02Oct2020): finished  291 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU, 12th phase (18Nov2020 - 24Nov2020): finished  291 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  7th phase (12Oct2020 - 20Oct2020): finished  293 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  5th phase (06Sep2020 - 19Sep2020): finished  287 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  3rd phase (12May2020 - 02Jun2020): finished  287 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 12th phase (12Nov2020 - 21Nov2020): finished  284 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  9th phase (25Oct2020 - 04Nov2020): finished  283 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  8th phase (12Oct2020 - 24Oct2020): finished  289 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  7th phase (05Oct2020 - 13Oct2020): finished  289 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  3rd phase (31Jul2020 - 19Aug2020): finished  284 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  0th phase (21Mar2020 - 30May2020): finished  270 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  4th phase (28Jul2020 - 22Aug2020): finished  278 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (19May2020 - 23Aug2020): finished  248 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  2nd phase (21Apr2020 - 09May2020): finished  281 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  9th phase (29Oct2020 - 04Nov2020): finished  297 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 6 min 31 sec\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"17\" valign=\"top\">United Kingdom</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>02Apr2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>10.27</td>\n",
        "      <td>0.00147293</td>\n",
        "      <td>0.000596869</td>\n",
        "      <td>0.0442634</td>\n",
        "      <td>0.00370847</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>418</td>\n",
        "      <td>5</td>\n",
        "      <td>67</td>\n",
        "      <td>0.905333</td>\n",
        "      <td>350</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Apr2020</td>\n",
        "      <td>20Apr2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.15</td>\n",
        "      <td>0.139254</td>\n",
        "      <td>0.00135381</td>\n",
        "      <td>0.0270542</td>\n",
        "      <td>0.0189475</td>\n",
        "      <td>360</td>\n",
        "      <td>0.139</td>\n",
        "      <td>184</td>\n",
        "      <td>9</td>\n",
        "      <td>13</td>\n",
        "      <td>0.0568168</td>\n",
        "      <td>244</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Apr2020</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.115805</td>\n",
        "      <td>0.000997355</td>\n",
        "      <td>0.0231739</td>\n",
        "      <td>0.019043</td>\n",
        "      <td>360</td>\n",
        "      <td>0.116</td>\n",
        "      <td>250</td>\n",
        "      <td>10</td>\n",
        "      <td>13</td>\n",
        "      <td>0.0440574</td>\n",
        "      <td>281</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.72</td>\n",
        "      <td>0.0273973</td>\n",
        "      <td>0.00181889</td>\n",
        "      <td>0.0223605</td>\n",
        "      <td>0.0282013</td>\n",
        "      <td>360</td>\n",
        "      <td>0.027</td>\n",
        "      <td>137</td>\n",
        "      <td>11</td>\n",
        "      <td>8</td>\n",
        "      <td>0.0428663</td>\n",
        "      <td>299</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>20Aug2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.94</td>\n",
        "      <td>0.037757</td>\n",
        "      <td>0.000150222</td>\n",
        "      <td>0.0213162</td>\n",
        "      <td>0.0216272</td>\n",
        "      <td>360</td>\n",
        "      <td>0.038</td>\n",
        "      <td>1664</td>\n",
        "      <td>11</td>\n",
        "      <td>11</td>\n",
        "      <td>0.18708</td>\n",
        "      <td>260</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Aug2020</td>\n",
        "      <td>18Sep2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.56</td>\n",
        "      <td>0.013147</td>\n",
        "      <td>0.000486135</td>\n",
        "      <td>0.0253218</td>\n",
        "      <td>0.015582</td>\n",
        "      <td>360</td>\n",
        "      <td>0.013</td>\n",
        "      <td>514</td>\n",
        "      <td>9</td>\n",
        "      <td>16</td>\n",
        "      <td>0.0821252</td>\n",
        "      <td>357</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>02Oct2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.82</td>\n",
        "      <td>0.000499726</td>\n",
        "      <td>9.64005e-05</td>\n",
        "      <td>0.0262337</td>\n",
        "      <td>0.0143</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>2593</td>\n",
        "      <td>9</td>\n",
        "      <td>17</td>\n",
        "      <td>0.0116182</td>\n",
        "      <td>291</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Oct2020</td>\n",
        "      <td>11Oct2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.43</td>\n",
        "      <td>0.0012119</td>\n",
        "      <td>0.000530169</td>\n",
        "      <td>0.0308227</td>\n",
        "      <td>0.0121559</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>471</td>\n",
        "      <td>8</td>\n",
        "      <td>20</td>\n",
        "      <td>0.0665783</td>\n",
        "      <td>364</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Oct2020</td>\n",
        "      <td>19Oct2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.45</td>\n",
        "      <td>0.00107241</td>\n",
        "      <td>0.000191072</td>\n",
        "      <td>0.0246769</td>\n",
        "      <td>0.0167727</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>1308</td>\n",
        "      <td>10</td>\n",
        "      <td>14</td>\n",
        "      <td>0.0242427</td>\n",
        "      <td>335</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20Oct2020</td>\n",
        "      <td>25Oct2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.57</td>\n",
        "      <td>0.00141836</td>\n",
        "      <td>5.43243e-05</td>\n",
        "      <td>0.0245026</td>\n",
        "      <td>0.0154902</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>4601</td>\n",
        "      <td>10</td>\n",
        "      <td>16</td>\n",
        "      <td>0.0121932</td>\n",
        "      <td>365</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Oct2020</td>\n",
        "      <td>05Nov2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.21</td>\n",
        "      <td>0.016007</td>\n",
        "      <td>4.05087e-05</td>\n",
        "      <td>0.0235599</td>\n",
        "      <td>0.0191858</td>\n",
        "      <td>360</td>\n",
        "      <td>0.016</td>\n",
        "      <td>6171</td>\n",
        "      <td>10</td>\n",
        "      <td>13</td>\n",
        "      <td>0.0195712</td>\n",
        "      <td>343</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Nov2020</td>\n",
        "      <td>11Nov2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.99</td>\n",
        "      <td>0.000656873</td>\n",
        "      <td>0.000283772</td>\n",
        "      <td>0.0216838</td>\n",
        "      <td>0.0215752</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>880</td>\n",
        "      <td>11</td>\n",
        "      <td>11</td>\n",
        "      <td>0.00605567</td>\n",
        "      <td>365</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Nov2020</td>\n",
        "      <td>17Nov2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Nov2020</td>\n",
        "      <td>24Nov2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Nov2020</td>\n",
        "      <td>01Dec2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Dec2020</td>\n",
        "      <td>08Dec2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Dec2020</td>\n",
        "      <td>15Dec2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "                      Type      Start        End  Population    ODE     Rt  \\\n",
        "Country        Phase                                                         \n",
        "United Kingdom 0th    Past  12Feb2020  02Apr2020    66460344  SIR-F  10.27   \n",
        "               1st    Past  03Apr2020  20Apr2020    66460344  SIR-F   1.15   \n",
        "               2nd    Past  21Apr2020  09May2020    66460344  SIR-F   1.02   \n",
        "               3rd    Past  10May2020  12Jun2020    66460344  SIR-F   0.72   \n",
        "               4th    Past  13Jun2020  20Aug2020    66460344  SIR-F   0.94   \n",
        "               5th    Past  21Aug2020  18Sep2020    66460344  SIR-F   1.56   \n",
        "               6th    Past  19Sep2020  02Oct2020    66460344  SIR-F   1.82   \n",
        "               7th    Past  03Oct2020  11Oct2020    66460344  SIR-F   2.43   \n",
        "               8th    Past  12Oct2020  19Oct2020    66460344  SIR-F   1.45   \n",
        "               9th    Past  20Oct2020  25Oct2020    66460344  SIR-F   1.57   \n",
        "               10th   Past  26Oct2020  05Nov2020    66460344  SIR-F   1.21   \n",
        "               11th   Past  06Nov2020  11Nov2020    66460344  SIR-F   0.99   \n",
        "               12th   Past  12Nov2020  17Nov2020    66460344      -      -   \n",
        "               13th   Past  18Nov2020  24Nov2020    66460344      -      -   \n",
        "               14th   Past  25Nov2020  01Dec2020    66460344      -      -   \n",
        "               15th   Past  02Dec2020  08Dec2020    66460344      -      -   \n",
        "               16th   Past  09Dec2020  15Dec2020    66460344      -      -   \n",
        "\n",
        "                            theta        kappa        rho       sigma  tau  \\\n",
        "Country        Phase                                                         \n",
        "United Kingdom 0th     0.00147293  0.000596869  0.0442634  0.00370847  360   \n",
        "               1st       0.139254   0.00135381  0.0270542   0.0189475  360   \n",
        "               2nd       0.115805  0.000997355  0.0231739    0.019043  360   \n",
        "               3rd      0.0273973   0.00181889  0.0223605   0.0282013  360   \n",
        "               4th       0.037757  0.000150222  0.0213162   0.0216272  360   \n",
        "               5th       0.013147  0.000486135  0.0253218    0.015582  360   \n",
        "               6th    0.000499726  9.64005e-05  0.0262337      0.0143  360   \n",
        "               7th      0.0012119  0.000530169  0.0308227   0.0121559  360   \n",
        "               8th     0.00107241  0.000191072  0.0246769   0.0167727  360   \n",
        "               9th     0.00141836  5.43243e-05  0.0245026   0.0154902  360   \n",
        "               10th      0.016007  4.05087e-05  0.0235599   0.0191858  360   \n",
        "               11th   0.000656873  0.000283772  0.0216838   0.0215752  360   \n",
        "               12th             -            -          -           -    -   \n",
        "               13th             -            -          -           -    -   \n",
        "               14th             -            -          -           -    -   \n",
        "               15th             -            -          -           -    -   \n",
        "               16th             -            -          -           -    -   \n",
        "\n",
        "                     alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  \\\n",
        "Country        Phase                                                        \n",
        "United Kingdom 0th        0.001            418            5            67   \n",
        "               1st        0.139            184            9            13   \n",
        "               2nd        0.116            250           10            13   \n",
        "               3rd        0.027            137           11             8   \n",
        "               4th        0.038           1664           11            11   \n",
        "               5th        0.013            514            9            16   \n",
        "               6th            0           2593            9            17   \n",
        "               7th        0.001            471            8            20   \n",
        "               8th        0.001           1308           10            14   \n",
        "               9th        0.001           4601           10            16   \n",
        "               10th       0.016           6171           10            13   \n",
        "               11th       0.001            880           11            11   \n",
        "               12th           -              -            -             -   \n",
        "               13th           -              -            -             -   \n",
        "               14th           -              -            -             -   \n",
        "               15th           -              -            -             -   \n",
        "               16th           -              -            -             -   \n",
        "\n",
        "                           RMSLE Trials       Runtime  \n",
        "Country        Phase                                   \n",
        "United Kingdom 0th      0.905333    350  0 min 10 sec  \n",
        "               1st     0.0568168    244  0 min 10 sec  \n",
        "               2nd     0.0440574    281  0 min 10 sec  \n",
        "               3rd     0.0428663    299  0 min 10 sec  \n",
        "               4th       0.18708    260  0 min 10 sec  \n",
        "               5th     0.0821252    357  0 min 10 sec  \n",
        "               6th     0.0116182    291  0 min 10 sec  \n",
        "               7th     0.0665783    364  0 min 10 sec  \n",
        "               8th     0.0242427    335  0 min 10 sec  \n",
        "               9th     0.0121932    365  0 min 10 sec  \n",
        "               10th    0.0195712    343  0 min 10 sec  \n",
        "               11th   0.00605567    365  0 min 10 sec  \n",
        "               12th            -      -             -  \n",
        "               13th            -      -             -  \n",
        "               14th            -      -             -  \n",
        "               15th            -      -             -  \n",
        "               16th            -      -             -  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.0561696</td>\n",
        "      <td>0.000877136</td>\n",
        "      <td>0.0579856</td>\n",
        "      <td>0.00622756</td>\n",
        "      <td>0.056</td>\n",
        "      <td>285</td>\n",
        "      <td>4</td>\n",
        "      <td>40</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.0561696</td>\n",
        "      <td>0.000877136</td>\n",
        "      <td>0.0579856</td>\n",
        "      <td>0.00622756</td>\n",
        "      <td>0.056</td>\n",
        "      <td>285</td>\n",
        "      <td>4</td>\n",
        "      <td>40</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.0561696</td>\n",
        "      <td>0.000877136</td>\n",
        "      <td>0.0579856</td>\n",
        "      <td>0.00622756</td>\n",
        "      <td>0.056</td>\n",
        "      <td>285</td>\n",
        "      <td>4</td>\n",
        "      <td>40</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.0561696</td>\n",
        "      <td>0.000877136</td>\n",
        "      <td>0.0579856</td>\n",
        "      <td>0.00622756</td>\n",
        "      <td>0.056</td>\n",
        "      <td>285</td>\n",
        "      <td>4</td>\n",
        "      <td>40</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.0561696</td>\n",
        "      <td>0.000877136</td>\n",
        "      <td>0.0579856</td>\n",
        "      <td>0.00622756</td>\n",
        "      <td>0.056</td>\n",
        "      <td>285</td>\n",
        "      <td>4</td>\n",
        "      <td>40</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date Country      theta        kappa        rho       sigma  \\\n",
        "0 2020-02-24   Italy  0.0561696  0.000877136  0.0579856  0.00622756   \n",
        "1 2020-02-24   Italy  0.0561696  0.000877136  0.0579856  0.00622756   \n",
        "2 2020-02-24   Italy  0.0561696  0.000877136  0.0579856  0.00622756   \n",
        "3 2020-02-24   Italy  0.0561696  0.000877136  0.0579856  0.00622756   \n",
        "4 2020-02-24   Italy  0.0561696  0.000877136  0.0579856  0.00622756   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.056            285            4            40  ...             2   \n",
        "1      0.056            285            4            40  ...             0   \n",
        "2      0.056            285            4            40  ...             0   \n",
        "3      0.056            285            4            40  ...             0   \n",
        "4      0.056            285            4            40  ...             0   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        4                  0                       2   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        0                  0                       0   \n",
        "4                        0                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               2                                    3   \n",
        "1                               0                                    3   \n",
        "2                               0                                    3   \n",
        "3                               0                                    3   \n",
        "4                               0                                    3   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               1                2             69.91  \n",
        "1                      2               1                2             69.91  \n",
        "2                      2               1                2             69.91  \n",
        "3                      2               1                2             69.91  \n",
        "4                      2               1                2             69.91  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Finland</th>\n",
        "      <th>France</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-11</th>\n",
        "      <td>1.06</td>\n",
        "      <td>1.31</td>\n",
        "      <td>1.77</td>\n",
        "      <td>2.57</td>\n",
        "      <td>0.44</td>\n",
        "      <td>0.75</td>\n",
        "      <td>1.68</td>\n",
        "      <td>0.85</td>\n",
        "      <td>0.97</td>\n",
        "      <td>0.99</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>1.06</td>\n",
        "      <td>1.31</td>\n",
        "      <td>1.77</td>\n",
        "      <td>2.57</td>\n",
        "      <td>0.44</td>\n",
        "      <td>0.75</td>\n",
        "      <td>1.68</td>\n",
        "      <td>0.85</td>\n",
        "      <td>0.97</td>\n",
        "      <td>0.99</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>1.06</td>\n",
        "      <td>1.31</td>\n",
        "      <td>1.77</td>\n",
        "      <td>2.57</td>\n",
        "      <td>0.44</td>\n",
        "      <td>0.75</td>\n",
        "      <td>1.68</td>\n",
        "      <td>0.85</td>\n",
        "      <td>0.97</td>\n",
        "      <td>0.99</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-14</th>\n",
        "      <td>1.06</td>\n",
        "      <td>1.31</td>\n",
        "      <td>1.77</td>\n",
        "      <td>2.57</td>\n",
        "      <td>0.44</td>\n",
        "      <td>0.75</td>\n",
        "      <td>1.68</td>\n",
        "      <td>0.85</td>\n",
        "      <td>0.97</td>\n",
        "      <td>0.99</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-15</th>\n",
        "      <td>1.06</td>\n",
        "      <td>1.31</td>\n",
        "      <td>1.77</td>\n",
        "      <td>2.57</td>\n",
        "      <td>0.44</td>\n",
        "      <td>0.75</td>\n",
        "      <td>1.68</td>\n",
        "      <td>0.85</td>\n",
        "      <td>0.97</td>\n",
        "      <td>0.99</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Belgium  Canada  Denmark  Finland  France  Italy  Netherlands  \\\n",
        "Date                                                                        \n",
        "2020-12-11     1.06    1.31     1.77     2.57    0.44   0.75         1.68   \n",
        "2020-12-12     1.06    1.31     1.77     2.57    0.44   0.75         1.68   \n",
        "2020-12-13     1.06    1.31     1.77     2.57    0.44   0.75         1.68   \n",
        "2020-12-14     1.06    1.31     1.77     2.57    0.44   0.75         1.68   \n",
        "2020-12-15     1.06    1.31     1.77     2.57    0.44   0.75         1.68   \n",
        "\n",
        "Country     Romania  Ukraine  United Kingdom  \n",
        "Date                                          \n",
        "2020-12-11     0.85     0.97            0.99  \n",
        "2020-12-12     0.85     0.97            0.99  \n",
        "2020-12-13     0.85     0.97            0.99  \n",
        "2020-12-14     0.85     0.97            0.99  \n",
        "2020-12-15     0.85     0.97            0.99  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Finland</th>\n",
        "      <th>France</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-11</th>\n",
        "      <td>0.02835</td>\n",
        "      <td>0.024122</td>\n",
        "      <td>0.028699</td>\n",
        "      <td>0.011453</td>\n",
        "      <td>0.016386</td>\n",
        "      <td>0.005839</td>\n",
        "      <td>0.02683</td>\n",
        "      <td>0.017255</td>\n",
        "      <td>0.008057</td>\n",
        "      <td>0.021684</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>0.02835</td>\n",
        "      <td>0.024122</td>\n",
        "      <td>0.028699</td>\n",
        "      <td>0.011453</td>\n",
        "      <td>0.016386</td>\n",
        "      <td>0.005839</td>\n",
        "      <td>0.02683</td>\n",
        "      <td>0.017255</td>\n",
        "      <td>0.008057</td>\n",
        "      <td>0.021684</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>0.02835</td>\n",
        "      <td>0.024122</td>\n",
        "      <td>0.028699</td>\n",
        "      <td>0.011453</td>\n",
        "      <td>0.016386</td>\n",
        "      <td>0.005839</td>\n",
        "      <td>0.02683</td>\n",
        "      <td>0.017255</td>\n",
        "      <td>0.008057</td>\n",
        "      <td>0.021684</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-14</th>\n",
        "      <td>0.02835</td>\n",
        "      <td>0.024122</td>\n",
        "      <td>0.028699</td>\n",
        "      <td>0.011453</td>\n",
        "      <td>0.016386</td>\n",
        "      <td>0.005839</td>\n",
        "      <td>0.02683</td>\n",
        "      <td>0.017255</td>\n",
        "      <td>0.008057</td>\n",
        "      <td>0.021684</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-15</th>\n",
        "      <td>0.02835</td>\n",
        "      <td>0.024122</td>\n",
        "      <td>0.028699</td>\n",
        "      <td>0.011453</td>\n",
        "      <td>0.016386</td>\n",
        "      <td>0.005839</td>\n",
        "      <td>0.02683</td>\n",
        "      <td>0.017255</td>\n",
        "      <td>0.008057</td>\n",
        "      <td>0.021684</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country     Belgium    Canada   Denmark   Finland    France     Italy  \\\n",
        "Date                                                                    \n",
        "2020-12-11  0.02835  0.024122  0.028699  0.011453  0.016386  0.005839   \n",
        "2020-12-12  0.02835  0.024122  0.028699  0.011453  0.016386  0.005839   \n",
        "2020-12-13  0.02835  0.024122  0.028699  0.011453  0.016386  0.005839   \n",
        "2020-12-14  0.02835  0.024122  0.028699  0.011453  0.016386  0.005839   \n",
        "2020-12-15  0.02835  0.024122  0.028699  0.011453  0.016386  0.005839   \n",
        "\n",
        "Country     Netherlands   Romania   Ukraine  United Kingdom  \n",
        "Date                                                         \n",
        "2020-12-11      0.02683  0.017255  0.008057        0.021684  \n",
        "2020-12-12      0.02683  0.017255  0.008057        0.021684  \n",
        "2020-12-13      0.02683  0.017255  0.008057        0.021684  \n",
        "2020-12-14      0.02683  0.017255  0.008057        0.021684  \n",
        "2020-12-15      0.02683  0.017255  0.008057        0.021684  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Finland</th>\n",
        "      <th>France</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-11</th>\n",
        "      <td>0.026171</td>\n",
        "      <td>0.018018</td>\n",
        "      <td>0.016121</td>\n",
        "      <td>0.004385</td>\n",
        "      <td>0.035316</td>\n",
        "      <td>0.007543</td>\n",
        "      <td>0.015924</td>\n",
        "      <td>0.019993</td>\n",
        "      <td>0.008102</td>\n",
        "      <td>0.021575</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>0.026171</td>\n",
        "      <td>0.018018</td>\n",
        "      <td>0.016121</td>\n",
        "      <td>0.004385</td>\n",
        "      <td>0.035316</td>\n",
        "      <td>0.007543</td>\n",
        "      <td>0.015924</td>\n",
        "      <td>0.019993</td>\n",
        "      <td>0.008102</td>\n",
        "      <td>0.021575</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>0.026171</td>\n",
        "      <td>0.018018</td>\n",
        "      <td>0.016121</td>\n",
        "      <td>0.004385</td>\n",
        "      <td>0.035316</td>\n",
        "      <td>0.007543</td>\n",
        "      <td>0.015924</td>\n",
        "      <td>0.019993</td>\n",
        "      <td>0.008102</td>\n",
        "      <td>0.021575</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-14</th>\n",
        "      <td>0.026171</td>\n",
        "      <td>0.018018</td>\n",
        "      <td>0.016121</td>\n",
        "      <td>0.004385</td>\n",
        "      <td>0.035316</td>\n",
        "      <td>0.007543</td>\n",
        "      <td>0.015924</td>\n",
        "      <td>0.019993</td>\n",
        "      <td>0.008102</td>\n",
        "      <td>0.021575</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-15</th>\n",
        "      <td>0.026171</td>\n",
        "      <td>0.018018</td>\n",
        "      <td>0.016121</td>\n",
        "      <td>0.004385</td>\n",
        "      <td>0.035316</td>\n",
        "      <td>0.007543</td>\n",
        "      <td>0.015924</td>\n",
        "      <td>0.019993</td>\n",
        "      <td>0.008102</td>\n",
        "      <td>0.021575</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Belgium    Canada   Denmark   Finland    France     Italy  \\\n",
        "Date                                                                     \n",
        "2020-12-11  0.026171  0.018018  0.016121  0.004385  0.035316  0.007543   \n",
        "2020-12-12  0.026171  0.018018  0.016121  0.004385  0.035316  0.007543   \n",
        "2020-12-13  0.026171  0.018018  0.016121  0.004385  0.035316  0.007543   \n",
        "2020-12-14  0.026171  0.018018  0.016121  0.004385  0.035316  0.007543   \n",
        "2020-12-15  0.026171  0.018018  0.016121  0.004385  0.035316  0.007543   \n",
        "\n",
        "Country     Netherlands   Romania   Ukraine  United Kingdom  \n",
        "Date                                                         \n",
        "2020-12-11     0.015924  0.019993  0.008102        0.021575  \n",
        "2020-12-12     0.015924  0.019993  0.008102        0.021575  \n",
        "2020-12-13     0.015924  0.019993  0.008102        0.021575  \n",
        "2020-12-14     0.015924  0.019993  0.008102        0.021575  \n",
        "2020-12-15     0.015924  0.019993  0.008102        0.021575  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Finland</th>\n",
        "      <th>France</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-11</th>\n",
        "      <td>0.000489</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000284</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000284</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>0.000489</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000284</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000284</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>0.000489</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000284</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000284</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-14</th>\n",
        "      <td>0.000489</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000284</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000284</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-15</th>\n",
        "      <td>0.000489</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000284</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000284</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Belgium    Canada   Denmark   Finland    France     Italy  \\\n",
        "Date                                                                     \n",
        "2020-12-11  0.000489  0.000301  0.000059  0.000071  0.000002  0.000096   \n",
        "2020-12-12  0.000489  0.000301  0.000059  0.000071  0.000002  0.000096   \n",
        "2020-12-13  0.000489  0.000301  0.000059  0.000071  0.000002  0.000096   \n",
        "2020-12-14  0.000489  0.000301  0.000059  0.000071  0.000002  0.000096   \n",
        "2020-12-15  0.000489  0.000301  0.000059  0.000071  0.000002  0.000096   \n",
        "\n",
        "Country     Netherlands   Romania   Ukraine  United Kingdom  \n",
        "Date                                                         \n",
        "2020-12-11     0.000002  0.000284  0.000054        0.000284  \n",
        "2020-12-12     0.000002  0.000284  0.000054        0.000284  \n",
        "2020-12-13     0.000002  0.000284  0.000054        0.000284  \n",
        "2020-12-14     0.000002  0.000284  0.000054        0.000284  \n",
        "2020-12-15     0.000002  0.000284  0.000054        0.000284  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Finland</th>\n",
        "      <th>France</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-11</th>\n",
        "      <td>0.001915</td>\n",
        "      <td>0.003317</td>\n",
        "      <td>0.002191</td>\n",
        "      <td>0.000921</td>\n",
        "      <td>0.04263</td>\n",
        "      <td>0.020107</td>\n",
        "      <td>0.002247</td>\n",
        "      <td>0.000664</td>\n",
        "      <td>0.018826</td>\n",
        "      <td>0.000657</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>0.001915</td>\n",
        "      <td>0.003317</td>\n",
        "      <td>0.002191</td>\n",
        "      <td>0.000921</td>\n",
        "      <td>0.04263</td>\n",
        "      <td>0.020107</td>\n",
        "      <td>0.002247</td>\n",
        "      <td>0.000664</td>\n",
        "      <td>0.018826</td>\n",
        "      <td>0.000657</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>0.001915</td>\n",
        "      <td>0.003317</td>\n",
        "      <td>0.002191</td>\n",
        "      <td>0.000921</td>\n",
        "      <td>0.04263</td>\n",
        "      <td>0.020107</td>\n",
        "      <td>0.002247</td>\n",
        "      <td>0.000664</td>\n",
        "      <td>0.018826</td>\n",
        "      <td>0.000657</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-14</th>\n",
        "      <td>0.001915</td>\n",
        "      <td>0.003317</td>\n",
        "      <td>0.002191</td>\n",
        "      <td>0.000921</td>\n",
        "      <td>0.04263</td>\n",
        "      <td>0.020107</td>\n",
        "      <td>0.002247</td>\n",
        "      <td>0.000664</td>\n",
        "      <td>0.018826</td>\n",
        "      <td>0.000657</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-15</th>\n",
        "      <td>0.001915</td>\n",
        "      <td>0.003317</td>\n",
        "      <td>0.002191</td>\n",
        "      <td>0.000921</td>\n",
        "      <td>0.04263</td>\n",
        "      <td>0.020107</td>\n",
        "      <td>0.002247</td>\n",
        "      <td>0.000664</td>\n",
        "      <td>0.018826</td>\n",
        "      <td>0.000657</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Belgium    Canada   Denmark   Finland   France     Italy  \\\n",
        "Date                                                                    \n",
        "2020-12-11  0.001915  0.003317  0.002191  0.000921  0.04263  0.020107   \n",
        "2020-12-12  0.001915  0.003317  0.002191  0.000921  0.04263  0.020107   \n",
        "2020-12-13  0.001915  0.003317  0.002191  0.000921  0.04263  0.020107   \n",
        "2020-12-14  0.001915  0.003317  0.002191  0.000921  0.04263  0.020107   \n",
        "2020-12-15  0.001915  0.003317  0.002191  0.000921  0.04263  0.020107   \n",
        "\n",
        "Country     Netherlands   Romania   Ukraine  United Kingdom  \n",
        "Date                                                         \n",
        "2020-12-11     0.002247  0.000664  0.018826        0.000657  \n",
        "2020-12-12     0.002247  0.000664  0.018826        0.000657  \n",
        "2020-12-13     0.002247  0.000664  0.018826        0.000657  \n",
        "2020-12-14     0.002247  0.000664  0.018826        0.000657  \n",
        "2020-12-15     0.002247  0.000664  0.018826        0.000657  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 28030 entries, 0 to 28155\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 28030 non-null  datetime64[ns]\n",
        " 1   Country                              28030 non-null  object        \n",
        " 2   Rt                                   28030 non-null  float64       \n",
        " 3   theta                                28030 non-null  float64       \n",
        " 4   kappa                                28030 non-null  float64       \n",
        " 5   rho                                  28030 non-null  float64       \n",
        " 6   sigma                                28030 non-null  float64       \n",
        " 7   School_closing                       28030 non-null  int64         \n",
        " 8   Workplace_closing                    28030 non-null  int64         \n",
        " 9   Cancel_events                        28030 non-null  int64         \n",
        " 10  Gatherings_restrictions              28030 non-null  int64         \n",
        " 11  Transport_closing                    28030 non-null  int64         \n",
        " 12  Stay_home_restrictions               28030 non-null  int64         \n",
        " 13  Internal_movement_restrictions       28030 non-null  int64         \n",
        " 14  International_movement_restrictions  28030 non-null  int64         \n",
        " 15  Information_campaigns                28030 non-null  int64         \n",
        " 16  Testing_policy                       28030 non-null  int64         \n",
        " 17  Contact_tracing                      28030 non-null  int64         \n",
        " 18  Stringency_index                     28030 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 4.3+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col0,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col1,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col2,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col3,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col4,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col5,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col6,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col7,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col8,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col9,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col10,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col11,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col12,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col13,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col14,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col15,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col1,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col5,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col0,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col0{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col2,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col0{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col3,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col0,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col6,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col5{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col4,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col0{\n",
        "            background-color:  #fef6fa;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col6,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col0{\n",
        "            background-color:  #f5eef6;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col7,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col16,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col12,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col0,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col3,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col0{\n",
        "            background-color:  #ece7f2;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col8,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col0{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col9,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col3,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col1,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col0{\n",
        "            background-color:  #eee9f3;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col10,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col12,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col0,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col0{\n",
        "            background-color:  #e8e4f0;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col11,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col6,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col3,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col0{\n",
        "            background-color:  #ede8f3;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col13,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col0{\n",
        "            background-color:  #f5eff6;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col14,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col0{\n",
        "            background-color:  #e5e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col15,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col14,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col7,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col0{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col2,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col1,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col14,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col6{\n",
        "            background-color:  #bdc8e1;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col4,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col1{\n",
        "            background-color:  #c9cee4;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col5,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col1{\n",
        "            background-color:  #67a4cc;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col6,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col14,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col1,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col5{\n",
        "            background-color:  #a5bddb;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col7,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col1{\n",
        "            background-color:  #60a1ca;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col8,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col1{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col9,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col1{\n",
        "            background-color:  #4094c3;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col10,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col15,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col1,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col7{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col11,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col1{\n",
        "            background-color:  #569dc8;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col12,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col5,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col4,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col12,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col1,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col11{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col13,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col15,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col1,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col4{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col14,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col10,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col3,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col1{\n",
        "            background-color:  #dbdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col15,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col1{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col16,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col3,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col7,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col2,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col2,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col1{\n",
        "            background-color:  #9ab8d8;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col4,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col2{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col5,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col2,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col15,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col14,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col14,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col9,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col10,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col6{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col6,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col2,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col16,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col14{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col8,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col2{\n",
        "            background-color:  #cacee5;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col9,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col15,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col2,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col5{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col10,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col2{\n",
        "            background-color:  #c0c9e2;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col11,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col14,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col2,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col2{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col12,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col2{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col13,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col2{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col15,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col2{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col16,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col9,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col4,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col2{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col4,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col3{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col5,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col3{\n",
        "            background-color:  #f9f2f8;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col7,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col3{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col8,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col11,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col3,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col3{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col9,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col13,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col3{\n",
        "            background-color:  #eae6f1;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col14,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col3{\n",
        "            background-color:  #ebe6f2;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col15,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col16,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col3,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col3{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col6,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col10,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col4,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col15,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col4,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col9{\n",
        "            background-color:  #6fa7ce;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col7,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col13,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col4,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col4{\n",
        "            background-color:  #80aed2;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col8,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col4{\n",
        "            background-color:  #3d93c2;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col11,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col11,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col4,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col5{\n",
        "            background-color:  #8cb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col12,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col14,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col4,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col4{\n",
        "            background-color:  #a1bbda;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col16,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col14,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col10,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col13,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col9,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col9,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col8,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col4{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col7,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col5{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col8,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col5{\n",
        "            background-color:  #63a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col9,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col5{\n",
        "            background-color:  #81aed2;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col10,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col13,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col5,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col14,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col8,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col12{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col12,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col5{\n",
        "            background-color:  #71a8ce;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col13,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col12,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col6,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col5{\n",
        "            background-color:  #549cc7;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col16,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col5{\n",
        "            background-color:  #056ba7;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col7,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col6{\n",
        "            background-color:  #4697c4;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col8,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col6,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col15,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col14{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col9,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col6,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col15,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col11{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col10,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col6{\n",
        "            background-color:  #04649d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col11,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col6{\n",
        "            background-color:  #5ea0ca;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col13,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col6{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col16,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col6{\n",
        "            background-color:  #045e93;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col8,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col7,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col16,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col11{\n",
        "            background-color:  #4295c3;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col9,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col7{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col10,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col7,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col16,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col12{\n",
        "            background-color:  #308cbe;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col11,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col7{\n",
        "            background-color:  #046299;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col12,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col7{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col13,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col7{\n",
        "            background-color:  #5c9fc9;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col16,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col7{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col9,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col8{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col10,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col8{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col11,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col8{\n",
        "            background-color:  #1c7fb8;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col12,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col8{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col15,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col8{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col16,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col8{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col11,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col9{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col12,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col9,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col16,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col15{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col16,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col9{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col11,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col10{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col12,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col10{\n",
        "            background-color:  #69a5cc;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col13,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col15,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col10,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col12{\n",
        "            background-color:  #589ec8;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col15,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col10{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col16,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col10{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col13,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col11{\n",
        "            background-color:  #6ba5cd;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col14,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col11{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col13,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col12{\n",
        "            background-color:  #2f8bbe;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col14,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col13{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col15,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col13{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col16,#T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col13{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col1\" class=\"data row0 col1\" >-0.272580</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col2\" class=\"data row0 col2\" >-0.068909</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col3\" class=\"data row0 col3\" >0.605173</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col4\" class=\"data row0 col4\" >-0.474587</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col5\" class=\"data row0 col5\" >-0.268207</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col6\" class=\"data row0 col6\" >-0.388057</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col7\" class=\"data row0 col7\" >-0.303942</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col8\" class=\"data row0 col8\" >-0.418585</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col9\" class=\"data row0 col9\" >-0.323135</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col10\" class=\"data row0 col10\" >-0.277249</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col11\" class=\"data row0 col11\" >-0.312866</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col12\" class=\"data row0 col12\" >-0.277684</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col13\" class=\"data row0 col13\" >-0.394654</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col14\" class=\"data row0 col14\" >-0.253810</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col15\" class=\"data row0 col15\" >-0.320302</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row0_col16\" class=\"data row0 col16\" >-0.303764</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col0\" class=\"data row1 col0\" >-0.272580</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col2\" class=\"data row1 col2\" >-0.036556</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col3\" class=\"data row1 col3\" >-0.323937</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col4\" class=\"data row1 col4\" >-0.084577</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col5\" class=\"data row1 col5\" >0.289528</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col6\" class=\"data row1 col6\" >0.070403</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col7\" class=\"data row1 col7\" >0.315309</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col8\" class=\"data row1 col8\" >0.040872</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col9\" class=\"data row1 col9\" >0.409207</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col10\" class=\"data row1 col10\" >0.092982</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col11\" class=\"data row1 col11\" >0.344604</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col12\" class=\"data row1 col12\" >0.015459</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col13\" class=\"data row1 col13\" >0.104126</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col14\" class=\"data row1 col14\" >-0.192262</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col15\" class=\"data row1 col15\" >0.148827</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row1_col16\" class=\"data row1 col16\" >0.114077</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col0\" class=\"data row2 col0\" >-0.068909</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col1\" class=\"data row2 col1\" >-0.036556</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col3\" class=\"data row2 col3\" >0.111207</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col4\" class=\"data row2 col4\" >0.125218</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col5\" class=\"data row2 col5\" >-0.096247</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col6\" class=\"data row2 col6\" >0.045517</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col7\" class=\"data row2 col7\" >0.114057</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col8\" class=\"data row2 col8\" >-0.092821</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col9\" class=\"data row2 col9\" >-0.006588</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col10\" class=\"data row2 col10\" >-0.042924</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col11\" class=\"data row2 col11\" >-0.076247</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col12\" class=\"data row2 col12\" >-0.025660</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col13\" class=\"data row2 col13\" >0.057453</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col14\" class=\"data row2 col14\" >-0.075546</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col15\" class=\"data row2 col15\" >0.029158</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row2_col16\" class=\"data row2 col16\" >-0.052642</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col0\" class=\"data row3 col0\" >0.605173</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col1\" class=\"data row3 col1\" >-0.323937</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col2\" class=\"data row3 col2\" >0.111207</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col4\" class=\"data row3 col4\" >0.022192</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col5\" class=\"data row3 col5\" >-0.428113</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col6\" class=\"data row3 col6\" >-0.312670</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col7\" class=\"data row3 col7\" >-0.200843</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col8\" class=\"data row3 col8\" >-0.217509</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col9\" class=\"data row3 col9\" >-0.491133</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col10\" class=\"data row3 col10\" >-0.192005</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col11\" class=\"data row3 col11\" >-0.221578</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col12\" class=\"data row3 col12\" >-0.302355</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col13\" class=\"data row3 col13\" >-0.290649</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col14\" class=\"data row3 col14\" >-0.293486</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col15\" class=\"data row3 col15\" >-0.225013</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row3_col16\" class=\"data row3 col16\" >-0.223668</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col0\" class=\"data row4 col0\" >-0.474587</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col1\" class=\"data row4 col1\" >-0.084577</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col2\" class=\"data row4 col2\" >0.125218</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col3\" class=\"data row4 col3\" >0.022192</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col5\" class=\"data row4 col5\" >0.013108</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col6\" class=\"data row4 col6\" >0.270381</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col7\" class=\"data row4 col7\" >0.209792</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col8\" class=\"data row4 col8\" >0.418716</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col9\" class=\"data row4 col9\" >-0.052835</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col10\" class=\"data row4 col10\" >0.268219</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col11\" class=\"data row4 col11\" >0.162835</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col12\" class=\"data row4 col12\" >0.085933</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col13\" class=\"data row4 col13\" >0.209342</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col14\" class=\"data row4 col14\" >0.088602</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col15\" class=\"data row4 col15\" >0.104866</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row4_col16\" class=\"data row4 col16\" >0.229442</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col0\" class=\"data row5 col0\" >-0.268207</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col1\" class=\"data row5 col1\" >0.289528</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col2\" class=\"data row5 col2\" >-0.096247</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col3\" class=\"data row5 col3\" >-0.428113</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col4\" class=\"data row5 col4\" >0.013108</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col6\" class=\"data row5 col6\" >0.609008</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col7\" class=\"data row5 col7\" >0.141039</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col8\" class=\"data row5 col8\" >0.304347</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col9\" class=\"data row5 col9\" >0.204219</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col10\" class=\"data row5 col10\" >0.486050</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col11\" class=\"data row5 col11\" >0.166103</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col12\" class=\"data row5 col12\" >0.262821</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col13\" class=\"data row5 col13\" >0.348315</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col14\" class=\"data row5 col14\" >0.071953</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col15\" class=\"data row5 col15\" >-0.006595</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row5_col16\" class=\"data row5 col16\" >0.672946</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col0\" class=\"data row6 col0\" >-0.388057</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col1\" class=\"data row6 col1\" >0.070403</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col2\" class=\"data row6 col2\" >0.045517</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col3\" class=\"data row6 col3\" >-0.312670</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col4\" class=\"data row6 col4\" >0.270381</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col5\" class=\"data row6 col5\" >0.609008</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col7\" class=\"data row6 col7\" >0.388603</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col8\" class=\"data row6 col8\" >0.559626</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col9\" class=\"data row6 col9\" >0.160375</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col10\" class=\"data row6 col10\" >0.728298</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col11\" class=\"data row6 col11\" >0.318813</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col12\" class=\"data row6 col12\" >0.350852</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col13\" class=\"data row6 col13\" >0.412285</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col14\" class=\"data row6 col14\" >-0.035255</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col15\" class=\"data row6 col15\" >-0.096468</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row6_col16\" class=\"data row6 col16\" >0.782949</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col0\" class=\"data row7 col0\" >-0.303942</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col1\" class=\"data row7 col1\" >0.315309</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col2\" class=\"data row7 col2\" >0.114057</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col3\" class=\"data row7 col3\" >-0.200843</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col4\" class=\"data row7 col4\" >0.209792</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col5\" class=\"data row7 col5\" >0.141039</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col6\" class=\"data row7 col6\" >0.388603</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col8\" class=\"data row7 col8\" >0.403279</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col9\" class=\"data row7 col9\" >0.598161</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col10\" class=\"data row7 col10\" >0.458380</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col11\" class=\"data row7 col11\" >0.743855</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col12\" class=\"data row7 col12\" >-0.018379</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col13\" class=\"data row7 col13\" >0.329742</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col14\" class=\"data row7 col14\" >-0.317549</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col15\" class=\"data row7 col15\" >0.094701</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row7_col16\" class=\"data row7 col16\" >0.431413</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col0\" class=\"data row8 col0\" >-0.418585</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col1\" class=\"data row8 col1\" >0.040872</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col2\" class=\"data row8 col2\" >-0.092821</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col3\" class=\"data row8 col3\" >-0.217509</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col4\" class=\"data row8 col4\" >0.418716</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col5\" class=\"data row8 col5\" >0.304347</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col6\" class=\"data row8 col6\" >0.559626</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col7\" class=\"data row8 col7\" >0.403279</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col9\" class=\"data row8 col9\" >0.222146</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col10\" class=\"data row8 col10\" >0.614577</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col11\" class=\"data row8 col11\" >0.534797</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col12\" class=\"data row8 col12\" >0.371006</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col13\" class=\"data row8 col13\" >0.482891</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col14\" class=\"data row8 col14\" >0.230372</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col15\" class=\"data row8 col15\" >0.167270</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row8_col16\" class=\"data row8 col16\" >0.653931</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col0\" class=\"data row9 col0\" >-0.323135</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col1\" class=\"data row9 col1\" >0.409207</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col2\" class=\"data row9 col2\" >-0.006588</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col3\" class=\"data row9 col3\" >-0.491133</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col4\" class=\"data row9 col4\" >-0.052835</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col5\" class=\"data row9 col5\" >0.204219</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col6\" class=\"data row9 col6\" >0.160375</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col7\" class=\"data row9 col7\" >0.598161</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col8\" class=\"data row9 col8\" >0.222146</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col10\" class=\"data row9 col10\" >0.227485</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col11\" class=\"data row9 col11\" >0.666560</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col12\" class=\"data row9 col12\" >-0.023691</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col13\" class=\"data row9 col13\" >0.227433</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col14\" class=\"data row9 col14\" >-0.096992</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col15\" class=\"data row9 col15\" >0.270765</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row9_col16\" class=\"data row9 col16\" >0.183165</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col0\" class=\"data row10 col0\" >-0.277249</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col1\" class=\"data row10 col1\" >0.092982</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col2\" class=\"data row10 col2\" >-0.042924</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col3\" class=\"data row10 col3\" >-0.192005</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col4\" class=\"data row10 col4\" >0.268219</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col5\" class=\"data row10 col5\" >0.486050</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col6\" class=\"data row10 col6\" >0.728298</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col7\" class=\"data row10 col7\" >0.458380</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col8\" class=\"data row10 col8\" >0.614577</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col9\" class=\"data row10 col9\" >0.227485</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col11\" class=\"data row10 col11\" >0.542262</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col12\" class=\"data row10 col12\" >0.288219</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col13\" class=\"data row10 col13\" >0.341530</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col14\" class=\"data row10 col14\" >-0.095180</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col15\" class=\"data row10 col15\" >-0.040040</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row10_col16\" class=\"data row10 col16\" >0.763261</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col0\" class=\"data row11 col0\" >-0.312866</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col1\" class=\"data row11 col1\" >0.344604</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col2\" class=\"data row11 col2\" >-0.076247</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col3\" class=\"data row11 col3\" >-0.221578</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col4\" class=\"data row11 col4\" >0.162835</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col5\" class=\"data row11 col5\" >0.166103</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col6\" class=\"data row11 col6\" >0.318813</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col7\" class=\"data row11 col7\" >0.743855</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col8\" class=\"data row11 col8\" >0.534797</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col9\" class=\"data row11 col9\" >0.666560</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col10\" class=\"data row11 col10\" >0.542262</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col12\" class=\"data row11 col12\" >0.014838</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col13\" class=\"data row11 col13\" >0.283245</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col14\" class=\"data row11 col14\" >-0.129817</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col15\" class=\"data row11 col15\" >0.160857</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row11_col16\" class=\"data row11 col16\" >0.400932</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col0\" class=\"data row12 col0\" >-0.277684</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col1\" class=\"data row12 col1\" >0.015459</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col2\" class=\"data row12 col2\" >-0.025660</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col3\" class=\"data row12 col3\" >-0.302355</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col4\" class=\"data row12 col4\" >0.085933</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col5\" class=\"data row12 col5\" >0.262821</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col6\" class=\"data row12 col6\" >0.350852</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col7\" class=\"data row12 col7\" >-0.018379</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col8\" class=\"data row12 col8\" >0.371006</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col9\" class=\"data row12 col9\" >-0.023691</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col10\" class=\"data row12 col10\" >0.288219</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col11\" class=\"data row12 col11\" >0.014838</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col13\" class=\"data row12 col13\" >0.467789</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col14\" class=\"data row12 col14\" >0.484306</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col15\" class=\"data row12 col15\" >0.340978</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row12_col16\" class=\"data row12 col16\" >0.458965</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col0\" class=\"data row13 col0\" >-0.394654</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col1\" class=\"data row13 col1\" >0.104126</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col2\" class=\"data row13 col2\" >0.057453</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col3\" class=\"data row13 col3\" >-0.290649</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col4\" class=\"data row13 col4\" >0.209342</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col5\" class=\"data row13 col5\" >0.348315</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col6\" class=\"data row13 col6\" >0.412285</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col7\" class=\"data row13 col7\" >0.329742</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col8\" class=\"data row13 col8\" >0.482891</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col9\" class=\"data row13 col9\" >0.227433</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col10\" class=\"data row13 col10\" >0.341530</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col11\" class=\"data row13 col11\" >0.283245</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col12\" class=\"data row13 col12\" >0.467789</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col14\" class=\"data row13 col14\" >0.449462</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col15\" class=\"data row13 col15\" >0.425068</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row13_col16\" class=\"data row13 col16\" >0.563811</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col0\" class=\"data row14 col0\" >-0.253810</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col1\" class=\"data row14 col1\" >-0.192262</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col2\" class=\"data row14 col2\" >-0.075546</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col3\" class=\"data row14 col3\" >-0.293486</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col4\" class=\"data row14 col4\" >0.088602</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col5\" class=\"data row14 col5\" >0.071953</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col6\" class=\"data row14 col6\" >-0.035255</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col7\" class=\"data row14 col7\" >-0.317549</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col8\" class=\"data row14 col8\" >0.230372</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col9\" class=\"data row14 col9\" >-0.096992</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col10\" class=\"data row14 col10\" >-0.095180</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col11\" class=\"data row14 col11\" >-0.129817</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col12\" class=\"data row14 col12\" >0.484306</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col13\" class=\"data row14 col13\" >0.449462</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col15\" class=\"data row14 col15\" >0.561498</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row14_col16\" class=\"data row14 col16\" >0.047069</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col0\" class=\"data row15 col0\" >-0.320302</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col1\" class=\"data row15 col1\" >0.148827</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col2\" class=\"data row15 col2\" >0.029158</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col3\" class=\"data row15 col3\" >-0.225013</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col4\" class=\"data row15 col4\" >0.104866</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col5\" class=\"data row15 col5\" >-0.006595</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col6\" class=\"data row15 col6\" >-0.096468</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col7\" class=\"data row15 col7\" >0.094701</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col8\" class=\"data row15 col8\" >0.167270</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col9\" class=\"data row15 col9\" >0.270765</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col10\" class=\"data row15 col10\" >-0.040040</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col11\" class=\"data row15 col11\" >0.160857</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col12\" class=\"data row15 col12\" >0.340978</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col13\" class=\"data row15 col13\" >0.425068</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col14\" class=\"data row15 col14\" >0.561498</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row15_col16\" class=\"data row15 col16\" >-0.024075</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col0\" class=\"data row16 col0\" >-0.303764</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col1\" class=\"data row16 col1\" >0.114077</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col2\" class=\"data row16 col2\" >-0.052642</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col3\" class=\"data row16 col3\" >-0.223668</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col4\" class=\"data row16 col4\" >0.229442</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col5\" class=\"data row16 col5\" >0.672946</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col6\" class=\"data row16 col6\" >0.782949</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col7\" class=\"data row16 col7\" >0.431413</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col8\" class=\"data row16 col8\" >0.653931</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col9\" class=\"data row16 col9\" >0.183165</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col10\" class=\"data row16 col10\" >0.763261</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col11\" class=\"data row16 col11\" >0.400932</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col12\" class=\"data row16 col12\" >0.458965</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col13\" class=\"data row16 col13\" >0.563811</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col14\" class=\"data row16 col14\" >0.047069</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col15\" class=\"data row16 col15\" >-0.024075</td>\n",
        "                        <td id=\"T_561b3e5e_3ef8_11eb_87df_5254000a75c6row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7fd774053940>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
