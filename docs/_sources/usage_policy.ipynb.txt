{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.13.0-alpha.fix.417'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "196"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **16th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{2: ['Solomon Islands', 'Holy See'],\n",
        " 3: ['Laos', 'Saint Kitts and Nevis', 'Timor-Leste', 'Tanzania'],\n",
        " 4: ['Brunei', 'Dominica', 'Saint Lucia', 'Grenada'],\n",
        " 5: ['Fiji', 'Equatorial Guinea'],\n",
        " 6: ['Antigua and Barbuda', 'Saint Vincent and the Grenadines', 'Mauritius'],\n",
        " 7: ['Gambia'],\n",
        " 8: ['Kyrgyzstan', 'Madagascar', 'Bahamas', 'Seychelles', 'Monaco',\n",
        "     'Trinidad and Tobago', 'Vietnam', 'Northern Mariana Islands', 'Cambodia'],\n",
        " 9: ['Djibouti', 'Burundi', 'Malawi', 'Barbados', 'Kazakhstan', 'Suriname',\n",
        "     'Republic of the Congo', 'Uzbekistan', 'Swaziland',\n",
        "     'Sao Tome and Principe', 'Australia', 'Oman', 'Lesotho', 'Zimbabwe',\n",
        "     'Ghana', 'Zambia', 'South Africa', 'Bolivia', 'Liechtenstein',\n",
        "     'Virgin Islands, U.S.'],\n",
        " 10: ['Singapore', 'Botswana', 'Ethiopia', 'Gabon', 'Kuwait', 'Israel', 'Syria',\n",
        "      'Venezuela', 'Saudi Arabia', 'Bahrain', 'Namibia', 'Mongolia', 'Honduras',\n",
        "      'Guyana', 'Angola', 'Bhutan', 'New Zealand', 'Maldives', 'Eritrea',\n",
        "      'Mozambique', 'Philippines', 'Rwanda', 'Guatemala', 'Comoros', 'Belize',\n",
        "      \"Cote d'Ivoire\", 'Jamaica', 'Libya', 'Senegal',\n",
        "      'Central African Republic', 'Bermuda', 'Benin', 'Liberia', 'Chile'],\n",
        " 11: ['Iceland', 'Dominican Republic', 'Cameroon', 'Montenegro', 'Kenya',\n",
        "      'Peru', 'Paraguay', 'Papua New Guinea', 'Guinea', 'Ecuador', 'Iraq',\n",
        "      'Mexico', 'Puerto Rico', 'Sudan', 'Nepal', 'El Salvador', 'Slovakia',\n",
        "      'Egypt', 'Nicaragua', 'Colombia', 'Pakistan', 'Algeria', 'Yemen', 'Togo',\n",
        "      'India', 'Sierra Leone', 'Bangladesh', 'Guam', 'Guinea-Bissau',\n",
        "      'Cape Verde', 'Panama', 'Costa Rica', 'Nigeria', 'Brazil', 'Jordan'],\n",
        " 12: ['San Marino', 'Qatar', 'Argentina', 'Japan', 'Tajikistan', 'South Sudan',\n",
        "      'Taiwan', 'Slovenia', 'Kosovo', 'Chad',\n",
        "      'Democratic Republic of the Congo', 'Tunisia', 'Indonesia', 'Niger',\n",
        "      'Azerbaijan'],\n",
        " 13: ['China', 'Andorra', 'Russia', 'Mauritania', 'Haiti', 'Myanmar', 'Georgia',\n",
        "      'Moldova', 'Palestine', 'Bulgaria', 'Somalia', 'Luxembourg',\n",
        "      'United Arab Emirates', 'United States', 'Poland', 'Malta', 'Sri Lanka',\n",
        "      'Belarus', 'Serbia', 'Mali', 'Hungary', 'Cyprus', 'Cuba', 'Uganda',\n",
        "      'Burkina Faso'],\n",
        " 14: ['Austria', 'Croatia', 'Thailand', 'Bosnia and Herzegovina', 'Greece',\n",
        "      'Uruguay', 'Latvia', 'Spain', 'Malaysia', 'Morocco', 'Norway', 'Iran',\n",
        "      'Afghanistan', 'Turkey', 'Armenia', 'Lithuania', 'Ireland'],\n",
        " 15: ['Lebanon', 'North Macedonia', 'Canada', 'Albania', 'Italy', 'Switzerland',\n",
        "      'Portugal', 'Sweden', 'Finland', 'Czech Republic', 'Estonia'],\n",
        " 16: ['Romania', 'Belgium', 'United Kingdom', 'Netherlands', 'Ukraine',\n",
        "      'Germany', 'Denmark', 'France']}\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=16)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "8"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{16: ['Romania', 'Belgium', 'United Kingdom', 'Netherlands', 'Ukraine',\n",
        "      'Germany', 'Denmark', 'France']}\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"5\" valign=\"top\">Romania</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Mar2020</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>19466145</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>02May2020</td>\n",
        "      <td>07Jul2020</td>\n",
        "      <td>19466145</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jul2020</td>\n",
        "      <td>30Jul2020</td>\n",
        "      <td>19466145</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>19Aug2020</td>\n",
        "      <td>19466145</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20Aug2020</td>\n",
        "      <td>09Sep2020</td>\n",
        "      <td>19466145</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>...</th>\n",
        "      <th>...</th>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"5\" valign=\"top\">France</th>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Nov2020</td>\n",
        "      <td>10Nov2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Nov2020</td>\n",
        "      <td>16Nov2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Nov2020</td>\n",
        "      <td>24Nov2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Nov2020</td>\n",
        "      <td>03Dec2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Dec2020</td>\n",
        "      <td>14Dec2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>128 rows \u00d7 4 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Romania 0th    Past  05Mar2020  01May2020    19466145\n",
        "        1st    Past  02May2020  07Jul2020    19466145\n",
        "        2nd    Past  08Jul2020  30Jul2020    19466145\n",
        "        3rd    Past  31Jul2020  19Aug2020    19466145\n",
        "        4th    Past  20Aug2020  09Sep2020    19466145\n",
        "...             ...        ...        ...         ...\n",
        "France  11th   Past  01Nov2020  10Nov2020    66977107\n",
        "        12th   Past  11Nov2020  16Nov2020    66977107\n",
        "        13th   Past  17Nov2020  24Nov2020    66977107\n",
        "        14th   Past  25Nov2020  03Dec2020    66977107\n",
        "        15th   Past  04Dec2020  14Dec2020    66977107\n",
        "\n",
        "[128 rows x 4 columns]"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF, timeout=10)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>\n",
        "Running optimization with 4 CPUs...\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 11th phase (01Nov2020 - 10Nov2020): finished  240 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  1st phase (01Apr2020 - 16Apr2020): finished  234 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  6th phase (18Sep2020 - 02Oct2020): finished  233 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  4th phase (20Aug2020 - 09Sep2020): finished  241 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  8th phase (22Oct2020 - 29Oct2020): finished  287 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU, 12th phase (18Nov2020 - 24Nov2020): finished  290 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  7th phase (01Oct2020 - 13Oct2020): finished  288 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  4th phase (16Jun2020 - 10Aug2020): finished  273 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 10th phase (22Oct2020 - 01Nov2020): finished  287 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  5th phase (18Aug2020 - 17Sep2020): finished  282 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 14th phase (24Nov2020 - 03Dec2020): finished  289 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  7th phase (03Oct2020 - 11Oct2020): finished  286 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (26Aug2020 - 09Sep2020): finished  283 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  4th phase (10Aug2020 - 08Sep2020): finished  279 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  5th phase (23Aug2020 - 14Sep2020): finished  282 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  2nd phase (05Apr2020 - 21Apr2020): finished  281 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  3rd phase (07May2020 - 27Jul2020): finished  265 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  8th phase (12Oct2020 - 19Oct2020): finished  289 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  1st phase (07Apr2020 - 23Apr2020): finished  287 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  2nd phase (08Jul2020 - 30Jul2020): finished  282 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (07Feb2020 - 30Mar2020): finished  276 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 12th phase (11Nov2020 - 16Nov2020): finished  289 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 13th phase (17Nov2020 - 27Nov2020): finished  287 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  1st phase (24Mar2020 - 04Apr2020): finished  284 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  6th phase (30Sep2020 - 11Oct2020): finished  284 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU, 15th phase (08Dec2020 - 14Dec2020): finished  287 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU, 13th phase (25Nov2020 - 01Dec2020): finished  288 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  3rd phase (13Jun2020 - 09Aug2020): finished  271 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  6th phase (15Sep2020 - 27Sep2020): finished  285 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (28Jul2020 - 25Aug2020): finished  281 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU, 14th phase (02Dec2020 - 07Dec2020): finished  290 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  5th phase (09Sep2020 - 20Sep2020): finished  284 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 13th phase (18Nov2020 - 23Nov2020): finished  286 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  6th phase (01Oct2020 - 11Oct2020): finished  285 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  8th phase (21Oct2020 - 28Oct2020): finished  284 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 10th phase (28Oct2020 - 02Nov2020): finished  287 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  0th phase (11Mar2020 - 31Mar2020): finished  258 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 15th phase (03Dec2020 - 14Dec2020): finished  260 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  1st phase (31Mar2020 - 13Apr2020): finished  258 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  9th phase (23Oct2020 - 29Oct2020): finished  263 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  9th phase (30Oct2020 - 05Nov2020): finished  286 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  1st phase (13Apr2020 - 02May2020): finished  281 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  4th phase (01Sep2020 - 16Sep2020): finished  281 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  0th phase (19Mar2020 - 12Apr2020): finished  281 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  5th phase (11Aug2020 - 08Sep2020): finished  205 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 10th phase (26Oct2020 - 05Nov2020): finished  199 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  3rd phase (22Apr2020 - 15Jun2020): finished  181 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  5th phase (17Sep2020 - 30Sep2020): finished  194 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 14th phase (25Nov2020 - 03Dec2020): finished  172 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  4th phase (12Jun2020 - 17Aug2020): finished  161 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  8th phase (14Oct2020 - 21Oct2020): finished  173 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 11th phase (13Nov2020 - 18Nov2020): finished  176 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  1st phase (02May2020 - 07Jul2020): finished  174 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  1st phase (31May2020 - 08Jul2020): finished  174 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 11th phase (02Nov2020 - 07Nov2020): finished  183 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 13th phase (26Nov2020 - 01Dec2020): finished  178 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  5th phase (10Sep2020 - 29Sep2020): finished  216 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  6th phase (21Sep2020 - 30Sep2020): finished  223 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  2nd phase (03May2020 - 12Jun2020): finished  205 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  2nd phase (17Apr2020 - 22May2020): finished  209 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 11th phase (05Nov2020 - 10Nov2020): finished  186 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  9th phase (16Oct2020 - 25Oct2020): finished  171 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  0th phase (14Jan2020 - 23Mar2020): finished  168 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  7th phase (01Oct2020 - 12Oct2020): finished  177 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  9th phase (22Oct2020 - 27Oct2020): finished  180 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  3rd phase (31Jul2020 - 19Aug2020): finished  171 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 12th phase (19Nov2020 - 25Nov2020): finished  177 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (01Oct2020 - 08Oct2020): finished  184 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (22Oct2020 - 31Oct2020): finished  254 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU, 10th phase (05Nov2020 - 11Nov2020): finished  258 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  7th phase (28Sep2020 - 05Oct2020): finished  253 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (31Mar2020 - 25Apr2020): finished  252 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  7th phase (12Oct2020 - 20Oct2020): finished  264 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  8th phase (06Oct2020 - 15Oct2020): finished  249 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  9th phase (29Oct2020 - 04Nov2020): finished  246 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (16Oct2020 - 21Oct2020): finished  260 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 13th phase (17Nov2020 - 24Nov2020): finished  206 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  4th phase (28Jul2020 - 22Aug2020): finished  199 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 12th phase (08Nov2020 - 14Nov2020): finished  189 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  5th phase (06Sep2020 - 19Sep2020): finished  195 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 10th phase (30Oct2020 - 04Nov2020): finished  148 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 12th phase (13Nov2020 - 24Nov2020): finished  163 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (22Sep2020 - 30Sep2020): finished  156 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  8th phase (06Oct2020 - 11Oct2020): finished  161 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  0th phase (05Mar2020 - 01May2020): finished  162 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 11th phase (03Nov2020 - 12Nov2020): finished  159 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  8th phase (13Oct2020 - 22Oct2020): finished  183 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 14th phase (23Nov2020 - 02Dec2020): finished  171 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (10Sep2020 - 21Sep2020): finished  161 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  3rd phase (23May2020 - 08Aug2020): finished  137 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  6th phase (20Sep2020 - 28Sep2020): finished  153 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 13th phase (15Nov2020 - 22Nov2020): finished  145 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  2nd phase (14Apr2020 - 06May2020): finished  113 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (26Apr2020 - 27Jul2020): finished  100 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 11th phase (06Nov2020 - 11Nov2020): finished  127 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  2nd phase (09Jul2020 - 11Aug2020): finished  111 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  3rd phase (12May2020 - 11Jun2020): finished  159 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 14th phase (28Nov2020 - 03Dec2020): finished  163 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  0th phase (18Feb2020 - 06Apr2020): finished  158 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 15th phase (02Dec2020 - 14Dec2020): finished  171 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  9th phase (12Oct2020 - 21Oct2020): finished  177 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU, 11th phase (12Nov2020 - 17Nov2020): finished  180 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  7th phase (29Sep2020 - 05Oct2020): finished  151 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  4th phase (09Aug2020 - 05Sep2020): finished  147 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  0th phase (21Mar2020 - 30May2020): finished  165 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (09Oct2020 - 15Oct2020): finished  182 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  9th phase (20Oct2020 - 25Oct2020): finished  189 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 15th phase (04Dec2020 - 14Dec2020): finished  187 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  6th phase (09Sep2020 - 30Sep2020): finished  178 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 10th phase (06Nov2020 - 12Nov2020): finished  180 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  0th phase (13Mar2020 - 30Mar2020): finished  173 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  3rd phase (12Aug2020 - 31Aug2020): finished  175 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 10th phase (26Oct2020 - 04Nov2020): finished  190 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  2nd phase (24Apr2020 - 11May2020): finished  199 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 5 min 58 sec\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"5\" valign=\"top\">Romania</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Mar2020</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>19466145</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>6.95</td>\n",
        "      <td>0.11933</td>\n",
        "      <td>0.000540261</td>\n",
        "      <td>0.0344721</td>\n",
        "      <td>0.00382897</td>\n",
        "      <td>360</td>\n",
        "      <td>65</td>\n",
        "      <td>7</td>\n",
        "      <td>462</td>\n",
        "      <td>0.119</td>\n",
        "      <td>2.19933</td>\n",
        "      <td>162</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>02May2020</td>\n",
        "      <td>07Jul2020</td>\n",
        "      <td>19466145</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.97</td>\n",
        "      <td>0.000349104</td>\n",
        "      <td>0.000708708</td>\n",
        "      <td>0.0116218</td>\n",
        "      <td>0.0112979</td>\n",
        "      <td>360</td>\n",
        "      <td>22</td>\n",
        "      <td>21</td>\n",
        "      <td>352</td>\n",
        "      <td>0</td>\n",
        "      <td>0.181357</td>\n",
        "      <td>174</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jul2020</td>\n",
        "      <td>30Jul2020</td>\n",
        "      <td>19466145</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.48</td>\n",
        "      <td>0.0197577</td>\n",
        "      <td>0.000191478</td>\n",
        "      <td>0.0161024</td>\n",
        "      <td>0.0043466</td>\n",
        "      <td>360</td>\n",
        "      <td>57</td>\n",
        "      <td>15</td>\n",
        "      <td>1305</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.0259263</td>\n",
        "      <td>282</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>19Aug2020</td>\n",
        "      <td>19466145</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.24</td>\n",
        "      <td>0.00501459</td>\n",
        "      <td>0.000301308</td>\n",
        "      <td>0.0116219</td>\n",
        "      <td>0.00327319</td>\n",
        "      <td>360</td>\n",
        "      <td>76</td>\n",
        "      <td>21</td>\n",
        "      <td>829</td>\n",
        "      <td>0.005</td>\n",
        "      <td>0.0156223</td>\n",
        "      <td>171</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20Aug2020</td>\n",
        "      <td>09Sep2020</td>\n",
        "      <td>19466145</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.87</td>\n",
        "      <td>0.180158</td>\n",
        "      <td>5.91157e-05</td>\n",
        "      <td>0.00694699</td>\n",
        "      <td>0.00192542</td>\n",
        "      <td>360</td>\n",
        "      <td>129</td>\n",
        "      <td>35</td>\n",
        "      <td>4228</td>\n",
        "      <td>0.18</td>\n",
        "      <td>0.239542</td>\n",
        "      <td>241</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>...</th>\n",
        "      <th>...</th>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"5\" valign=\"top\">France</th>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Nov2020</td>\n",
        "      <td>10Nov2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.47</td>\n",
        "      <td>0.00146091</td>\n",
        "      <td>0.000191072</td>\n",
        "      <td>0.0266021</td>\n",
        "      <td>0.0178662</td>\n",
        "      <td>360</td>\n",
        "      <td>13</td>\n",
        "      <td>9</td>\n",
        "      <td>1308</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0411894</td>\n",
        "      <td>240</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Nov2020</td>\n",
        "      <td>16Nov2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Nov2020</td>\n",
        "      <td>24Nov2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.44</td>\n",
        "      <td>0.0187149</td>\n",
        "      <td>0.000191478</td>\n",
        "      <td>0.01434</td>\n",
        "      <td>0.0316075</td>\n",
        "      <td>360</td>\n",
        "      <td>7</td>\n",
        "      <td>17</td>\n",
        "      <td>1305</td>\n",
        "      <td>0.019</td>\n",
        "      <td>0.0330913</td>\n",
        "      <td>206</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Nov2020</td>\n",
        "      <td>03Dec2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.38</td>\n",
        "      <td>0.0765407</td>\n",
        "      <td>0.00018026</td>\n",
        "      <td>0.0156963</td>\n",
        "      <td>0.0384069</td>\n",
        "      <td>360</td>\n",
        "      <td>6</td>\n",
        "      <td>15</td>\n",
        "      <td>1386</td>\n",
        "      <td>0.077</td>\n",
        "      <td>0.052763</td>\n",
        "      <td>172</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Dec2020</td>\n",
        "      <td>14Dec2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>128 rows \u00d7 18 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt  \\\n",
        "Country Phase                                                        \n",
        "Romania 0th    Past  05Mar2020  01May2020    19466145  SIR-F  6.95   \n",
        "        1st    Past  02May2020  07Jul2020    19466145  SIR-F  0.97   \n",
        "        2nd    Past  08Jul2020  30Jul2020    19466145  SIR-F  3.48   \n",
        "        3rd    Past  31Jul2020  19Aug2020    19466145  SIR-F  3.24   \n",
        "        4th    Past  20Aug2020  09Sep2020    19466145  SIR-F  2.87   \n",
        "...             ...        ...        ...         ...    ...   ...   \n",
        "France  11th   Past  01Nov2020  10Nov2020    66977107  SIR-F  1.47   \n",
        "        12th   Past  11Nov2020  16Nov2020    66977107      -     -   \n",
        "        13th   Past  17Nov2020  24Nov2020    66977107  SIR-F  0.44   \n",
        "        14th   Past  25Nov2020  03Dec2020    66977107  SIR-F  0.38   \n",
        "        15th   Past  04Dec2020  14Dec2020    66977107      -     -   \n",
        "\n",
        "                     theta        kappa         rho       sigma  tau  \\\n",
        "Country Phase                                                          \n",
        "Romania 0th        0.11933  0.000540261   0.0344721  0.00382897  360   \n",
        "        1st    0.000349104  0.000708708   0.0116218   0.0112979  360   \n",
        "        2nd      0.0197577  0.000191478   0.0161024   0.0043466  360   \n",
        "        3rd     0.00501459  0.000301308   0.0116219  0.00327319  360   \n",
        "        4th       0.180158  5.91157e-05  0.00694699  0.00192542  360   \n",
        "...                    ...          ...         ...         ...  ...   \n",
        "France  11th    0.00146091  0.000191072   0.0266021   0.0178662  360   \n",
        "        12th             -            -           -           -    -   \n",
        "        13th     0.0187149  0.000191478     0.01434   0.0316075  360   \n",
        "        14th     0.0765407   0.00018026   0.0156963   0.0384069  360   \n",
        "        15th             -            -           -           -    -   \n",
        "\n",
        "              1/gamma [day] 1/beta [day] 1/alpha2 [day] alpha1 [-]      RMSLE  \\\n",
        "Country Phase                                                                   \n",
        "Romania 0th              65            7            462      0.119    2.19933   \n",
        "        1st              22           21            352          0   0.181357   \n",
        "        2nd              57           15           1305       0.02  0.0259263   \n",
        "        3rd              76           21            829      0.005  0.0156223   \n",
        "        4th             129           35           4228       0.18   0.239542   \n",
        "...                     ...          ...            ...        ...        ...   \n",
        "France  11th             13            9           1308      0.001  0.0411894   \n",
        "        12th              -            -              -          -          -   \n",
        "        13th              7           17           1305      0.019  0.0330913   \n",
        "        14th              6           15           1386      0.077   0.052763   \n",
        "        15th              -            -              -          -          -   \n",
        "\n",
        "              Trials       Runtime  \n",
        "Country Phase                       \n",
        "Romania 0th      162  0 min 10 sec  \n",
        "        1st      174  0 min 10 sec  \n",
        "        2nd      282  0 min 10 sec  \n",
        "        3rd      171  0 min 10 sec  \n",
        "        4th      241  0 min 10 sec  \n",
        "...              ...           ...  \n",
        "France  11th     240  0 min 10 sec  \n",
        "        12th       -             -  \n",
        "        13th     206  0 min 10 sec  \n",
        "        14th     172  0 min 10 sec  \n",
        "        15th       -             -  \n",
        "\n",
        "[128 rows x 18 columns]"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-03-05</td>\n",
        "      <td>Romania</td>\n",
        "      <td>0.11933</td>\n",
        "      <td>0.000540261</td>\n",
        "      <td>0.0344721</td>\n",
        "      <td>0.00382897</td>\n",
        "      <td>0.119</td>\n",
        "      <td>462</td>\n",
        "      <td>7</td>\n",
        "      <td>65</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>16.67</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-03-06</td>\n",
        "      <td>Romania</td>\n",
        "      <td>0.11933</td>\n",
        "      <td>0.000540261</td>\n",
        "      <td>0.0344721</td>\n",
        "      <td>0.00382897</td>\n",
        "      <td>0.119</td>\n",
        "      <td>462</td>\n",
        "      <td>7</td>\n",
        "      <td>65</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>16.67</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-03-07</td>\n",
        "      <td>Romania</td>\n",
        "      <td>0.11933</td>\n",
        "      <td>0.000540261</td>\n",
        "      <td>0.0344721</td>\n",
        "      <td>0.00382897</td>\n",
        "      <td>0.119</td>\n",
        "      <td>462</td>\n",
        "      <td>7</td>\n",
        "      <td>65</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>16.67</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-03-08</td>\n",
        "      <td>Romania</td>\n",
        "      <td>0.11933</td>\n",
        "      <td>0.000540261</td>\n",
        "      <td>0.0344721</td>\n",
        "      <td>0.00382897</td>\n",
        "      <td>0.119</td>\n",
        "      <td>462</td>\n",
        "      <td>7</td>\n",
        "      <td>65</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-03-09</td>\n",
        "      <td>Romania</td>\n",
        "      <td>0.11933</td>\n",
        "      <td>0.000540261</td>\n",
        "      <td>0.0344721</td>\n",
        "      <td>0.00382897</td>\n",
        "      <td>0.119</td>\n",
        "      <td>462</td>\n",
        "      <td>7</td>\n",
        "      <td>65</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>33.33</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date  Country    theta        kappa        rho       sigma alpha1 [-]  \\\n",
        "0 2020-03-05  Romania  0.11933  0.000540261  0.0344721  0.00382897      0.119   \n",
        "1 2020-03-06  Romania  0.11933  0.000540261  0.0344721  0.00382897      0.119   \n",
        "2 2020-03-07  Romania  0.11933  0.000540261  0.0344721  0.00382897      0.119   \n",
        "3 2020-03-08  Romania  0.11933  0.000540261  0.0344721  0.00382897      0.119   \n",
        "4 2020-03-09  Romania  0.11933  0.000540261  0.0344721  0.00382897      0.119   \n",
        "\n",
        "  1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0            462            7            65  ...             0   \n",
        "1            462            7            65  ...             0   \n",
        "2            462            7            65  ...             0   \n",
        "3            462            7            65  ...             2   \n",
        "4            462            7            65  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        1                  0                       0   \n",
        "4                        1                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    2   \n",
        "1                               0                                    2   \n",
        "2                               0                                    2   \n",
        "3                               0                                    2   \n",
        "4                               0                                    3   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               0                0             16.67  \n",
        "1                      2               0                0             16.67  \n",
        "2                      2               0                0             16.67  \n",
        "3                      2               0                0             30.56  \n",
        "4                      2               0                0             33.33  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>France</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-10</th>\n",
        "      <td>0.93</td>\n",
        "      <td>1.14</td>\n",
        "      <td>0.38</td>\n",
        "      <td>0.78</td>\n",
        "      <td>1.67</td>\n",
        "      <td>0.79</td>\n",
        "      <td>1.73</td>\n",
        "      <td>1.15</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-11</th>\n",
        "      <td>0.93</td>\n",
        "      <td>1.14</td>\n",
        "      <td>0.38</td>\n",
        "      <td>0.78</td>\n",
        "      <td>1.67</td>\n",
        "      <td>0.79</td>\n",
        "      <td>1.73</td>\n",
        "      <td>1.15</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>0.93</td>\n",
        "      <td>1.14</td>\n",
        "      <td>0.38</td>\n",
        "      <td>0.78</td>\n",
        "      <td>1.67</td>\n",
        "      <td>0.79</td>\n",
        "      <td>1.73</td>\n",
        "      <td>1.15</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>0.93</td>\n",
        "      <td>1.14</td>\n",
        "      <td>0.38</td>\n",
        "      <td>0.78</td>\n",
        "      <td>1.67</td>\n",
        "      <td>0.79</td>\n",
        "      <td>1.73</td>\n",
        "      <td>1.15</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-14</th>\n",
        "      <td>0.93</td>\n",
        "      <td>1.14</td>\n",
        "      <td>0.38</td>\n",
        "      <td>0.78</td>\n",
        "      <td>1.67</td>\n",
        "      <td>0.79</td>\n",
        "      <td>1.73</td>\n",
        "      <td>1.15</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Belgium  Denmark  France  Germany  Netherlands  Romania  Ukraine  \\\n",
        "Date                                                                           \n",
        "2020-12-10     0.93     1.14    0.38     0.78         1.67     0.79     1.73   \n",
        "2020-12-11     0.93     1.14    0.38     0.78         1.67     0.79     1.73   \n",
        "2020-12-12     0.93     1.14    0.38     0.78         1.67     0.79     1.73   \n",
        "2020-12-13     0.93     1.14    0.38     0.78         1.67     0.79     1.73   \n",
        "2020-12-14     0.93     1.14    0.38     0.78         1.67     0.79     1.73   \n",
        "\n",
        "Country     United Kingdom  \n",
        "Date                        \n",
        "2020-12-10            1.15  \n",
        "2020-12-11            1.15  \n",
        "2020-12-12            1.15  \n",
        "2020-12-13            1.15  \n",
        "2020-12-14            1.15  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>France</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-10</th>\n",
        "      <td>0.026423</td>\n",
        "      <td>0.020305</td>\n",
        "      <td>0.015696</td>\n",
        "      <td>0.01809</td>\n",
        "      <td>0.028889</td>\n",
        "      <td>0.018333</td>\n",
        "      <td>0.010793</td>\n",
        "      <td>0.023829</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-11</th>\n",
        "      <td>0.026423</td>\n",
        "      <td>0.020305</td>\n",
        "      <td>0.015696</td>\n",
        "      <td>0.01809</td>\n",
        "      <td>0.028889</td>\n",
        "      <td>0.018333</td>\n",
        "      <td>0.010793</td>\n",
        "      <td>0.023829</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>0.026423</td>\n",
        "      <td>0.020305</td>\n",
        "      <td>0.015696</td>\n",
        "      <td>0.01809</td>\n",
        "      <td>0.028889</td>\n",
        "      <td>0.018333</td>\n",
        "      <td>0.010793</td>\n",
        "      <td>0.023829</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>0.026423</td>\n",
        "      <td>0.020305</td>\n",
        "      <td>0.015696</td>\n",
        "      <td>0.01809</td>\n",
        "      <td>0.028889</td>\n",
        "      <td>0.018333</td>\n",
        "      <td>0.010793</td>\n",
        "      <td>0.023829</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-14</th>\n",
        "      <td>0.026423</td>\n",
        "      <td>0.020305</td>\n",
        "      <td>0.015696</td>\n",
        "      <td>0.01809</td>\n",
        "      <td>0.028889</td>\n",
        "      <td>0.018333</td>\n",
        "      <td>0.010793</td>\n",
        "      <td>0.023829</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Belgium   Denmark    France  Germany  Netherlands   Romania  \\\n",
        "Date                                                                       \n",
        "2020-12-10  0.026423  0.020305  0.015696  0.01809     0.028889  0.018333   \n",
        "2020-12-11  0.026423  0.020305  0.015696  0.01809     0.028889  0.018333   \n",
        "2020-12-12  0.026423  0.020305  0.015696  0.01809     0.028889  0.018333   \n",
        "2020-12-13  0.026423  0.020305  0.015696  0.01809     0.028889  0.018333   \n",
        "2020-12-14  0.026423  0.020305  0.015696  0.01809     0.028889  0.018333   \n",
        "\n",
        "Country      Ukraine  United Kingdom  \n",
        "Date                                  \n",
        "2020-12-10  0.010793        0.023829  \n",
        "2020-12-11  0.010793        0.023829  \n",
        "2020-12-12  0.010793        0.023829  \n",
        "2020-12-13  0.010793        0.023829  \n",
        "2020-12-14  0.010793        0.023829  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>France</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-10</th>\n",
        "      <td>0.027651</td>\n",
        "      <td>0.017685</td>\n",
        "      <td>0.038407</td>\n",
        "      <td>0.022628</td>\n",
        "      <td>0.017212</td>\n",
        "      <td>0.022524</td>\n",
        "      <td>0.006071</td>\n",
        "      <td>0.019634</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-11</th>\n",
        "      <td>0.027651</td>\n",
        "      <td>0.017685</td>\n",
        "      <td>0.038407</td>\n",
        "      <td>0.022628</td>\n",
        "      <td>0.017212</td>\n",
        "      <td>0.022524</td>\n",
        "      <td>0.006071</td>\n",
        "      <td>0.019634</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>0.027651</td>\n",
        "      <td>0.017685</td>\n",
        "      <td>0.038407</td>\n",
        "      <td>0.022628</td>\n",
        "      <td>0.017212</td>\n",
        "      <td>0.022524</td>\n",
        "      <td>0.006071</td>\n",
        "      <td>0.019634</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>0.027651</td>\n",
        "      <td>0.017685</td>\n",
        "      <td>0.038407</td>\n",
        "      <td>0.022628</td>\n",
        "      <td>0.017212</td>\n",
        "      <td>0.022524</td>\n",
        "      <td>0.006071</td>\n",
        "      <td>0.019634</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-14</th>\n",
        "      <td>0.027651</td>\n",
        "      <td>0.017685</td>\n",
        "      <td>0.038407</td>\n",
        "      <td>0.022628</td>\n",
        "      <td>0.017212</td>\n",
        "      <td>0.022524</td>\n",
        "      <td>0.006071</td>\n",
        "      <td>0.019634</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Belgium   Denmark    France   Germany  Netherlands   Romania  \\\n",
        "Date                                                                        \n",
        "2020-12-10  0.027651  0.017685  0.038407  0.022628     0.017212  0.022524   \n",
        "2020-12-11  0.027651  0.017685  0.038407  0.022628     0.017212  0.022524   \n",
        "2020-12-12  0.027651  0.017685  0.038407  0.022628     0.017212  0.022524   \n",
        "2020-12-13  0.027651  0.017685  0.038407  0.022628     0.017212  0.022524   \n",
        "2020-12-14  0.027651  0.017685  0.038407  0.022628     0.017212  0.022524   \n",
        "\n",
        "Country      Ukraine  United Kingdom  \n",
        "Date                                  \n",
        "2020-12-10  0.006071        0.019634  \n",
        "2020-12-11  0.006071        0.019634  \n",
        "2020-12-12  0.006071        0.019634  \n",
        "2020-12-13  0.006071        0.019634  \n",
        "2020-12-14  0.006071        0.019634  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>France</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-10</th>\n",
        "      <td>0.00018</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.00018</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000557</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-11</th>\n",
        "      <td>0.00018</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.00018</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000557</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>0.00018</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.00018</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000557</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>0.00018</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.00018</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000557</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-14</th>\n",
        "      <td>0.00018</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.00018</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000557</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country     Belgium   Denmark   France   Germany  Netherlands   Romania  \\\n",
        "Date                                                                      \n",
        "2020-12-10  0.00018  0.000059  0.00018  0.000463     0.000014  0.000301   \n",
        "2020-12-11  0.00018  0.000059  0.00018  0.000463     0.000014  0.000301   \n",
        "2020-12-12  0.00018  0.000059  0.00018  0.000463     0.000014  0.000301   \n",
        "2020-12-13  0.00018  0.000059  0.00018  0.000463     0.000014  0.000301   \n",
        "2020-12-14  0.00018  0.000059  0.00018  0.000463     0.000014  0.000301   \n",
        "\n",
        "Country      Ukraine  United Kingdom  \n",
        "Date                                  \n",
        "2020-12-10  0.000014        0.000557  \n",
        "2020-12-11  0.000014        0.000557  \n",
        "2020-12-12  0.000014        0.000557  \n",
        "2020-12-13  0.000014        0.000557  \n",
        "2020-12-14  0.000014        0.000557  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>France</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-10</th>\n",
        "      <td>0.021906</td>\n",
        "      <td>0.002505</td>\n",
        "      <td>0.076541</td>\n",
        "      <td>0.002532</td>\n",
        "      <td>0.004924</td>\n",
        "      <td>0.010554</td>\n",
        "      <td>0.023906</td>\n",
        "      <td>0.023216</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-11</th>\n",
        "      <td>0.021906</td>\n",
        "      <td>0.002505</td>\n",
        "      <td>0.076541</td>\n",
        "      <td>0.002532</td>\n",
        "      <td>0.004924</td>\n",
        "      <td>0.010554</td>\n",
        "      <td>0.023906</td>\n",
        "      <td>0.023216</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>0.021906</td>\n",
        "      <td>0.002505</td>\n",
        "      <td>0.076541</td>\n",
        "      <td>0.002532</td>\n",
        "      <td>0.004924</td>\n",
        "      <td>0.010554</td>\n",
        "      <td>0.023906</td>\n",
        "      <td>0.023216</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>0.021906</td>\n",
        "      <td>0.002505</td>\n",
        "      <td>0.076541</td>\n",
        "      <td>0.002532</td>\n",
        "      <td>0.004924</td>\n",
        "      <td>0.010554</td>\n",
        "      <td>0.023906</td>\n",
        "      <td>0.023216</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-14</th>\n",
        "      <td>0.021906</td>\n",
        "      <td>0.002505</td>\n",
        "      <td>0.076541</td>\n",
        "      <td>0.002532</td>\n",
        "      <td>0.004924</td>\n",
        "      <td>0.010554</td>\n",
        "      <td>0.023906</td>\n",
        "      <td>0.023216</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Belgium   Denmark    France   Germany  Netherlands   Romania  \\\n",
        "Date                                                                        \n",
        "2020-12-10  0.021906  0.002505  0.076541  0.002532     0.004924  0.010554   \n",
        "2020-12-11  0.021906  0.002505  0.076541  0.002532     0.004924  0.010554   \n",
        "2020-12-12  0.021906  0.002505  0.076541  0.002532     0.004924  0.010554   \n",
        "2020-12-13  0.021906  0.002505  0.076541  0.002532     0.004924  0.010554   \n",
        "2020-12-14  0.021906  0.002505  0.076541  0.002532     0.004924  0.010554   \n",
        "\n",
        "Country      Ukraine  United Kingdom  \n",
        "Date                                  \n",
        "2020-12-10  0.023906        0.023216  \n",
        "2020-12-11  0.023906        0.023216  \n",
        "2020-12-12  0.023906        0.023216  \n",
        "2020-12-13  0.023906        0.023216  \n",
        "2020-12-14  0.023906        0.023216  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 26726 entries, 0 to 26823\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 26726 non-null  datetime64[ns]\n",
        " 1   Country                              26726 non-null  object        \n",
        " 2   Rt                                   26726 non-null  float64       \n",
        " 3   theta                                26726 non-null  float64       \n",
        " 4   kappa                                26726 non-null  float64       \n",
        " 5   rho                                  26726 non-null  float64       \n",
        " 6   sigma                                26726 non-null  float64       \n",
        " 7   School_closing                       26726 non-null  int64         \n",
        " 8   Workplace_closing                    26726 non-null  int64         \n",
        " 9   Cancel_events                        26726 non-null  int64         \n",
        " 10  Gatherings_restrictions              26726 non-null  int64         \n",
        " 11  Transport_closing                    26726 non-null  int64         \n",
        " 12  Stay_home_restrictions               26726 non-null  int64         \n",
        " 13  Internal_movement_restrictions       26726 non-null  int64         \n",
        " 14  International_movement_restrictions  26726 non-null  int64         \n",
        " 15  Information_campaigns                26726 non-null  int64         \n",
        " 16  Testing_policy                       26726 non-null  int64         \n",
        " 17  Contact_tracing                      26726 non-null  int64         \n",
        " 18  Stringency_index                     26726 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 4.1+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_c864303c_3e13_11eb_b47c_52540020dc66row0_col0,#T_c864303c_3e13_11eb_b47c_52540020dc66row1_col1,#T_c864303c_3e13_11eb_b47c_52540020dc66row2_col2,#T_c864303c_3e13_11eb_b47c_52540020dc66row3_col3,#T_c864303c_3e13_11eb_b47c_52540020dc66row4_col4,#T_c864303c_3e13_11eb_b47c_52540020dc66row5_col5,#T_c864303c_3e13_11eb_b47c_52540020dc66row6_col6,#T_c864303c_3e13_11eb_b47c_52540020dc66row7_col7,#T_c864303c_3e13_11eb_b47c_52540020dc66row8_col8,#T_c864303c_3e13_11eb_b47c_52540020dc66row9_col9,#T_c864303c_3e13_11eb_b47c_52540020dc66row10_col10,#T_c864303c_3e13_11eb_b47c_52540020dc66row11_col11,#T_c864303c_3e13_11eb_b47c_52540020dc66row12_col12,#T_c864303c_3e13_11eb_b47c_52540020dc66row13_col13,#T_c864303c_3e13_11eb_b47c_52540020dc66row14_col14,#T_c864303c_3e13_11eb_b47c_52540020dc66row15_col15,#T_c864303c_3e13_11eb_b47c_52540020dc66row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row0_col1,#T_c864303c_3e13_11eb_b47c_52540020dc66row1_col0{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row0_col2,#T_c864303c_3e13_11eb_b47c_52540020dc66row2_col0{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row0_col3,#T_c864303c_3e13_11eb_b47c_52540020dc66row3_col0{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row0_col4,#T_c864303c_3e13_11eb_b47c_52540020dc66row4_col0{\n",
        "            background-color:  #fef6fa;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row0_col5,#T_c864303c_3e13_11eb_b47c_52540020dc66row5_col0{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row0_col6,#T_c864303c_3e13_11eb_b47c_52540020dc66row0_col13,#T_c864303c_3e13_11eb_b47c_52540020dc66row3_col8,#T_c864303c_3e13_11eb_b47c_52540020dc66row6_col0,#T_c864303c_3e13_11eb_b47c_52540020dc66row8_col3,#T_c864303c_3e13_11eb_b47c_52540020dc66row13_col0{\n",
        "            background-color:  #eee9f3;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row0_col7,#T_c864303c_3e13_11eb_b47c_52540020dc66row7_col0{\n",
        "            background-color:  #f4eef6;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row0_col8,#T_c864303c_3e13_11eb_b47c_52540020dc66row8_col0{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row0_col9,#T_c864303c_3e13_11eb_b47c_52540020dc66row9_col0{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row0_col10,#T_c864303c_3e13_11eb_b47c_52540020dc66row10_col0{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row0_col11,#T_c864303c_3e13_11eb_b47c_52540020dc66row11_col0{\n",
        "            background-color:  #e9e5f1;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row0_col12,#T_c864303c_3e13_11eb_b47c_52540020dc66row12_col0{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row0_col14,#T_c864303c_3e13_11eb_b47c_52540020dc66row14_col0{\n",
        "            background-color:  #ebe6f2;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row0_col15,#T_c864303c_3e13_11eb_b47c_52540020dc66row15_col0{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row0_col16,#T_c864303c_3e13_11eb_b47c_52540020dc66row16_col0{\n",
        "            background-color:  #f1ebf5;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row1_col2,#T_c864303c_3e13_11eb_b47c_52540020dc66row2_col1{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row1_col3,#T_c864303c_3e13_11eb_b47c_52540020dc66row3_col1{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row1_col4,#T_c864303c_3e13_11eb_b47c_52540020dc66row4_col1{\n",
        "            background-color:  #4897c4;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row1_col5,#T_c864303c_3e13_11eb_b47c_52540020dc66row5_col1{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row1_col6,#T_c864303c_3e13_11eb_b47c_52540020dc66row6_col1,#T_c864303c_3e13_11eb_b47c_52540020dc66row8_col15,#T_c864303c_3e13_11eb_b47c_52540020dc66row15_col8{\n",
        "            background-color:  #4094c3;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row1_col7,#T_c864303c_3e13_11eb_b47c_52540020dc66row7_col1{\n",
        "            background-color:  #549cc7;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row1_col8,#T_c864303c_3e13_11eb_b47c_52540020dc66row2_col10,#T_c864303c_3e13_11eb_b47c_52540020dc66row8_col1,#T_c864303c_3e13_11eb_b47c_52540020dc66row10_col2{\n",
        "            background-color:  #71a8ce;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row1_col9,#T_c864303c_3e13_11eb_b47c_52540020dc66row9_col1{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row1_col10,#T_c864303c_3e13_11eb_b47c_52540020dc66row10_col1{\n",
        "            background-color:  #3d93c2;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row1_col11,#T_c864303c_3e13_11eb_b47c_52540020dc66row2_col12,#T_c864303c_3e13_11eb_b47c_52540020dc66row11_col1,#T_c864303c_3e13_11eb_b47c_52540020dc66row12_col2{\n",
        "            background-color:  #67a4cc;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row1_col12,#T_c864303c_3e13_11eb_b47c_52540020dc66row12_col1{\n",
        "            background-color:  #7eadd1;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row1_col13,#T_c864303c_3e13_11eb_b47c_52540020dc66row2_col5,#T_c864303c_3e13_11eb_b47c_52540020dc66row5_col2,#T_c864303c_3e13_11eb_b47c_52540020dc66row13_col1,#T_c864303c_3e13_11eb_b47c_52540020dc66row14_col16,#T_c864303c_3e13_11eb_b47c_52540020dc66row16_col14{\n",
        "            background-color:  #6da6cd;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row1_col14,#T_c864303c_3e13_11eb_b47c_52540020dc66row14_col1{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row1_col15,#T_c864303c_3e13_11eb_b47c_52540020dc66row6_col15,#T_c864303c_3e13_11eb_b47c_52540020dc66row15_col1,#T_c864303c_3e13_11eb_b47c_52540020dc66row15_col6{\n",
        "            background-color:  #99b8d8;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row1_col16,#T_c864303c_3e13_11eb_b47c_52540020dc66row16_col1{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row2_col3,#T_c864303c_3e13_11eb_b47c_52540020dc66row3_col2{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row2_col4,#T_c864303c_3e13_11eb_b47c_52540020dc66row2_col14,#T_c864303c_3e13_11eb_b47c_52540020dc66row4_col2,#T_c864303c_3e13_11eb_b47c_52540020dc66row14_col2{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row2_col6,#T_c864303c_3e13_11eb_b47c_52540020dc66row2_col15,#T_c864303c_3e13_11eb_b47c_52540020dc66row6_col2,#T_c864303c_3e13_11eb_b47c_52540020dc66row15_col2{\n",
        "            background-color:  #78abd0;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row2_col7,#T_c864303c_3e13_11eb_b47c_52540020dc66row7_col2,#T_c864303c_3e13_11eb_b47c_52540020dc66row7_col15,#T_c864303c_3e13_11eb_b47c_52540020dc66row15_col7{\n",
        "            background-color:  #6ba5cd;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row2_col8,#T_c864303c_3e13_11eb_b47c_52540020dc66row8_col2{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row2_col9,#T_c864303c_3e13_11eb_b47c_52540020dc66row2_col11,#T_c864303c_3e13_11eb_b47c_52540020dc66row9_col2,#T_c864303c_3e13_11eb_b47c_52540020dc66row11_col2{\n",
        "            background-color:  #4a98c5;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row2_col13,#T_c864303c_3e13_11eb_b47c_52540020dc66row13_col2{\n",
        "            background-color:  #76aad0;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row2_col16,#T_c864303c_3e13_11eb_b47c_52540020dc66row16_col2{\n",
        "            background-color:  #63a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row3_col4,#T_c864303c_3e13_11eb_b47c_52540020dc66row4_col3{\n",
        "            background-color:  #faf2f8;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row3_col5,#T_c864303c_3e13_11eb_b47c_52540020dc66row3_col11,#T_c864303c_3e13_11eb_b47c_52540020dc66row5_col3,#T_c864303c_3e13_11eb_b47c_52540020dc66row11_col3{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row3_col6,#T_c864303c_3e13_11eb_b47c_52540020dc66row6_col3{\n",
        "            background-color:  #dbdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row3_col7,#T_c864303c_3e13_11eb_b47c_52540020dc66row7_col3{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row3_col9,#T_c864303c_3e13_11eb_b47c_52540020dc66row3_col10,#T_c864303c_3e13_11eb_b47c_52540020dc66row9_col3,#T_c864303c_3e13_11eb_b47c_52540020dc66row10_col3{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row3_col12,#T_c864303c_3e13_11eb_b47c_52540020dc66row12_col3{\n",
        "            background-color:  #ece7f2;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row3_col13,#T_c864303c_3e13_11eb_b47c_52540020dc66row13_col3{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row3_col14,#T_c864303c_3e13_11eb_b47c_52540020dc66row14_col3{\n",
        "            background-color:  #dfddec;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row3_col15,#T_c864303c_3e13_11eb_b47c_52540020dc66row15_col3{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row3_col16,#T_c864303c_3e13_11eb_b47c_52540020dc66row16_col3{\n",
        "            background-color:  #e3e0ee;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row4_col5,#T_c864303c_3e13_11eb_b47c_52540020dc66row5_col4,#T_c864303c_3e13_11eb_b47c_52540020dc66row9_col10,#T_c864303c_3e13_11eb_b47c_52540020dc66row10_col9{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row4_col6,#T_c864303c_3e13_11eb_b47c_52540020dc66row5_col8,#T_c864303c_3e13_11eb_b47c_52540020dc66row6_col4,#T_c864303c_3e13_11eb_b47c_52540020dc66row8_col5{\n",
        "            background-color:  #1077b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row4_col7,#T_c864303c_3e13_11eb_b47c_52540020dc66row7_col4{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row4_col8,#T_c864303c_3e13_11eb_b47c_52540020dc66row8_col4,#T_c864303c_3e13_11eb_b47c_52540020dc66row8_col10,#T_c864303c_3e13_11eb_b47c_52540020dc66row10_col8{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row4_col9,#T_c864303c_3e13_11eb_b47c_52540020dc66row9_col4,#T_c864303c_3e13_11eb_b47c_52540020dc66row11_col14,#T_c864303c_3e13_11eb_b47c_52540020dc66row14_col11{\n",
        "            background-color:  #5c9fc9;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row4_col10,#T_c864303c_3e13_11eb_b47c_52540020dc66row4_col12,#T_c864303c_3e13_11eb_b47c_52540020dc66row10_col4,#T_c864303c_3e13_11eb_b47c_52540020dc66row12_col4{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row4_col11,#T_c864303c_3e13_11eb_b47c_52540020dc66row11_col4{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row4_col13,#T_c864303c_3e13_11eb_b47c_52540020dc66row13_col4{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row4_col14,#T_c864303c_3e13_11eb_b47c_52540020dc66row14_col4{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row4_col15,#T_c864303c_3e13_11eb_b47c_52540020dc66row15_col4{\n",
        "            background-color:  #589ec8;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row4_col16,#T_c864303c_3e13_11eb_b47c_52540020dc66row7_col11,#T_c864303c_3e13_11eb_b47c_52540020dc66row11_col7,#T_c864303c_3e13_11eb_b47c_52540020dc66row12_col15,#T_c864303c_3e13_11eb_b47c_52540020dc66row15_col12,#T_c864303c_3e13_11eb_b47c_52540020dc66row16_col4{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row5_col6,#T_c864303c_3e13_11eb_b47c_52540020dc66row6_col5{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row5_col7,#T_c864303c_3e13_11eb_b47c_52540020dc66row7_col5,#T_c864303c_3e13_11eb_b47c_52540020dc66row7_col10,#T_c864303c_3e13_11eb_b47c_52540020dc66row10_col7{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row5_col9,#T_c864303c_3e13_11eb_b47c_52540020dc66row6_col9,#T_c864303c_3e13_11eb_b47c_52540020dc66row9_col5,#T_c864303c_3e13_11eb_b47c_52540020dc66row9_col6{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row5_col10,#T_c864303c_3e13_11eb_b47c_52540020dc66row10_col5{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row5_col11,#T_c864303c_3e13_11eb_b47c_52540020dc66row8_col12,#T_c864303c_3e13_11eb_b47c_52540020dc66row11_col5,#T_c864303c_3e13_11eb_b47c_52540020dc66row12_col8{\n",
        "            background-color:  #056faf;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row5_col12,#T_c864303c_3e13_11eb_b47c_52540020dc66row12_col5{\n",
        "            background-color:  #62a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row5_col13,#T_c864303c_3e13_11eb_b47c_52540020dc66row8_col9,#T_c864303c_3e13_11eb_b47c_52540020dc66row9_col8,#T_c864303c_3e13_11eb_b47c_52540020dc66row13_col5{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row5_col14,#T_c864303c_3e13_11eb_b47c_52540020dc66row14_col5{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row5_col15,#T_c864303c_3e13_11eb_b47c_52540020dc66row15_col5{\n",
        "            background-color:  #adc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row5_col16,#T_c864303c_3e13_11eb_b47c_52540020dc66row16_col5{\n",
        "            background-color:  #045788;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row6_col7,#T_c864303c_3e13_11eb_b47c_52540020dc66row7_col6{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row6_col8,#T_c864303c_3e13_11eb_b47c_52540020dc66row8_col6,#T_c864303c_3e13_11eb_b47c_52540020dc66row14_col15,#T_c864303c_3e13_11eb_b47c_52540020dc66row15_col14{\n",
        "            background-color:  #04629a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row6_col10,#T_c864303c_3e13_11eb_b47c_52540020dc66row10_col6{\n",
        "            background-color:  #04588a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row6_col11,#T_c864303c_3e13_11eb_b47c_52540020dc66row11_col6{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row6_col12,#T_c864303c_3e13_11eb_b47c_52540020dc66row10_col12,#T_c864303c_3e13_11eb_b47c_52540020dc66row12_col6,#T_c864303c_3e13_11eb_b47c_52540020dc66row12_col10{\n",
        "            background-color:  #358fc0;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row6_col13,#T_c864303c_3e13_11eb_b47c_52540020dc66row13_col6{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row6_col14,#T_c864303c_3e13_11eb_b47c_52540020dc66row9_col15,#T_c864303c_3e13_11eb_b47c_52540020dc66row14_col6,#T_c864303c_3e13_11eb_b47c_52540020dc66row15_col9{\n",
        "            background-color:  #80aed2;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row6_col16,#T_c864303c_3e13_11eb_b47c_52540020dc66row16_col6{\n",
        "            background-color:  #034a74;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row7_col8,#T_c864303c_3e13_11eb_b47c_52540020dc66row8_col7{\n",
        "            background-color:  #045f95;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row7_col9,#T_c864303c_3e13_11eb_b47c_52540020dc66row9_col7{\n",
        "            background-color:  #4697c4;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row7_col12,#T_c864303c_3e13_11eb_b47c_52540020dc66row12_col7{\n",
        "            background-color:  #2081b9;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row7_col13,#T_c864303c_3e13_11eb_b47c_52540020dc66row10_col11,#T_c864303c_3e13_11eb_b47c_52540020dc66row11_col10,#T_c864303c_3e13_11eb_b47c_52540020dc66row13_col7{\n",
        "            background-color:  #0567a2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row7_col14,#T_c864303c_3e13_11eb_b47c_52540020dc66row14_col7{\n",
        "            background-color:  #4496c3;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row7_col16,#T_c864303c_3e13_11eb_b47c_52540020dc66row16_col7{\n",
        "            background-color:  #045280;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row8_col11,#T_c864303c_3e13_11eb_b47c_52540020dc66row11_col8,#T_c864303c_3e13_11eb_b47c_52540020dc66row11_col16,#T_c864303c_3e13_11eb_b47c_52540020dc66row16_col11{\n",
        "            background-color:  #04639b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row8_col13,#T_c864303c_3e13_11eb_b47c_52540020dc66row13_col8{\n",
        "            background-color:  #0568a3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row8_col14,#T_c864303c_3e13_11eb_b47c_52540020dc66row12_col14,#T_c864303c_3e13_11eb_b47c_52540020dc66row14_col8,#T_c864303c_3e13_11eb_b47c_52540020dc66row14_col12{\n",
        "            background-color:  #1278b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row8_col16,#T_c864303c_3e13_11eb_b47c_52540020dc66row16_col8{\n",
        "            background-color:  #045a8d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row9_col11,#T_c864303c_3e13_11eb_b47c_52540020dc66row11_col9{\n",
        "            background-color:  #056caa;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row9_col12,#T_c864303c_3e13_11eb_b47c_52540020dc66row12_col9{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row9_col13,#T_c864303c_3e13_11eb_b47c_52540020dc66row13_col9{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row9_col14,#T_c864303c_3e13_11eb_b47c_52540020dc66row14_col9{\n",
        "            background-color:  #89b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row9_col16,#T_c864303c_3e13_11eb_b47c_52540020dc66row13_col15,#T_c864303c_3e13_11eb_b47c_52540020dc66row15_col13,#T_c864303c_3e13_11eb_b47c_52540020dc66row16_col9{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row10_col13,#T_c864303c_3e13_11eb_b47c_52540020dc66row13_col10{\n",
        "            background-color:  #1c7fb8;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row10_col14,#T_c864303c_3e13_11eb_b47c_52540020dc66row14_col10{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row10_col15,#T_c864303c_3e13_11eb_b47c_52540020dc66row15_col10{\n",
        "            background-color:  #96b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row10_col16,#T_c864303c_3e13_11eb_b47c_52540020dc66row16_col10{\n",
        "            background-color:  #04598c;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row11_col12,#T_c864303c_3e13_11eb_b47c_52540020dc66row12_col11{\n",
        "            background-color:  #4e9ac6;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row11_col13,#T_c864303c_3e13_11eb_b47c_52540020dc66row13_col11{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row11_col15,#T_c864303c_3e13_11eb_b47c_52540020dc66row15_col11{\n",
        "            background-color:  #75a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row12_col13,#T_c864303c_3e13_11eb_b47c_52540020dc66row13_col12{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row12_col16,#T_c864303c_3e13_11eb_b47c_52540020dc66row16_col12{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row13_col14,#T_c864303c_3e13_11eb_b47c_52540020dc66row14_col13{\n",
        "            background-color:  #0d75b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row13_col16,#T_c864303c_3e13_11eb_b47c_52540020dc66row16_col13{\n",
        "            background-color:  #04649e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c864303c_3e13_11eb_b47c_52540020dc66row15_col16,#T_c864303c_3e13_11eb_b47c_52540020dc66row16_col15{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_c864303c_3e13_11eb_b47c_52540020dc66\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_c864303c_3e13_11eb_b47c_52540020dc66level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row0_col1\" class=\"data row0 col1\" >-0.234119</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row0_col2\" class=\"data row0 col2\" >-0.194488</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row0_col3\" class=\"data row0 col3\" >0.754585</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row0_col4\" class=\"data row0 col4\" >-0.746223</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row0_col5\" class=\"data row0 col5\" >-0.376385</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row0_col6\" class=\"data row0 col6\" >-0.572192</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row0_col7\" class=\"data row0 col7\" >-0.636863</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row0_col8\" class=\"data row0 col8\" >-0.765484</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row0_col9\" class=\"data row0 col9\" >-0.369962</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row0_col10\" class=\"data row0 col10\" >-0.441556</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row0_col11\" class=\"data row0 col11\" >-0.520001</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row0_col12\" class=\"data row0 col12\" >-0.564789</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row0_col13\" class=\"data row0 col13\" >-0.568040</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row0_col14\" class=\"data row0 col14\" >-0.536137</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row0_col15\" class=\"data row0 col15\" >-0.385005</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row0_col16\" class=\"data row0 col16\" >-0.602266</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c864303c_3e13_11eb_b47c_52540020dc66level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row1_col0\" class=\"data row1 col0\" >-0.234119</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row1_col2\" class=\"data row1 col2\" >-0.084376</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row1_col3\" class=\"data row1 col3\" >-0.128817</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row1_col4\" class=\"data row1 col4\" >0.270765</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row1_col5\" class=\"data row1 col5\" >0.320218</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row1_col6\" class=\"data row1 col6\" >0.298041</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row1_col7\" class=\"data row1 col7\" >0.230352</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row1_col8\" class=\"data row1 col8\" >0.124417</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row1_col9\" class=\"data row1 col9\" >-0.012217</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row1_col10\" class=\"data row1 col10\" >0.313693</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row1_col11\" class=\"data row1 col11\" >0.159054</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row1_col12\" class=\"data row1 col12\" >0.074657</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row1_col13\" class=\"data row1 col13\" >0.143570</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row1_col14\" class=\"data row1 col14\" >-0.056558</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row1_col15\" class=\"data row1 col15\" >-0.047033</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row1_col16\" class=\"data row1 col16\" >0.259120</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c864303c_3e13_11eb_b47c_52540020dc66level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row2_col0\" class=\"data row2 col0\" >-0.194488</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row2_col1\" class=\"data row2 col1\" >-0.084376</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row2_col3\" class=\"data row2 col3\" >-0.148699</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row2_col4\" class=\"data row2 col4\" >-0.106827</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row2_col5\" class=\"data row2 col5\" >0.138759</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row2_col6\" class=\"data row2 col6\" >0.096732</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row2_col7\" class=\"data row2 col7\" >0.150355</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row2_col8\" class=\"data row2 col8\" >0.120985</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row2_col9\" class=\"data row2 col9\" >0.263985</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row2_col10\" class=\"data row2 col10\" >0.127674</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row2_col11\" class=\"data row2 col11\" >0.266262</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row2_col12\" class=\"data row2 col12\" >0.158896</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row2_col13\" class=\"data row2 col13\" >0.107996</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row2_col14\" class=\"data row2 col14\" >-0.107346</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row2_col15\" class=\"data row2 col15\" >0.103318</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row2_col16\" class=\"data row2 col16\" >0.179132</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c864303c_3e13_11eb_b47c_52540020dc66level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row3_col0\" class=\"data row3 col0\" >0.754585</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row3_col1\" class=\"data row3 col1\" >-0.128817</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row3_col2\" class=\"data row3 col2\" >-0.148699</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row3_col4\" class=\"data row3 col4\" >-0.700757</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row3_col5\" class=\"data row3 col5\" >-0.346066</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row3_col6\" class=\"data row3 col6\" >-0.407360</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row3_col7\" class=\"data row3 col7\" >-0.478737</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row3_col8\" class=\"data row3 col8\" >-0.571577</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row3_col9\" class=\"data row3 col9\" >-0.308751</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row3_col10\" class=\"data row3 col10\" >-0.305709</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row3_col11\" class=\"data row3 col11\" >-0.346555</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row3_col12\" class=\"data row3 col12\" >-0.540648</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row3_col13\" class=\"data row3 col13\" >-0.335307</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row3_col14\" class=\"data row3 col14\" >-0.434905</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row3_col15\" class=\"data row3 col15\" >-0.321409</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row3_col16\" class=\"data row3 col16\" >-0.470691</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c864303c_3e13_11eb_b47c_52540020dc66level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row4_col0\" class=\"data row4 col0\" >-0.746223</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row4_col1\" class=\"data row4 col1\" >0.270765</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row4_col2\" class=\"data row4 col2\" >-0.106827</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row4_col3\" class=\"data row4 col3\" >-0.700757</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row4_col5\" class=\"data row4 col5\" >0.381579</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row4_col6\" class=\"data row4 col6\" >0.505867</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row4_col7\" class=\"data row4 col7\" >0.539538</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row4_col8\" class=\"data row4 col8\" >0.582003</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row4_col9\" class=\"data row4 col9\" >0.204869</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row4_col10\" class=\"data row4 col10\" >0.410414</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row4_col11\" class=\"data row4 col11\" >0.348071</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row4_col12\" class=\"data row4 col12\" >0.408347</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row4_col13\" class=\"data row4 col13\" >0.415303</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row4_col14\" class=\"data row4 col14\" >0.386569</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row4_col15\" class=\"data row4 col15\" >0.215401</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row4_col16\" class=\"data row4 col16\" >0.514066</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c864303c_3e13_11eb_b47c_52540020dc66level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row5_col0\" class=\"data row5 col0\" >-0.376385</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row5_col1\" class=\"data row5 col1\" >0.320218</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row5_col2\" class=\"data row5 col2\" >0.138759</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row5_col3\" class=\"data row5 col3\" >-0.346066</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row5_col4\" class=\"data row5 col4\" >0.381579</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row5_col6\" class=\"data row5 col6\" >0.717545</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row5_col7\" class=\"data row5 col7\" >0.566554</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row5_col8\" class=\"data row5 col8\" >0.507166</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row5_col9\" class=\"data row5 col9\" >0.403360</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row5_col10\" class=\"data row5 col10\" >0.649937</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row5_col11\" class=\"data row5 col11\" >0.563733</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row5_col12\" class=\"data row5 col12\" >0.184363</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row5_col13\" class=\"data row5 col13\" >0.398832</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row5_col14\" class=\"data row5 col14\" >-0.136725</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row5_col15\" class=\"data row5 col15\" >-0.142346</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row5_col16\" class=\"data row5 col16\" >0.796120</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c864303c_3e13_11eb_b47c_52540020dc66level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row6_col0\" class=\"data row6 col0\" >-0.572192</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row6_col1\" class=\"data row6 col1\" >0.298041</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row6_col2\" class=\"data row6 col2\" >0.096732</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row6_col3\" class=\"data row6 col3\" >-0.407360</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row6_col4\" class=\"data row6 col4\" >0.505867</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row6_col5\" class=\"data row6 col5\" >0.717545</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row6_col7\" class=\"data row6 col7\" >0.768063</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row6_col8\" class=\"data row6 col8\" >0.693493</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row6_col9\" class=\"data row6 col9\" >0.401151</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row6_col10\" class=\"data row6 col10\" >0.792233</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row6_col11\" class=\"data row6 col11\" >0.550771</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row6_col12\" class=\"data row6 col12\" >0.344440</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row6_col13\" class=\"data row6 col13\" >0.536267</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row6_col14\" class=\"data row6 col14\" >0.068864</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row6_col15\" class=\"data row6 col15\" >-0.043177</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row6_col16\" class=\"data row6 col16\" >0.880765</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c864303c_3e13_11eb_b47c_52540020dc66level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row7_col0\" class=\"data row7 col0\" >-0.636863</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row7_col1\" class=\"data row7 col1\" >0.230352</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row7_col2\" class=\"data row7 col2\" >0.150355</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row7_col3\" class=\"data row7 col3\" >-0.478737</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row7_col4\" class=\"data row7 col4\" >0.539538</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row7_col5\" class=\"data row7 col5\" >0.566554</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row7_col6\" class=\"data row7 col6\" >0.768063</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row7_col8\" class=\"data row7 col8\" >0.726429</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row7_col9\" class=\"data row7 col9\" >0.280423</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row7_col10\" class=\"data row7 col10\" >0.568896</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row7_col11\" class=\"data row7 col11\" >0.513745</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row7_col12\" class=\"data row7 col12\" >0.440350</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row7_col13\" class=\"data row7 col13\" >0.644036</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row7_col14\" class=\"data row7 col14\" >0.288962</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row7_col15\" class=\"data row7 col15\" >0.149607</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row7_col16\" class=\"data row7 col16\" >0.829741</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c864303c_3e13_11eb_b47c_52540020dc66level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row8_col0\" class=\"data row8 col0\" >-0.765484</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row8_col1\" class=\"data row8 col1\" >0.124417</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row8_col2\" class=\"data row8 col2\" >0.120985</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row8_col3\" class=\"data row8 col3\" >-0.571577</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row8_col4\" class=\"data row8 col4\" >0.582003</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row8_col5\" class=\"data row8 col5\" >0.507166</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row8_col6\" class=\"data row8 col6\" >0.693493</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row8_col7\" class=\"data row8 col7\" >0.726429</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row8_col9\" class=\"data row8 col9\" >0.398285</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row8_col10\" class=\"data row8 col10\" >0.586010</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row8_col11\" class=\"data row8 col11\" >0.684009</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row8_col12\" class=\"data row8 col12\" >0.564151</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row8_col13\" class=\"data row8 col13\" >0.636795</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row8_col14\" class=\"data row8 col14\" >0.496988</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row8_col15\" class=\"data row8 col15\" >0.301818</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row8_col16\" class=\"data row8 col16\" >0.776590</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c864303c_3e13_11eb_b47c_52540020dc66level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row9_col0\" class=\"data row9 col0\" >-0.369962</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row9_col1\" class=\"data row9 col1\" >-0.012217</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row9_col2\" class=\"data row9 col2\" >0.263985</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row9_col3\" class=\"data row9 col3\" >-0.308751</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row9_col4\" class=\"data row9 col4\" >0.204869</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row9_col5\" class=\"data row9 col5\" >0.403360</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row9_col6\" class=\"data row9 col6\" >0.401151</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row9_col7\" class=\"data row9 col7\" >0.280423</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row9_col8\" class=\"data row9 col8\" >0.398285</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row9_col10\" class=\"data row9 col10\" >0.383423</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row9_col11\" class=\"data row9 col11\" >0.593442</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row9_col12\" class=\"data row9 col12\" >0.096438</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row9_col13\" class=\"data row9 col13\" >0.330057</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row9_col14\" class=\"data row9 col14\" >0.027228</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row9_col15\" class=\"data row9 col15\" >0.067065</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row9_col16\" class=\"data row9 col16\" >0.481701</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c864303c_3e13_11eb_b47c_52540020dc66level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row10_col0\" class=\"data row10 col0\" >-0.441556</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row10_col1\" class=\"data row10 col1\" >0.313693</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row10_col2\" class=\"data row10 col2\" >0.127674</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row10_col3\" class=\"data row10 col3\" >-0.305709</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row10_col4\" class=\"data row10 col4\" >0.410414</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row10_col5\" class=\"data row10 col5\" >0.649937</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row10_col6\" class=\"data row10 col6\" >0.792233</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row10_col7\" class=\"data row10 col7\" >0.568896</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row10_col8\" class=\"data row10 col8\" >0.586010</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row10_col9\" class=\"data row10 col9\" >0.383423</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row10_col11\" class=\"data row10 col11\" >0.641476</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row10_col12\" class=\"data row10 col12\" >0.339415</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row10_col13\" class=\"data row10 col13\" >0.452072</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row10_col14\" class=\"data row10 col14\" >0.003250</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row10_col15\" class=\"data row10 col15\" >-0.032531</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row10_col16\" class=\"data row10 col16\" >0.783540</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c864303c_3e13_11eb_b47c_52540020dc66level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row11_col0\" class=\"data row11 col0\" >-0.520001</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row11_col1\" class=\"data row11 col1\" >0.159054</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row11_col2\" class=\"data row11 col2\" >0.266262</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row11_col3\" class=\"data row11 col3\" >-0.346555</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row11_col4\" class=\"data row11 col4\" >0.348071</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row11_col5\" class=\"data row11 col5\" >0.563733</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row11_col6\" class=\"data row11 col6\" >0.550771</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row11_col7\" class=\"data row11 col7\" >0.513745</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row11_col8\" class=\"data row11 col8\" >0.684009</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row11_col9\" class=\"data row11 col9\" >0.593442</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row11_col10\" class=\"data row11 col10\" >0.641476</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row11_col12\" class=\"data row11 col12\" >0.254616</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row11_col13\" class=\"data row11 col13\" >0.458474</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row11_col14\" class=\"data row11 col14\" >0.202306</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row11_col15\" class=\"data row11 col15\" >0.114214</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row11_col16\" class=\"data row11 col16\" >0.688653</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c864303c_3e13_11eb_b47c_52540020dc66level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row12_col0\" class=\"data row12 col0\" >-0.564789</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row12_col1\" class=\"data row12 col1\" >0.074657</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row12_col2\" class=\"data row12 col2\" >0.158896</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row12_col3\" class=\"data row12 col3\" >-0.540648</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row12_col4\" class=\"data row12 col4\" >0.408347</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row12_col5\" class=\"data row12 col5\" >0.184363</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row12_col6\" class=\"data row12 col6\" >0.344440</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row12_col7\" class=\"data row12 col7\" >0.440350</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row12_col8\" class=\"data row12 col8\" >0.564151</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row12_col9\" class=\"data row12 col9\" >0.096438</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row12_col10\" class=\"data row12 col10\" >0.339415</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row12_col11\" class=\"data row12 col11\" >0.254616</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row12_col13\" class=\"data row12 col13\" >0.493955</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row12_col14\" class=\"data row12 col14\" >0.497088</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row12_col15\" class=\"data row12 col15\" >0.516242</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row12_col16\" class=\"data row12 col16\" >0.463306</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c864303c_3e13_11eb_b47c_52540020dc66level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row13_col0\" class=\"data row13 col0\" >-0.568040</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row13_col1\" class=\"data row13 col1\" >0.143570</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row13_col2\" class=\"data row13 col2\" >0.107996</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row13_col3\" class=\"data row13 col3\" >-0.335307</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row13_col4\" class=\"data row13 col4\" >0.415303</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row13_col5\" class=\"data row13 col5\" >0.398832</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row13_col6\" class=\"data row13 col6\" >0.536267</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row13_col7\" class=\"data row13 col7\" >0.644036</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row13_col8\" class=\"data row13 col8\" >0.636795</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row13_col9\" class=\"data row13 col9\" >0.330057</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row13_col10\" class=\"data row13 col10\" >0.452072</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row13_col11\" class=\"data row13 col11\" >0.458474</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row13_col12\" class=\"data row13 col12\" >0.493955</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row13_col14\" class=\"data row13 col14\" >0.519408</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row13_col15\" class=\"data row13 col15\" >0.480708</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row13_col16\" class=\"data row13 col16\" >0.668997</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c864303c_3e13_11eb_b47c_52540020dc66level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row14_col0\" class=\"data row14 col0\" >-0.536137</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row14_col1\" class=\"data row14 col1\" >-0.056558</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row14_col2\" class=\"data row14 col2\" >-0.107346</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row14_col3\" class=\"data row14 col3\" >-0.434905</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row14_col4\" class=\"data row14 col4\" >0.386569</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row14_col5\" class=\"data row14 col5\" >-0.136725</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row14_col6\" class=\"data row14 col6\" >0.068864</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row14_col7\" class=\"data row14 col7\" >0.288962</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row14_col8\" class=\"data row14 col8\" >0.496988</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row14_col9\" class=\"data row14 col9\" >0.027228</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row14_col10\" class=\"data row14 col10\" >0.003250</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row14_col11\" class=\"data row14 col11\" >0.202306</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row14_col12\" class=\"data row14 col12\" >0.497088</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row14_col13\" class=\"data row14 col13\" >0.519408</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row14_col15\" class=\"data row14 col15\" >0.695093</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row14_col16\" class=\"data row14 col16\" >0.140373</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c864303c_3e13_11eb_b47c_52540020dc66level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row15_col0\" class=\"data row15 col0\" >-0.385005</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row15_col1\" class=\"data row15 col1\" >-0.047033</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row15_col2\" class=\"data row15 col2\" >0.103318</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row15_col3\" class=\"data row15 col3\" >-0.321409</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row15_col4\" class=\"data row15 col4\" >0.215401</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row15_col5\" class=\"data row15 col5\" >-0.142346</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row15_col6\" class=\"data row15 col6\" >-0.043177</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row15_col7\" class=\"data row15 col7\" >0.149607</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row15_col8\" class=\"data row15 col8\" >0.301818</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row15_col9\" class=\"data row15 col9\" >0.067065</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row15_col10\" class=\"data row15 col10\" >-0.032531</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row15_col11\" class=\"data row15 col11\" >0.114214</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row15_col12\" class=\"data row15 col12\" >0.516242</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row15_col13\" class=\"data row15 col13\" >0.480708</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row15_col14\" class=\"data row15 col14\" >0.695093</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row15_col16\" class=\"data row15 col16\" >0.041373</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c864303c_3e13_11eb_b47c_52540020dc66level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row16_col0\" class=\"data row16 col0\" >-0.602266</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row16_col1\" class=\"data row16 col1\" >0.259120</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row16_col2\" class=\"data row16 col2\" >0.179132</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row16_col3\" class=\"data row16 col3\" >-0.470691</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row16_col4\" class=\"data row16 col4\" >0.514066</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row16_col5\" class=\"data row16 col5\" >0.796120</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row16_col6\" class=\"data row16 col6\" >0.880765</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row16_col7\" class=\"data row16 col7\" >0.829741</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row16_col8\" class=\"data row16 col8\" >0.776590</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row16_col9\" class=\"data row16 col9\" >0.481701</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row16_col10\" class=\"data row16 col10\" >0.783540</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row16_col11\" class=\"data row16 col11\" >0.688653</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row16_col12\" class=\"data row16 col12\" >0.463306</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row16_col13\" class=\"data row16 col13\" >0.668997</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row16_col14\" class=\"data row16 col14\" >0.140373</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row16_col15\" class=\"data row16 col15\" >0.041373</td>\n",
        "                        <td id=\"T_c864303c_3e13_11eb_b47c_52540020dc66row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f85c6e325e0>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
