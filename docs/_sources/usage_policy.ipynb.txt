{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage: policy measures\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.14.0-iota'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "196"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **19th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{2: ['Holy See'],\n",
        " 3: ['Laos', 'Timor-Leste', 'Saint Kitts and Nevis'],\n",
        " 4: ['Dominica', 'Grenada', 'Fiji', 'Tanzania'],\n",
        " 6: ['Equatorial Guinea'],\n",
        " 7: ['Saint Vincent and the Grenadines', 'Brunei', 'Northern Mariana Islands'],\n",
        " 8: ['Bahamas', 'Mauritius', 'Cambodia', 'Seychelles', 'Kyrgyzstan',\n",
        "     'Liechtenstein', 'Saint Lucia'],\n",
        " 9: ['Guam', 'Botswana', 'Republic of the Congo', 'Trinidad and Tobago',\n",
        "     'Guyana', 'Madagascar', 'Papua New Guinea', 'Australia', 'Ethiopia',\n",
        "     'Uzbekistan', 'Antigua and Barbuda'],\n",
        " 10: ['Iceland', 'Belize', 'Philippines', 'Guatemala', 'Djibouti', 'Monaco',\n",
        "      'Vietnam', 'Zimbabwe', 'Algeria', 'Venezuela', 'Nicaragua', 'Oman',\n",
        "      'Angola', 'Virgin Islands, U.S.', 'Iraq', 'Kazakhstan', 'Gambia',\n",
        "      'Maldives', 'Barbados', 'India', 'Singapore', 'Libya',\n",
        "      'Sao Tome and Principe', 'Jamaica', 'Kenya', 'Bhutan'],\n",
        " 11: ['New Zealand', 'Kuwait', 'Zambia', 'Rwanda', 'Peru', 'Lesotho', 'Bahrain',\n",
        "      'Bolivia', 'Ecuador', 'Nepal', 'Mozambique', 'Yemen', 'Syria',\n",
        "      'Bangladesh', 'Brazil', 'Honduras', 'El Salvador', 'Chile', 'Paraguay',\n",
        "      'Costa Rica', 'Mongolia', 'Saudi Arabia', 'Suriname',\n",
        "      'Dominican Republic', 'Argentina', 'Burundi', 'Cape Verde',\n",
        "      \"Cote d'Ivoire\", 'Colombia', 'South Africa', 'Mexico', 'Benin', 'Ghana'],\n",
        " 12: ['Swaziland', 'Malawi', 'South Sudan', 'Taiwan', 'Namibia', 'Senegal',\n",
        "      'Myanmar', 'Togo', 'Nigeria', 'Morocco', 'Guinea', 'Andorra', 'Pakistan',\n",
        "      'Montenegro', 'Egypt', 'Bermuda', 'Eritrea', 'Sudan', 'Israel', 'Liberia',\n",
        "      'Armenia', 'Uganda', 'Gabon', 'Cameroon', 'Somalia'],\n",
        " 13: ['Mali', 'Panama', 'Democratic Republic of the Congo', 'Guinea-Bissau',\n",
        "      'Puerto Rico', 'Afghanistan', 'Niger', 'Palestine', 'Moldova', 'Chad',\n",
        "      'Georgia', 'Bosnia and Herzegovina', 'Malta', 'Ireland', 'Sierra Leone',\n",
        "      'Indonesia', 'Kosovo', 'Tajikistan', 'Qatar', 'San Marino',\n",
        "      'Azerbaijan'],\n",
        " 14: ['Tunisia', 'Burkina Faso', 'Mauritania', 'Comoros', 'Jordan', 'Iran',\n",
        "      'United Arab Emirates', 'Serbia', 'Russia', 'Slovenia', 'Thailand',\n",
        "      'Central African Republic', 'China', 'Cuba', 'Lithuania', 'Belarus'],\n",
        " 15: ['Sri Lanka', 'Japan', 'Greece', 'Hungary', 'Albania', 'Lebanon',\n",
        "      'Ukraine', 'Haiti', 'North Macedonia', 'United States', 'Cyprus',\n",
        "      'Bulgaria'],\n",
        " 16: ['Uruguay', 'Czech Republic', 'Poland', 'Spain', 'Denmark', 'France',\n",
        "      'Belgium', 'Croatia', 'Romania', 'Luxembourg', 'Finland', 'Turkey'],\n",
        " 17: ['Canada', 'Slovakia', 'Malaysia', 'Latvia', 'Italy', 'Austria', 'Estonia',\n",
        "      'Netherlands'],\n",
        " 18: ['Sweden', 'United Kingdom', 'Switzerland', 'Portugal'],\n",
        " 19: ['Norway', 'Germany']}\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=19)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "2"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{19: ['Norway', 'Germany']}\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"19\" valign=\"top\">Norway</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Mar2020</td>\n",
        "      <td>21Mar2020</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Mar2020</td>\n",
        "      <td>05Apr2020</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Apr2020</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>02May2020</td>\n",
        "      <td>05Aug2020</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>20Sep2020</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Sep2020</td>\n",
        "      <td>07Oct2020</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Oct2020</td>\n",
        "      <td>24Oct2020</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Oct2020</td>\n",
        "      <td>01Nov2020</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Nov2020</td>\n",
        "      <td>08Nov2020</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Nov2020</td>\n",
        "      <td>14Nov2020</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Nov2020</td>\n",
        "      <td>22Nov2020</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Nov2020</td>\n",
        "      <td>29Nov2020</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>30Nov2020</td>\n",
        "      <td>07Dec2020</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Dec2020</td>\n",
        "      <td>14Dec2020</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Dec2020</td>\n",
        "      <td>21Dec2020</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Dec2020</td>\n",
        "      <td>28Dec2020</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>17th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Dec2020</td>\n",
        "      <td>05Jan2021</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>18th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jan2021</td>\n",
        "      <td>14Jan2021</td>\n",
        "      <td>5311916</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"19\" valign=\"top\">Germany</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Jan2020</td>\n",
        "      <td>23Mar2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Mar2020</td>\n",
        "      <td>06Apr2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Apr2020</td>\n",
        "      <td>05May2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>04Aug2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Aug2020</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Sep2020</td>\n",
        "      <td>07Oct2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Oct2020</td>\n",
        "      <td>20Oct2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Oct2020</td>\n",
        "      <td>27Oct2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Oct2020</td>\n",
        "      <td>03Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Nov2020</td>\n",
        "      <td>10Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Nov2020</td>\n",
        "      <td>17Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Nov2020</td>\n",
        "      <td>24Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Nov2020</td>\n",
        "      <td>01Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Dec2020</td>\n",
        "      <td>08Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Dec2020</td>\n",
        "      <td>15Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Dec2020</td>\n",
        "      <td>21Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Dec2020</td>\n",
        "      <td>28Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>17th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Dec2020</td>\n",
        "      <td>05Jan2021</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>18th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jan2021</td>\n",
        "      <td>14Jan2021</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Norway  0th    Past  08Mar2020  21Mar2020     5311916\n",
        "        1st    Past  22Mar2020  05Apr2020     5311916\n",
        "        2nd    Past  06Apr2020  01May2020     5311916\n",
        "        3rd    Past  02May2020  05Aug2020     5311916\n",
        "        4th    Past  06Aug2020  02Sep2020     5311916\n",
        "        5th    Past  03Sep2020  20Sep2020     5311916\n",
        "        6th    Past  21Sep2020  07Oct2020     5311916\n",
        "        7th    Past  08Oct2020  24Oct2020     5311916\n",
        "        8th    Past  25Oct2020  01Nov2020     5311916\n",
        "        9th    Past  02Nov2020  08Nov2020     5311916\n",
        "        10th   Past  09Nov2020  14Nov2020     5311916\n",
        "        11th   Past  15Nov2020  22Nov2020     5311916\n",
        "        12th   Past  23Nov2020  29Nov2020     5311916\n",
        "        13th   Past  30Nov2020  07Dec2020     5311916\n",
        "        14th   Past  08Dec2020  14Dec2020     5311916\n",
        "        15th   Past  15Dec2020  21Dec2020     5311916\n",
        "        16th   Past  22Dec2020  28Dec2020     5311916\n",
        "        17th   Past  29Dec2020  05Jan2021     5311916\n",
        "        18th   Past  06Jan2021  14Jan2021     5311916\n",
        "Germany 0th    Past  19Jan2020  23Mar2020    82905782\n",
        "        1st    Past  24Mar2020  06Apr2020    82905782\n",
        "        2nd    Past  07Apr2020  05May2020    82905782\n",
        "        3rd    Past  06May2020  04Aug2020    82905782\n",
        "        4th    Past  05Aug2020  12Sep2020    82905782\n",
        "        5th    Past  13Sep2020  07Oct2020    82905782\n",
        "        6th    Past  08Oct2020  20Oct2020    82905782\n",
        "        7th    Past  21Oct2020  27Oct2020    82905782\n",
        "        8th    Past  28Oct2020  03Nov2020    82905782\n",
        "        9th    Past  04Nov2020  10Nov2020    82905782\n",
        "        10th   Past  11Nov2020  17Nov2020    82905782\n",
        "        11th   Past  18Nov2020  24Nov2020    82905782\n",
        "        12th   Past  25Nov2020  01Dec2020    82905782\n",
        "        13th   Past  02Dec2020  08Dec2020    82905782\n",
        "        14th   Past  09Dec2020  15Dec2020    82905782\n",
        "        15th   Past  16Dec2020  21Dec2020    82905782\n",
        "        16th   Past  22Dec2020  28Dec2020    82905782\n",
        "        17th   Past  29Dec2020  05Jan2021    82905782\n",
        "        18th   Past  06Jan2021  14Jan2021    82905782"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF, timeout=10)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>\n",
        "Running optimization with 4 CPUs...\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  4th phase (06Aug2020 - 02Sep2020): finished  175 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 14th phase (09Dec2020 - 15Dec2020): finished  174 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  1st phase (22Mar2020 - 05Apr2020): finished  173 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 12th phase (25Nov2020 - 01Dec2020): finished  177 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 10th phase (09Nov2020 - 14Nov2020): finished  177 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  2nd phase (07Apr2020 - 05May2020): finished  173 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 10th phase (11Nov2020 - 17Nov2020): finished  178 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 11th phase (18Nov2020 - 24Nov2020): finished  175 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  9th phase (04Nov2020 - 10Nov2020): finished  178 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  6th phase (08Oct2020 - 20Oct2020): finished  176 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  7th phase (21Oct2020 - 27Oct2020): finished  182 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 12th phase (23Nov2020 - 29Nov2020): finished  174 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  3rd phase (06May2020 - 04Aug2020): finished  167 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  0th phase (08Mar2020 - 21Mar2020): finished  187 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  3rd phase (02May2020 - 05Aug2020): finished  162 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 16th phase (22Dec2020 - 28Dec2020): finished  188 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  4th phase (05Aug2020 - 12Sep2020): finished  178 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 13th phase (02Dec2020 - 08Dec2020): finished  189 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  1st phase (24Mar2020 - 06Apr2020): finished  188 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 17th phase (29Dec2020 - 05Jan2021): finished  183 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  8th phase (28Oct2020 - 03Nov2020): finished  186 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 11th phase (15Nov2020 - 22Nov2020): finished  183 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 15th phase (15Dec2020 - 21Dec2020): finished  179 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 13th phase (30Nov2020 - 07Dec2020): finished  186 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  8th phase (25Oct2020 - 01Nov2020): finished  191 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  9th phase (02Nov2020 - 08Nov2020): finished  186 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 15th phase (16Dec2020 - 21Dec2020): finished  177 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 14th phase (08Dec2020 - 14Dec2020): finished  188 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  7th phase (08Oct2020 - 24Oct2020): finished  179 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 18th phase (06Jan2021 - 14Jan2021): finished  186 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  5th phase (03Sep2020 - 20Sep2020): finished  176 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  2nd phase (06Apr2020 - 01May2020): finished  177 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  6th phase (21Sep2020 - 07Oct2020): finished  186 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  0th phase (19Jan2020 - 23Mar2020): finished  185 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  5th phase (13Sep2020 - 07Oct2020): finished  194 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 1 min 43 sec\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"19\" valign=\"top\">Norway</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Mar2020</td>\n",
        "      <td>21Mar2020</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>84.51</td>\n",
        "      <td>0.004749</td>\n",
        "      <td>0.000400</td>\n",
        "      <td>0.034190</td>\n",
        "      <td>0.000003</td>\n",
        "      <td>360</td>\n",
        "      <td>625</td>\n",
        "      <td>7</td>\n",
        "      <td>86579</td>\n",
        "      <td>0.005</td>\n",
        "      <td>0.720716</td>\n",
        "      <td>187</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Mar2020</td>\n",
        "      <td>05Apr2020</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>35.09</td>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.000229</td>\n",
        "      <td>0.017870</td>\n",
        "      <td>0.000281</td>\n",
        "      <td>360</td>\n",
        "      <td>1093</td>\n",
        "      <td>13</td>\n",
        "      <td>891</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.603094</td>\n",
        "      <td>173</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Apr2020</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.30</td>\n",
        "      <td>0.093195</td>\n",
        "      <td>0.000150</td>\n",
        "      <td>0.003270</td>\n",
        "      <td>0.009716</td>\n",
        "      <td>360</td>\n",
        "      <td>1666</td>\n",
        "      <td>76</td>\n",
        "      <td>25</td>\n",
        "      <td>0.093</td>\n",
        "      <td>0.105829</td>\n",
        "      <td>177</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>02May2020</td>\n",
        "      <td>05Aug2020</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.30</td>\n",
        "      <td>0.205307</td>\n",
        "      <td>0.000867</td>\n",
        "      <td>0.006354</td>\n",
        "      <td>0.016033</td>\n",
        "      <td>360</td>\n",
        "      <td>288</td>\n",
        "      <td>39</td>\n",
        "      <td>15</td>\n",
        "      <td>0.205</td>\n",
        "      <td>0.755516</td>\n",
        "      <td>162</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.03</td>\n",
        "      <td>0.003232</td>\n",
        "      <td>0.000309</td>\n",
        "      <td>0.023025</td>\n",
        "      <td>0.010985</td>\n",
        "      <td>360</td>\n",
        "      <td>808</td>\n",
        "      <td>10</td>\n",
        "      <td>22</td>\n",
        "      <td>0.003</td>\n",
        "      <td>0.092754</td>\n",
        "      <td>175</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>20Sep2020</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.69</td>\n",
        "      <td>0.001226</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.016971</td>\n",
        "      <td>0.010042</td>\n",
        "      <td>360</td>\n",
        "      <td>134670</td>\n",
        "      <td>14</td>\n",
        "      <td>24</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.035779</td>\n",
        "      <td>176</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Sep2020</td>\n",
        "      <td>07Oct2020</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.25</td>\n",
        "      <td>0.000901</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.015211</td>\n",
        "      <td>0.006680</td>\n",
        "      <td>360</td>\n",
        "      <td>3515</td>\n",
        "      <td>16</td>\n",
        "      <td>37</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.039074</td>\n",
        "      <td>186</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Oct2020</td>\n",
        "      <td>24Oct2020</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.94</td>\n",
        "      <td>0.000728</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.013373</td>\n",
        "      <td>0.014074</td>\n",
        "      <td>360</td>\n",
        "      <td>3153</td>\n",
        "      <td>18</td>\n",
        "      <td>17</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.032037</td>\n",
        "      <td>179</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Oct2020</td>\n",
        "      <td>01Nov2020</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.86</td>\n",
        "      <td>0.001151</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.028203</td>\n",
        "      <td>0.009837</td>\n",
        "      <td>360</td>\n",
        "      <td>133014</td>\n",
        "      <td>8</td>\n",
        "      <td>25</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.017205</td>\n",
        "      <td>191</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Nov2020</td>\n",
        "      <td>08Nov2020</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>4.26</td>\n",
        "      <td>0.001235</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.024789</td>\n",
        "      <td>0.005813</td>\n",
        "      <td>360</td>\n",
        "      <td>134597</td>\n",
        "      <td>10</td>\n",
        "      <td>43</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.016744</td>\n",
        "      <td>186</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Nov2020</td>\n",
        "      <td>14Nov2020</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>4.19</td>\n",
        "      <td>0.001441</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.017300</td>\n",
        "      <td>0.004071</td>\n",
        "      <td>360</td>\n",
        "      <td>4601</td>\n",
        "      <td>14</td>\n",
        "      <td>61</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.007844</td>\n",
        "      <td>177</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Nov2020</td>\n",
        "      <td>22Nov2020</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>5.86</td>\n",
        "      <td>0.003924</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.012418</td>\n",
        "      <td>0.002031</td>\n",
        "      <td>360</td>\n",
        "      <td>3156</td>\n",
        "      <td>20</td>\n",
        "      <td>123</td>\n",
        "      <td>0.004</td>\n",
        "      <td>0.039246</td>\n",
        "      <td>183</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Nov2020</td>\n",
        "      <td>29Nov2020</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>4.22</td>\n",
        "      <td>0.018826</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.007729</td>\n",
        "      <td>0.001744</td>\n",
        "      <td>360</td>\n",
        "      <td>4601</td>\n",
        "      <td>32</td>\n",
        "      <td>143</td>\n",
        "      <td>0.019</td>\n",
        "      <td>0.053077</td>\n",
        "      <td>174</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>30Nov2020</td>\n",
        "      <td>07Dec2020</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.20</td>\n",
        "      <td>0.001674</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.005459</td>\n",
        "      <td>0.001649</td>\n",
        "      <td>360</td>\n",
        "      <td>4601</td>\n",
        "      <td>45</td>\n",
        "      <td>151</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.009692</td>\n",
        "      <td>186</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Dec2020</td>\n",
        "      <td>14Dec2020</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.50</td>\n",
        "      <td>0.153058</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.004858</td>\n",
        "      <td>0.001577</td>\n",
        "      <td>360</td>\n",
        "      <td>3515</td>\n",
        "      <td>51</td>\n",
        "      <td>158</td>\n",
        "      <td>0.153</td>\n",
        "      <td>0.224869</td>\n",
        "      <td>188</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Dec2020</td>\n",
        "      <td>21Dec2020</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.95</td>\n",
        "      <td>0.087290</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.005057</td>\n",
        "      <td>0.001511</td>\n",
        "      <td>360</td>\n",
        "      <td>4601</td>\n",
        "      <td>49</td>\n",
        "      <td>165</td>\n",
        "      <td>0.087</td>\n",
        "      <td>0.164234</td>\n",
        "      <td>179</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Dec2020</td>\n",
        "      <td>28Dec2020</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.01</td>\n",
        "      <td>0.042072</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.004552</td>\n",
        "      <td>0.001445</td>\n",
        "      <td>360</td>\n",
        "      <td>134911</td>\n",
        "      <td>54</td>\n",
        "      <td>173</td>\n",
        "      <td>0.042</td>\n",
        "      <td>0.061480</td>\n",
        "      <td>188</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>17th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Dec2020</td>\n",
        "      <td>05Jan2021</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.26</td>\n",
        "      <td>0.018615</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.004506</td>\n",
        "      <td>0.001355</td>\n",
        "      <td>360</td>\n",
        "      <td>134911</td>\n",
        "      <td>55</td>\n",
        "      <td>184</td>\n",
        "      <td>0.019</td>\n",
        "      <td>0.036050</td>\n",
        "      <td>183</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>18th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jan2021</td>\n",
        "      <td>14Jan2021</td>\n",
        "      <td>5311916</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.10</td>\n",
        "      <td>0.059768</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.004310</td>\n",
        "      <td>0.001236</td>\n",
        "      <td>360</td>\n",
        "      <td>3514</td>\n",
        "      <td>58</td>\n",
        "      <td>202</td>\n",
        "      <td>0.060</td>\n",
        "      <td>0.158108</td>\n",
        "      <td>186</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"19\" valign=\"top\">Germany</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Jan2020</td>\n",
        "      <td>23Mar2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.12</td>\n",
        "      <td>0.470520</td>\n",
        "      <td>0.000751</td>\n",
        "      <td>0.023441</td>\n",
        "      <td>0.005094</td>\n",
        "      <td>360.0</td>\n",
        "      <td>332.0</td>\n",
        "      <td>10.0</td>\n",
        "      <td>49.0</td>\n",
        "      <td>0.471</td>\n",
        "      <td>2.098109</td>\n",
        "      <td>185.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Mar2020</td>\n",
        "      <td>06Apr2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>4.25</td>\n",
        "      <td>0.034646</td>\n",
        "      <td>0.000450</td>\n",
        "      <td>0.021443</td>\n",
        "      <td>0.004418</td>\n",
        "      <td>360.0</td>\n",
        "      <td>556.0</td>\n",
        "      <td>11.0</td>\n",
        "      <td>56.0</td>\n",
        "      <td>0.035</td>\n",
        "      <td>0.207306</td>\n",
        "      <td>188.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Apr2020</td>\n",
        "      <td>05May2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.45</td>\n",
        "      <td>0.056940</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.011188</td>\n",
        "      <td>0.023163</td>\n",
        "      <td>360.0</td>\n",
        "      <td>2287.0</td>\n",
        "      <td>22.0</td>\n",
        "      <td>10.0</td>\n",
        "      <td>0.057</td>\n",
        "      <td>0.148884</td>\n",
        "      <td>173.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>04Aug2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.75</td>\n",
        "      <td>0.002473</td>\n",
        "      <td>0.000094</td>\n",
        "      <td>0.013632</td>\n",
        "      <td>0.018019</td>\n",
        "      <td>360.0</td>\n",
        "      <td>2661.0</td>\n",
        "      <td>18.0</td>\n",
        "      <td>13.0</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.236326</td>\n",
        "      <td>167.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Aug2020</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.42</td>\n",
        "      <td>0.003232</td>\n",
        "      <td>0.000309</td>\n",
        "      <td>0.019574</td>\n",
        "      <td>0.013399</td>\n",
        "      <td>360.0</td>\n",
        "      <td>808.0</td>\n",
        "      <td>12.0</td>\n",
        "      <td>18.0</td>\n",
        "      <td>0.003</td>\n",
        "      <td>0.075754</td>\n",
        "      <td>178.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Sep2020</td>\n",
        "      <td>07Oct2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.45</td>\n",
        "      <td>0.000949</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.017980</td>\n",
        "      <td>0.012321</td>\n",
        "      <td>360.0</td>\n",
        "      <td>3152.0</td>\n",
        "      <td>13.0</td>\n",
        "      <td>20.0</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.029685</td>\n",
        "      <td>194.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Oct2020</td>\n",
        "      <td>20Oct2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.06</td>\n",
        "      <td>0.000676</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.025860</td>\n",
        "      <td>0.008366</td>\n",
        "      <td>360.0</td>\n",
        "      <td>3708.0</td>\n",
        "      <td>9.0</td>\n",
        "      <td>29.0</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.059211</td>\n",
        "      <td>176.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Oct2020</td>\n",
        "      <td>27Oct2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.03</td>\n",
        "      <td>0.002617</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.027295</td>\n",
        "      <td>0.008691</td>\n",
        "      <td>360.0</td>\n",
        "      <td>829.0</td>\n",
        "      <td>9.0</td>\n",
        "      <td>28.0</td>\n",
        "      <td>0.003</td>\n",
        "      <td>0.019590</td>\n",
        "      <td>182.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Oct2020</td>\n",
        "      <td>03Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.25</td>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.000229</td>\n",
        "      <td>0.018148</td>\n",
        "      <td>0.007821</td>\n",
        "      <td>360.0</td>\n",
        "      <td>1091.0</td>\n",
        "      <td>13.0</td>\n",
        "      <td>31.0</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.037161</td>\n",
        "      <td>186.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Nov2020</td>\n",
        "      <td>10Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.44</td>\n",
        "      <td>0.000183</td>\n",
        "      <td>0.000229</td>\n",
        "      <td>0.017686</td>\n",
        "      <td>0.012063</td>\n",
        "      <td>360.0</td>\n",
        "      <td>1093.0</td>\n",
        "      <td>14.0</td>\n",
        "      <td>20.0</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.024661</td>\n",
        "      <td>178.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Nov2020</td>\n",
        "      <td>17Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.07</td>\n",
        "      <td>0.005338</td>\n",
        "      <td>0.000180</td>\n",
        "      <td>0.017383</td>\n",
        "      <td>0.016001</td>\n",
        "      <td>360.0</td>\n",
        "      <td>1388.0</td>\n",
        "      <td>14.0</td>\n",
        "      <td>15.0</td>\n",
        "      <td>0.005</td>\n",
        "      <td>0.019774</td>\n",
        "      <td>178.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Nov2020</td>\n",
        "      <td>24Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.97</td>\n",
        "      <td>0.005474</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.017079</td>\n",
        "      <td>0.017410</td>\n",
        "      <td>360.0</td>\n",
        "      <td>2685.0</td>\n",
        "      <td>14.0</td>\n",
        "      <td>14.0</td>\n",
        "      <td>0.005</td>\n",
        "      <td>0.025219</td>\n",
        "      <td>175.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Nov2020</td>\n",
        "      <td>01Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.90</td>\n",
        "      <td>0.003952</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.016383</td>\n",
        "      <td>0.017903</td>\n",
        "      <td>360.0</td>\n",
        "      <td>830.0</td>\n",
        "      <td>15.0</td>\n",
        "      <td>13.0</td>\n",
        "      <td>0.004</td>\n",
        "      <td>0.016735</td>\n",
        "      <td>177.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Dec2020</td>\n",
        "      <td>08Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.99</td>\n",
        "      <td>0.002696</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.018977</td>\n",
        "      <td>0.018887</td>\n",
        "      <td>360.0</td>\n",
        "      <td>830.0</td>\n",
        "      <td>13.0</td>\n",
        "      <td>13.0</td>\n",
        "      <td>0.003</td>\n",
        "      <td>0.021023</td>\n",
        "      <td>189.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Dec2020</td>\n",
        "      <td>15Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.17</td>\n",
        "      <td>0.036001</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.018539</td>\n",
        "      <td>0.015231</td>\n",
        "      <td>360.0</td>\n",
        "      <td>3708.0</td>\n",
        "      <td>13.0</td>\n",
        "      <td>16.0</td>\n",
        "      <td>0.036</td>\n",
        "      <td>0.021911</td>\n",
        "      <td>174.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Dec2020</td>\n",
        "      <td>21Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.11</td>\n",
        "      <td>0.027589</td>\n",
        "      <td>0.000180</td>\n",
        "      <td>0.017066</td>\n",
        "      <td>0.014731</td>\n",
        "      <td>360.0</td>\n",
        "      <td>1388.0</td>\n",
        "      <td>14.0</td>\n",
        "      <td>16.0</td>\n",
        "      <td>0.028</td>\n",
        "      <td>0.027271</td>\n",
        "      <td>177.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Dec2020</td>\n",
        "      <td>28Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>17th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Dec2020</td>\n",
        "      <td>05Jan2021</td>\n",
        "      <td>82905782</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>18th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jan2021</td>\n",
        "      <td>14Jan2021</td>\n",
        "      <td>82905782</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE     Rt     theta  \\\n",
        "Country Phase                                                                   \n",
        "Norway  0th    Past  08Mar2020  21Mar2020     5311916  SIR-F  84.51  0.004749   \n",
        "        1st    Past  22Mar2020  05Apr2020     5311916  SIR-F  35.09  0.000121   \n",
        "        2nd    Past  06Apr2020  01May2020     5311916  SIR-F   0.30  0.093195   \n",
        "        3rd    Past  02May2020  05Aug2020     5311916  SIR-F   0.30  0.205307   \n",
        "        4th    Past  06Aug2020  02Sep2020     5311916  SIR-F   2.03  0.003232   \n",
        "        5th    Past  03Sep2020  20Sep2020     5311916  SIR-F   1.69  0.001226   \n",
        "        6th    Past  21Sep2020  07Oct2020     5311916  SIR-F   2.25  0.000901   \n",
        "        7th    Past  08Oct2020  24Oct2020     5311916  SIR-F   0.94  0.000728   \n",
        "        8th    Past  25Oct2020  01Nov2020     5311916  SIR-F   2.86  0.001151   \n",
        "        9th    Past  02Nov2020  08Nov2020     5311916  SIR-F   4.26  0.001235   \n",
        "        10th   Past  09Nov2020  14Nov2020     5311916  SIR-F   4.19  0.001441   \n",
        "        11th   Past  15Nov2020  22Nov2020     5311916  SIR-F   5.86  0.003924   \n",
        "        12th   Past  23Nov2020  29Nov2020     5311916  SIR-F   4.22  0.018826   \n",
        "        13th   Past  30Nov2020  07Dec2020     5311916  SIR-F   3.20  0.001674   \n",
        "        14th   Past  08Dec2020  14Dec2020     5311916  SIR-F   2.50  0.153058   \n",
        "        15th   Past  15Dec2020  21Dec2020     5311916  SIR-F   2.95  0.087290   \n",
        "        16th   Past  22Dec2020  28Dec2020     5311916  SIR-F   3.01  0.042072   \n",
        "        17th   Past  29Dec2020  05Jan2021     5311916  SIR-F   3.26  0.018615   \n",
        "        18th   Past  06Jan2021  14Jan2021     5311916  SIR-F   3.10  0.059768   \n",
        "Germany 0th    Past  19Jan2020  23Mar2020    82905782  SIR-F   2.12  0.470520   \n",
        "        1st    Past  24Mar2020  06Apr2020    82905782  SIR-F   4.25  0.034646   \n",
        "        2nd    Past  07Apr2020  05May2020    82905782  SIR-F   0.45  0.056940   \n",
        "        3rd    Past  06May2020  04Aug2020    82905782  SIR-F   0.75  0.002473   \n",
        "        4th    Past  05Aug2020  12Sep2020    82905782  SIR-F   1.42  0.003232   \n",
        "        5th    Past  13Sep2020  07Oct2020    82905782  SIR-F   1.45  0.000949   \n",
        "        6th    Past  08Oct2020  20Oct2020    82905782  SIR-F   3.06  0.000676   \n",
        "        7th    Past  21Oct2020  27Oct2020    82905782  SIR-F   3.03  0.002617   \n",
        "        8th    Past  28Oct2020  03Nov2020    82905782  SIR-F   2.25  0.000121   \n",
        "        9th    Past  04Nov2020  10Nov2020    82905782  SIR-F   1.44  0.000183   \n",
        "        10th   Past  11Nov2020  17Nov2020    82905782  SIR-F   1.07  0.005338   \n",
        "        11th   Past  18Nov2020  24Nov2020    82905782  SIR-F   0.97  0.005474   \n",
        "        12th   Past  25Nov2020  01Dec2020    82905782  SIR-F   0.90  0.003952   \n",
        "        13th   Past  02Dec2020  08Dec2020    82905782  SIR-F   0.99  0.002696   \n",
        "        14th   Past  09Dec2020  15Dec2020    82905782  SIR-F   1.17  0.036001   \n",
        "        15th   Past  16Dec2020  21Dec2020    82905782  SIR-F   1.11  0.027589   \n",
        "        16th   Past  22Dec2020  28Dec2020    82905782      -      -         -   \n",
        "        17th   Past  29Dec2020  05Jan2021    82905782      -      -         -   \n",
        "        18th   Past  06Jan2021  14Jan2021    82905782      -      -         -   \n",
        "\n",
        "                  kappa       rho     sigma    tau 1/alpha2 [day]  \\\n",
        "Country Phase                                                       \n",
        "Norway  0th    0.000400  0.034190  0.000003    360            625   \n",
        "        1st    0.000229  0.017870  0.000281    360           1093   \n",
        "        2nd    0.000150  0.003270  0.009716    360           1666   \n",
        "        3rd    0.000867  0.006354  0.016033    360            288   \n",
        "        4th    0.000309  0.023025  0.010985    360            808   \n",
        "        5th    0.000002  0.016971  0.010042    360         134670   \n",
        "        6th    0.000071  0.015211  0.006680    360           3515   \n",
        "        7th    0.000079  0.013373  0.014074    360           3153   \n",
        "        8th    0.000002  0.028203  0.009837    360         133014   \n",
        "        9th    0.000002  0.024789  0.005813    360         134597   \n",
        "        10th   0.000054  0.017300  0.004071    360           4601   \n",
        "        11th   0.000079  0.012418  0.002031    360           3156   \n",
        "        12th   0.000054  0.007729  0.001744    360           4601   \n",
        "        13th   0.000054  0.005459  0.001649    360           4601   \n",
        "        14th   0.000071  0.004858  0.001577    360           3515   \n",
        "        15th   0.000054  0.005057  0.001511    360           4601   \n",
        "        16th   0.000002  0.004552  0.001445    360         134911   \n",
        "        17th   0.000002  0.004506  0.001355    360         134911   \n",
        "        18th   0.000071  0.004310  0.001236    360           3514   \n",
        "Germany 0th    0.000751  0.023441  0.005094  360.0          332.0   \n",
        "        1st    0.000450  0.021443  0.004418  360.0          556.0   \n",
        "        2nd    0.000109  0.011188  0.023163  360.0         2287.0   \n",
        "        3rd    0.000094  0.013632  0.018019  360.0         2661.0   \n",
        "        4th    0.000309  0.019574  0.013399  360.0          808.0   \n",
        "        5th    0.000079  0.017980  0.012321  360.0         3152.0   \n",
        "        6th    0.000067  0.025860  0.008366  360.0         3708.0   \n",
        "        7th    0.000301  0.027295  0.008691  360.0          829.0   \n",
        "        8th    0.000229  0.018148  0.007821  360.0         1091.0   \n",
        "        9th    0.000229  0.017686  0.012063  360.0         1093.0   \n",
        "        10th   0.000180  0.017383  0.016001  360.0         1388.0   \n",
        "        11th   0.000093  0.017079  0.017410  360.0         2685.0   \n",
        "        12th   0.000301  0.016383  0.017903  360.0          830.0   \n",
        "        13th   0.000301  0.018977  0.018887  360.0          830.0   \n",
        "        14th   0.000067  0.018539  0.015231  360.0         3708.0   \n",
        "        15th   0.000180  0.017066  0.014731  360.0         1388.0   \n",
        "        16th          -         -         -      -              -   \n",
        "        17th          -         -         -      -              -   \n",
        "        18th          -         -         -      -              -   \n",
        "\n",
        "              1/beta [day] 1/gamma [day] alpha1 [-]     RMSLE Trials  \\\n",
        "Country Phase                                                          \n",
        "Norway  0th              7         86579      0.005  0.720716    187   \n",
        "        1st             13           891      0.000  0.603094    173   \n",
        "        2nd             76            25      0.093  0.105829    177   \n",
        "        3rd             39            15      0.205  0.755516    162   \n",
        "        4th             10            22      0.003  0.092754    175   \n",
        "        5th             14            24      0.001  0.035779    176   \n",
        "        6th             16            37      0.001  0.039074    186   \n",
        "        7th             18            17      0.001  0.032037    179   \n",
        "        8th              8            25      0.001  0.017205    191   \n",
        "        9th             10            43      0.001  0.016744    186   \n",
        "        10th            14            61      0.001  0.007844    177   \n",
        "        11th            20           123      0.004  0.039246    183   \n",
        "        12th            32           143      0.019  0.053077    174   \n",
        "        13th            45           151      0.002  0.009692    186   \n",
        "        14th            51           158      0.153  0.224869    188   \n",
        "        15th            49           165      0.087  0.164234    179   \n",
        "        16th            54           173      0.042  0.061480    188   \n",
        "        17th            55           184      0.019  0.036050    183   \n",
        "        18th            58           202      0.060  0.158108    186   \n",
        "Germany 0th           10.0          49.0      0.471  2.098109  185.0   \n",
        "        1st           11.0          56.0      0.035  0.207306  188.0   \n",
        "        2nd           22.0          10.0      0.057  0.148884  173.0   \n",
        "        3rd           18.0          13.0      0.002  0.236326  167.0   \n",
        "        4th           12.0          18.0      0.003  0.075754  178.0   \n",
        "        5th           13.0          20.0      0.001  0.029685  194.0   \n",
        "        6th            9.0          29.0      0.001  0.059211  176.0   \n",
        "        7th            9.0          28.0      0.003  0.019590  182.0   \n",
        "        8th           13.0          31.0      0.000  0.037161  186.0   \n",
        "        9th           14.0          20.0      0.000  0.024661  178.0   \n",
        "        10th          14.0          15.0      0.005  0.019774  178.0   \n",
        "        11th          14.0          14.0      0.005  0.025219  175.0   \n",
        "        12th          15.0          13.0      0.004  0.016735  177.0   \n",
        "        13th          13.0          13.0      0.003  0.021023  189.0   \n",
        "        14th          13.0          16.0      0.036  0.021911  174.0   \n",
        "        15th          14.0          16.0      0.028  0.027271  177.0   \n",
        "        16th             -             -          -         -      -   \n",
        "        17th             -             -          -         -      -   \n",
        "        18th             -             -          -         -      -   \n",
        "\n",
        "                    Runtime  \n",
        "Country Phase                \n",
        "Norway  0th    0 min 10 sec  \n",
        "        1st    0 min 10 sec  \n",
        "        2nd    0 min 10 sec  \n",
        "        3rd    0 min 10 sec  \n",
        "        4th    0 min 10 sec  \n",
        "        5th    0 min 10 sec  \n",
        "        6th    0 min 10 sec  \n",
        "        7th    0 min 10 sec  \n",
        "        8th    0 min 10 sec  \n",
        "        9th    0 min 10 sec  \n",
        "        10th   0 min 10 sec  \n",
        "        11th   0 min 10 sec  \n",
        "        12th   0 min 10 sec  \n",
        "        13th   0 min 10 sec  \n",
        "        14th   0 min 10 sec  \n",
        "        15th   0 min 10 sec  \n",
        "        16th   0 min 10 sec  \n",
        "        17th   0 min 10 sec  \n",
        "        18th   0 min 10 sec  \n",
        "Germany 0th    0 min 10 sec  \n",
        "        1st    0 min 10 sec  \n",
        "        2nd    0 min 10 sec  \n",
        "        3rd    0 min 10 sec  \n",
        "        4th    0 min 10 sec  \n",
        "        5th    0 min 10 sec  \n",
        "        6th    0 min 10 sec  \n",
        "        7th    0 min 10 sec  \n",
        "        8th    0 min 10 sec  \n",
        "        9th    0 min 10 sec  \n",
        "        10th   0 min 10 sec  \n",
        "        11th   0 min 10 sec  \n",
        "        12th   0 min 10 sec  \n",
        "        13th   0 min 10 sec  \n",
        "        14th   0 min 10 sec  \n",
        "        15th   0 min 10 sec  \n",
        "        16th              -  \n",
        "        17th              -  \n",
        "        18th              -  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-03-08</td>\n",
        "      <td>Norway</td>\n",
        "      <td>0.004749</td>\n",
        "      <td>0.0004</td>\n",
        "      <td>0.03419</td>\n",
        "      <td>0.000003</td>\n",
        "      <td>0.005</td>\n",
        "      <td>625</td>\n",
        "      <td>7</td>\n",
        "      <td>86579</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>11.11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-03-09</td>\n",
        "      <td>Norway</td>\n",
        "      <td>0.004749</td>\n",
        "      <td>0.0004</td>\n",
        "      <td>0.03419</td>\n",
        "      <td>0.000003</td>\n",
        "      <td>0.005</td>\n",
        "      <td>625</td>\n",
        "      <td>7</td>\n",
        "      <td>86579</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>11.11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-03-10</td>\n",
        "      <td>Norway</td>\n",
        "      <td>0.004749</td>\n",
        "      <td>0.0004</td>\n",
        "      <td>0.03419</td>\n",
        "      <td>0.000003</td>\n",
        "      <td>0.005</td>\n",
        "      <td>625</td>\n",
        "      <td>7</td>\n",
        "      <td>86579</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>14.81</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-03-11</td>\n",
        "      <td>Norway</td>\n",
        "      <td>0.004749</td>\n",
        "      <td>0.0004</td>\n",
        "      <td>0.03419</td>\n",
        "      <td>0.000003</td>\n",
        "      <td>0.005</td>\n",
        "      <td>625</td>\n",
        "      <td>7</td>\n",
        "      <td>86579</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>20.37</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-03-12</td>\n",
        "      <td>Norway</td>\n",
        "      <td>0.004749</td>\n",
        "      <td>0.0004</td>\n",
        "      <td>0.03419</td>\n",
        "      <td>0.000003</td>\n",
        "      <td>0.005</td>\n",
        "      <td>625</td>\n",
        "      <td>7</td>\n",
        "      <td>86579</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>40.74</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date Country     theta   kappa      rho     sigma alpha1 [-]  \\\n",
        "0 2020-03-08  Norway  0.004749  0.0004  0.03419  0.000003      0.005   \n",
        "1 2020-03-09  Norway  0.004749  0.0004  0.03419  0.000003      0.005   \n",
        "2 2020-03-10  Norway  0.004749  0.0004  0.03419  0.000003      0.005   \n",
        "3 2020-03-11  Norway  0.004749  0.0004  0.03419  0.000003      0.005   \n",
        "4 2020-03-12  Norway  0.004749  0.0004  0.03419  0.000003      0.005   \n",
        "\n",
        "  1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0            625            7         86579  ...             0   \n",
        "1            625            7         86579  ...             0   \n",
        "2            625            7         86579  ...             0   \n",
        "3            625            7         86579  ...             0   \n",
        "4            625            7         86579  ...             0   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        2                  0                       0   \n",
        "4                        2                  1                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    0   \n",
        "1                               0                                    0   \n",
        "2                               0                                    0   \n",
        "3                               0                                    0   \n",
        "4                               0                                    0   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               1                0             11.11  \n",
        "1                      2               1                0             11.11  \n",
        "2                      2               1                0             14.81  \n",
        "3                      2               1                0             20.37  \n",
        "4                      2               1                0             40.74  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Norway</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2021-01-10</th>\n",
        "      <td>1.11</td>\n",
        "      <td>3.1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-11</th>\n",
        "      <td>1.11</td>\n",
        "      <td>3.1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-12</th>\n",
        "      <td>1.11</td>\n",
        "      <td>3.1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-13</th>\n",
        "      <td>1.11</td>\n",
        "      <td>3.1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-14</th>\n",
        "      <td>1.11</td>\n",
        "      <td>3.1</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Germany  Norway\n",
        "Date                       \n",
        "2021-01-10     1.11     3.1\n",
        "2021-01-11     1.11     3.1\n",
        "2021-01-12     1.11     3.1\n",
        "2021-01-13     1.11     3.1\n",
        "2021-01-14     1.11     3.1"
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Norway</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2021-01-10</th>\n",
        "      <td>0.017066</td>\n",
        "      <td>0.00431</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-11</th>\n",
        "      <td>0.017066</td>\n",
        "      <td>0.00431</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-12</th>\n",
        "      <td>0.017066</td>\n",
        "      <td>0.00431</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-13</th>\n",
        "      <td>0.017066</td>\n",
        "      <td>0.00431</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-14</th>\n",
        "      <td>0.017066</td>\n",
        "      <td>0.00431</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Germany   Norway\n",
        "Date                         \n",
        "2021-01-10  0.017066  0.00431\n",
        "2021-01-11  0.017066  0.00431\n",
        "2021-01-12  0.017066  0.00431\n",
        "2021-01-13  0.017066  0.00431\n",
        "2021-01-14  0.017066  0.00431"
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Norway</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2021-01-10</th>\n",
        "      <td>0.014731</td>\n",
        "      <td>0.001236</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-11</th>\n",
        "      <td>0.014731</td>\n",
        "      <td>0.001236</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-12</th>\n",
        "      <td>0.014731</td>\n",
        "      <td>0.001236</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-13</th>\n",
        "      <td>0.014731</td>\n",
        "      <td>0.001236</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-14</th>\n",
        "      <td>0.014731</td>\n",
        "      <td>0.001236</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Germany    Norway\n",
        "Date                          \n",
        "2021-01-10  0.014731  0.001236\n",
        "2021-01-11  0.014731  0.001236\n",
        "2021-01-12  0.014731  0.001236\n",
        "2021-01-13  0.014731  0.001236\n",
        "2021-01-14  0.014731  0.001236"
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Norway</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2021-01-10</th>\n",
        "      <td>0.00018</td>\n",
        "      <td>0.000071</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-11</th>\n",
        "      <td>0.00018</td>\n",
        "      <td>0.000071</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-12</th>\n",
        "      <td>0.00018</td>\n",
        "      <td>0.000071</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-13</th>\n",
        "      <td>0.00018</td>\n",
        "      <td>0.000071</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-14</th>\n",
        "      <td>0.00018</td>\n",
        "      <td>0.000071</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country     Germany    Norway\n",
        "Date                         \n",
        "2021-01-10  0.00018  0.000071\n",
        "2021-01-11  0.00018  0.000071\n",
        "2021-01-12  0.00018  0.000071\n",
        "2021-01-13  0.00018  0.000071\n",
        "2021-01-14  0.00018  0.000071"
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Norway</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2021-01-10</th>\n",
        "      <td>0.027589</td>\n",
        "      <td>0.059768</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-11</th>\n",
        "      <td>0.027589</td>\n",
        "      <td>0.059768</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-12</th>\n",
        "      <td>0.027589</td>\n",
        "      <td>0.059768</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-13</th>\n",
        "      <td>0.027589</td>\n",
        "      <td>0.059768</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-14</th>\n",
        "      <td>0.027589</td>\n",
        "      <td>0.059768</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Germany    Norway\n",
        "Date                          \n",
        "2021-01-10  0.027589  0.059768\n",
        "2021-01-11  0.027589  0.059768\n",
        "2021-01-12  0.027589  0.059768\n",
        "2021-01-13  0.027589  0.059768\n",
        "2021-01-14  0.027589  0.059768"
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 6439 entries, 0 to 6452\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 6439 non-null   datetime64[ns]\n",
        " 1   Country                              6439 non-null   object        \n",
        " 2   Rt                                   6439 non-null   float64       \n",
        " 3   theta                                6439 non-null   float64       \n",
        " 4   kappa                                6439 non-null   float64       \n",
        " 5   rho                                  6439 non-null   float64       \n",
        " 6   sigma                                6439 non-null   float64       \n",
        " 7   School_closing                       6439 non-null   int64         \n",
        " 8   Workplace_closing                    6439 non-null   int64         \n",
        " 9   Cancel_events                        6439 non-null   int64         \n",
        " 10  Gatherings_restrictions              6439 non-null   int64         \n",
        " 11  Transport_closing                    6439 non-null   int64         \n",
        " 12  Stay_home_restrictions               6439 non-null   int64         \n",
        " 13  Internal_movement_restrictions       6439 non-null   int64         \n",
        " 14  International_movement_restrictions  6439 non-null   int64         \n",
        " 15  Information_campaigns                6439 non-null   int64         \n",
        " 16  Testing_policy                       6439 non-null   int64         \n",
        " 17  Contact_tracing                      6439 non-null   int64         \n",
        " 18  Stringency_index                     6439 non-null   float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 1006.1+ KB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_f257e_row0_col0,#T_f257e_row1_col1,#T_f257e_row2_col2,#T_f257e_row3_col3,#T_f257e_row4_col4,#T_f257e_row5_col5,#T_f257e_row6_col6,#T_f257e_row7_col7,#T_f257e_row8_col8,#T_f257e_row9_col9,#T_f257e_row10_col10,#T_f257e_row11_col11,#T_f257e_row12_col12,#T_f257e_row13_col13,#T_f257e_row14_col14,#T_f257e_row15_col15,#T_f257e_row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row0_col1,#T_f257e_row1_col0,#T_f257e_row4_col9,#T_f257e_row9_col4,#T_f257e_row9_col13,#T_f257e_row13_col9{\n",
        "            background-color:  #589ec8;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row0_col2,#T_f257e_row2_col0,#T_f257e_row5_col14,#T_f257e_row14_col5{\n",
        "            background-color:  #4697c4;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row0_col3,#T_f257e_row3_col0,#T_f257e_row15_col16,#T_f257e_row16_col15{\n",
        "            background-color:  #2383ba;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row0_col4,#T_f257e_row3_col11,#T_f257e_row3_col16,#T_f257e_row4_col0,#T_f257e_row11_col3,#T_f257e_row16_col3{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row0_col5,#T_f257e_row5_col0{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row0_col6,#T_f257e_row6_col0{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row0_col7,#T_f257e_row0_col14,#T_f257e_row3_col10,#T_f257e_row7_col0,#T_f257e_row10_col3,#T_f257e_row14_col0{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row0_col8,#T_f257e_row8_col0{\n",
        "            background-color:  #a1bbda;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row0_col9,#T_f257e_row3_col15,#T_f257e_row9_col0,#T_f257e_row15_col3{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row0_col10,#T_f257e_row0_col16,#T_f257e_row10_col0,#T_f257e_row16_col0{\n",
        "            background-color:  #99b8d8;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row0_col11,#T_f257e_row11_col0{\n",
        "            background-color:  #96b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row0_col12,#T_f257e_row12_col0{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row0_col13,#T_f257e_row13_col0{\n",
        "            background-color:  #8cb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row0_col15,#T_f257e_row15_col0{\n",
        "            background-color:  #94b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row1_col2,#T_f257e_row2_col1,#T_f257e_row6_col16,#T_f257e_row16_col6{\n",
        "            background-color:  #03476f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row1_col3,#T_f257e_row3_col1{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row1_col4,#T_f257e_row4_col1{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row1_col5,#T_f257e_row5_col1{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row1_col6,#T_f257e_row6_col1{\n",
        "            background-color:  #faf2f8;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row1_col7,#T_f257e_row7_col1{\n",
        "            background-color:  #f5eef6;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row1_col8,#T_f257e_row8_col1{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row1_col9,#T_f257e_row9_col1{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row1_col10,#T_f257e_row10_col1{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row1_col11,#T_f257e_row1_col12,#T_f257e_row11_col1,#T_f257e_row12_col1{\n",
        "            background-color:  #f1ebf5;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row1_col13,#T_f257e_row13_col1{\n",
        "            background-color:  #eae6f1;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row1_col14,#T_f257e_row14_col1{\n",
        "            background-color:  #f4edf6;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row1_col15,#T_f257e_row15_col1{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row1_col16,#T_f257e_row16_col1{\n",
        "            background-color:  #f1ebf4;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row2_col3,#T_f257e_row3_col2{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row2_col4,#T_f257e_row2_col12,#T_f257e_row4_col2,#T_f257e_row12_col2{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row2_col5,#T_f257e_row3_col6,#T_f257e_row5_col2,#T_f257e_row6_col3{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row2_col6,#T_f257e_row6_col2{\n",
        "            background-color:  #f2ecf5;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row2_col7,#T_f257e_row2_col14,#T_f257e_row7_col2,#T_f257e_row14_col2{\n",
        "            background-color:  #efe9f3;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row2_col8,#T_f257e_row8_col2{\n",
        "            background-color:  #f7f0f7;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row2_col9,#T_f257e_row9_col2{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row2_col10,#T_f257e_row10_col2{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row2_col11,#T_f257e_row2_col16,#T_f257e_row11_col2,#T_f257e_row16_col2{\n",
        "            background-color:  #e8e4f0;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row2_col13,#T_f257e_row13_col2{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row2_col15,#T_f257e_row15_col2{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row3_col4,#T_f257e_row4_col3{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row3_col5,#T_f257e_row5_col3{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row3_col7,#T_f257e_row7_col3{\n",
        "            background-color:  #c9cee4;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row3_col8,#T_f257e_row3_col12,#T_f257e_row8_col3,#T_f257e_row12_col3{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row3_col9,#T_f257e_row9_col3{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row3_col13,#T_f257e_row13_col3{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row3_col14,#T_f257e_row14_col3{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row4_col5,#T_f257e_row5_col4{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row4_col6,#T_f257e_row6_col4{\n",
        "            background-color:  #05659f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row4_col7,#T_f257e_row5_col11,#T_f257e_row7_col4,#T_f257e_row11_col5{\n",
        "            background-color:  #0569a4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row4_col8,#T_f257e_row8_col4{\n",
        "            background-color:  #04639b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row4_col10,#T_f257e_row6_col9,#T_f257e_row6_col15,#T_f257e_row9_col6,#T_f257e_row10_col4,#T_f257e_row15_col6{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row4_col11,#T_f257e_row5_col7,#T_f257e_row7_col5,#T_f257e_row11_col4{\n",
        "            background-color:  #056ba7;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row4_col12,#T_f257e_row4_col16,#T_f257e_row12_col4,#T_f257e_row16_col4{\n",
        "            background-color:  #0566a0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row4_col13,#T_f257e_row9_col10,#T_f257e_row10_col9,#T_f257e_row13_col4{\n",
        "            background-color:  #0d75b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row4_col14,#T_f257e_row10_col11,#T_f257e_row11_col10,#T_f257e_row14_col4{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row4_col15,#T_f257e_row15_col4{\n",
        "            background-color:  #549cc7;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row5_col6,#T_f257e_row6_col5{\n",
        "            background-color:  #04629a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row5_col8,#T_f257e_row8_col5,#T_f257e_row10_col13,#T_f257e_row12_col14,#T_f257e_row13_col10,#T_f257e_row14_col12{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row5_col9,#T_f257e_row9_col5{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row5_col10,#T_f257e_row10_col5{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row5_col12,#T_f257e_row12_col5{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row5_col13,#T_f257e_row13_col5{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row5_col15,#T_f257e_row15_col5{\n",
        "            background-color:  #84b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row5_col16,#T_f257e_row11_col12,#T_f257e_row12_col11,#T_f257e_row16_col5{\n",
        "            background-color:  #045280;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row6_col7,#T_f257e_row7_col6,#T_f257e_row8_col12,#T_f257e_row8_col16,#T_f257e_row12_col8,#T_f257e_row16_col8{\n",
        "            background-color:  #034c78;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row6_col8,#T_f257e_row8_col6{\n",
        "            background-color:  #034165;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row6_col10,#T_f257e_row7_col11,#T_f257e_row10_col6,#T_f257e_row11_col7{\n",
        "            background-color:  #045788;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row6_col11,#T_f257e_row10_col16,#T_f257e_row11_col6,#T_f257e_row11_col16,#T_f257e_row12_col13,#T_f257e_row13_col12,#T_f257e_row16_col10,#T_f257e_row16_col11{\n",
        "            background-color:  #045687;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row6_col12,#T_f257e_row8_col14,#T_f257e_row12_col6,#T_f257e_row13_col16,#T_f257e_row14_col8,#T_f257e_row16_col13{\n",
        "            background-color:  #045585;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row6_col13,#T_f257e_row13_col6{\n",
        "            background-color:  #046299;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row6_col14,#T_f257e_row7_col13,#T_f257e_row13_col7,#T_f257e_row14_col6{\n",
        "            background-color:  #04588a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row7_col8,#T_f257e_row8_col7{\n",
        "            background-color:  #034871;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row7_col9,#T_f257e_row9_col7,#T_f257e_row9_col11,#T_f257e_row11_col9{\n",
        "            background-color:  #4e9ac6;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row7_col10,#T_f257e_row10_col7{\n",
        "            background-color:  #045e93;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row7_col12,#T_f257e_row12_col7{\n",
        "            background-color:  #034d79;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row7_col14,#T_f257e_row14_col7{\n",
        "            background-color:  #045b8f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row7_col15,#T_f257e_row15_col7{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row7_col16,#T_f257e_row16_col7{\n",
        "            background-color:  #034a74;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row8_col9,#T_f257e_row9_col8{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row8_col10,#T_f257e_row10_col8,#T_f257e_row11_col13,#T_f257e_row13_col11{\n",
        "            background-color:  #04649d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row8_col11,#T_f257e_row11_col8{\n",
        "            background-color:  #03517e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row8_col13,#T_f257e_row13_col8{\n",
        "            background-color:  #045d92;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row8_col15,#T_f257e_row15_col8{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row9_col12,#T_f257e_row12_col9{\n",
        "            background-color:  #5c9fc9;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row9_col14,#T_f257e_row9_col15,#T_f257e_row14_col9,#T_f257e_row15_col9{\n",
        "            background-color:  #4897c4;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row9_col16,#T_f257e_row10_col15,#T_f257e_row15_col10,#T_f257e_row16_col9{\n",
        "            background-color:  #1c7fb8;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row10_col12,#T_f257e_row12_col10,#T_f257e_row14_col16,#T_f257e_row16_col14{\n",
        "            background-color:  #0568a3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row10_col14,#T_f257e_row14_col10{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row11_col14,#T_f257e_row14_col11{\n",
        "            background-color:  #04649e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row11_col15,#T_f257e_row15_col11{\n",
        "            background-color:  #2f8bbe;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row12_col15,#T_f257e_row15_col12{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_f257e_row12_col16,#T_f257e_row16_col12{\n",
        "            background-color:  #03446a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row13_col14,#T_f257e_row14_col13{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f257e_row13_col15,#T_f257e_row14_col15,#T_f257e_row15_col13,#T_f257e_row15_col14{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }</style><table id=\"T_f257e_\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_f257e_level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_f257e_row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_f257e_row0_col1\" class=\"data row0 col1\" >0.123338</td>\n",
        "                        <td id=\"T_f257e_row0_col2\" class=\"data row0 col2\" >0.192296</td>\n",
        "                        <td id=\"T_f257e_row0_col3\" class=\"data row0 col3\" >0.353707</td>\n",
        "                        <td id=\"T_f257e_row0_col4\" class=\"data row0 col4\" >-0.510756</td>\n",
        "                        <td id=\"T_f257e_row0_col5\" class=\"data row0 col5\" >-0.085190</td>\n",
        "                        <td id=\"T_f257e_row0_col6\" class=\"data row0 col6\" >-0.178544</td>\n",
        "                        <td id=\"T_f257e_row0_col7\" class=\"data row0 col7\" >-0.236270</td>\n",
        "                        <td id=\"T_f257e_row0_col8\" class=\"data row0 col8\" >-0.205573</td>\n",
        "                        <td id=\"T_f257e_row0_col9\" class=\"data row0 col9\" >-0.009043</td>\n",
        "                        <td id=\"T_f257e_row0_col10\" class=\"data row0 col10\" >-0.169393</td>\n",
        "                        <td id=\"T_f257e_row0_col11\" class=\"data row0 col11\" >-0.152568</td>\n",
        "                        <td id=\"T_f257e_row0_col12\" class=\"data row0 col12\" >-0.159866</td>\n",
        "                        <td id=\"T_f257e_row0_col13\" class=\"data row0 col13\" >-0.101042</td>\n",
        "                        <td id=\"T_f257e_row0_col14\" class=\"data row0 col14\" >-0.235842</td>\n",
        "                        <td id=\"T_f257e_row0_col15\" class=\"data row0 col15\" >-0.144510</td>\n",
        "                        <td id=\"T_f257e_row0_col16\" class=\"data row0 col16\" >-0.168435</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f257e_level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_f257e_row1_col0\" class=\"data row1 col0\" >0.123338</td>\n",
        "                        <td id=\"T_f257e_row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_f257e_row1_col2\" class=\"data row1 col2\" >0.892060</td>\n",
        "                        <td id=\"T_f257e_row1_col3\" class=\"data row1 col3\" >0.479949</td>\n",
        "                        <td id=\"T_f257e_row1_col4\" class=\"data row1 col4\" >-0.621688</td>\n",
        "                        <td id=\"T_f257e_row1_col5\" class=\"data row1 col5\" >-0.476641</td>\n",
        "                        <td id=\"T_f257e_row1_col6\" class=\"data row1 col6\" >-0.899632</td>\n",
        "                        <td id=\"T_f257e_row1_col7\" class=\"data row1 col7\" >-0.836026</td>\n",
        "                        <td id=\"T_f257e_row1_col8\" class=\"data row1 col8\" >-0.971090</td>\n",
        "                        <td id=\"T_f257e_row1_col9\" class=\"data row1 col9\" >-0.137235</td>\n",
        "                        <td id=\"T_f257e_row1_col10\" class=\"data row1 col10\" >-0.590235</td>\n",
        "                        <td id=\"T_f257e_row1_col11\" class=\"data row1 col11\" >-0.793085</td>\n",
        "                        <td id=\"T_f257e_row1_col12\" class=\"data row1 col12\" >-0.791524</td>\n",
        "                        <td id=\"T_f257e_row1_col13\" class=\"data row1 col13\" >-0.706063</td>\n",
        "                        <td id=\"T_f257e_row1_col14\" class=\"data row1 col14\" >-0.824767</td>\n",
        "                        <td id=\"T_f257e_row1_col15\" class=\"data row1 col15\" >-0.450033</td>\n",
        "                        <td id=\"T_f257e_row1_col16\" class=\"data row1 col16\" >-0.784584</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f257e_level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_f257e_row2_col0\" class=\"data row2 col0\" >0.192296</td>\n",
        "                        <td id=\"T_f257e_row2_col1\" class=\"data row2 col1\" >0.892060</td>\n",
        "                        <td id=\"T_f257e_row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_f257e_row2_col3\" class=\"data row2 col3\" >0.535669</td>\n",
        "                        <td id=\"T_f257e_row2_col4\" class=\"data row2 col4\" >-0.675129</td>\n",
        "                        <td id=\"T_f257e_row2_col5\" class=\"data row2 col5\" >-0.460799</td>\n",
        "                        <td id=\"T_f257e_row2_col6\" class=\"data row2 col6\" >-0.794488</td>\n",
        "                        <td id=\"T_f257e_row2_col7\" class=\"data row2 col7\" >-0.762880</td>\n",
        "                        <td id=\"T_f257e_row2_col8\" class=\"data row2 col8\" >-0.861971</td>\n",
        "                        <td id=\"T_f257e_row2_col9\" class=\"data row2 col9\" >-0.109107</td>\n",
        "                        <td id=\"T_f257e_row2_col10\" class=\"data row2 col10\" >-0.559739</td>\n",
        "                        <td id=\"T_f257e_row2_col11\" class=\"data row2 col11\" >-0.687257</td>\n",
        "                        <td id=\"T_f257e_row2_col12\" class=\"data row2 col12\" >-0.673971</td>\n",
        "                        <td id=\"T_f257e_row2_col13\" class=\"data row2 col13\" >-0.614765</td>\n",
        "                        <td id=\"T_f257e_row2_col14\" class=\"data row2 col14\" >-0.758398</td>\n",
        "                        <td id=\"T_f257e_row2_col15\" class=\"data row2 col15\" >-0.362769</td>\n",
        "                        <td id=\"T_f257e_row2_col16\" class=\"data row2 col16\" >-0.687031</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f257e_level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_f257e_row3_col0\" class=\"data row3 col0\" >0.353707</td>\n",
        "                        <td id=\"T_f257e_row3_col1\" class=\"data row3 col1\" >0.479949</td>\n",
        "                        <td id=\"T_f257e_row3_col2\" class=\"data row3 col2\" >0.535669</td>\n",
        "                        <td id=\"T_f257e_row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_f257e_row3_col4\" class=\"data row3 col4\" >-0.744891</td>\n",
        "                        <td id=\"T_f257e_row3_col5\" class=\"data row3 col5\" >-0.499001</td>\n",
        "                        <td id=\"T_f257e_row3_col6\" class=\"data row3 col6\" >-0.457709</td>\n",
        "                        <td id=\"T_f257e_row3_col7\" class=\"data row3 col7\" >-0.436929</td>\n",
        "                        <td id=\"T_f257e_row3_col8\" class=\"data row3 col8\" >-0.525661</td>\n",
        "                        <td id=\"T_f257e_row3_col9\" class=\"data row3 col9\" >-0.070807</td>\n",
        "                        <td id=\"T_f257e_row3_col10\" class=\"data row3 col10\" >-0.237202</td>\n",
        "                        <td id=\"T_f257e_row3_col11\" class=\"data row3 col11\" >-0.511579</td>\n",
        "                        <td id=\"T_f257e_row3_col12\" class=\"data row3 col12\" >-0.528602</td>\n",
        "                        <td id=\"T_f257e_row3_col13\" class=\"data row3 col13\" >-0.397320</td>\n",
        "                        <td id=\"T_f257e_row3_col14\" class=\"data row3 col14\" >-0.300444</td>\n",
        "                        <td id=\"T_f257e_row3_col15\" class=\"data row3 col15\" >-0.013122</td>\n",
        "                        <td id=\"T_f257e_row3_col16\" class=\"data row3 col16\" >-0.513673</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f257e_level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_f257e_row4_col0\" class=\"data row4 col0\" >-0.510756</td>\n",
        "                        <td id=\"T_f257e_row4_col1\" class=\"data row4 col1\" >-0.621688</td>\n",
        "                        <td id=\"T_f257e_row4_col2\" class=\"data row4 col2\" >-0.675129</td>\n",
        "                        <td id=\"T_f257e_row4_col3\" class=\"data row4 col3\" >-0.744891</td>\n",
        "                        <td id=\"T_f257e_row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_f257e_row4_col5\" class=\"data row4 col5\" >0.490627</td>\n",
        "                        <td id=\"T_f257e_row4_col6\" class=\"data row4 col6\" >0.630121</td>\n",
        "                        <td id=\"T_f257e_row4_col7\" class=\"data row4 col7\" >0.586261</td>\n",
        "                        <td id=\"T_f257e_row4_col8\" class=\"data row4 col8\" >0.653055</td>\n",
        "                        <td id=\"T_f257e_row4_col9\" class=\"data row4 col9\" >0.123408</td>\n",
        "                        <td id=\"T_f257e_row4_col10\" class=\"data row4 col10\" >0.410685</td>\n",
        "                        <td id=\"T_f257e_row4_col11\" class=\"data row4 col11\" >0.565441</td>\n",
        "                        <td id=\"T_f257e_row4_col12\" class=\"data row4 col12\" >0.619715</td>\n",
        "                        <td id=\"T_f257e_row4_col13\" class=\"data row4 col13\" >0.465076</td>\n",
        "                        <td id=\"T_f257e_row4_col14\" class=\"data row4 col14\" >0.520125</td>\n",
        "                        <td id=\"T_f257e_row4_col15\" class=\"data row4 col15\" >0.144951</td>\n",
        "                        <td id=\"T_f257e_row4_col16\" class=\"data row4 col16\" >0.616442</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f257e_level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_f257e_row5_col0\" class=\"data row5 col0\" >-0.085190</td>\n",
        "                        <td id=\"T_f257e_row5_col1\" class=\"data row5 col1\" >-0.476641</td>\n",
        "                        <td id=\"T_f257e_row5_col2\" class=\"data row5 col2\" >-0.460799</td>\n",
        "                        <td id=\"T_f257e_row5_col3\" class=\"data row5 col3\" >-0.499001</td>\n",
        "                        <td id=\"T_f257e_row5_col4\" class=\"data row5 col4\" >0.490627</td>\n",
        "                        <td id=\"T_f257e_row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_f257e_row5_col6\" class=\"data row5 col6\" >0.656247</td>\n",
        "                        <td id=\"T_f257e_row5_col7\" class=\"data row5 col7\" >0.561757</td>\n",
        "                        <td id=\"T_f257e_row5_col8\" class=\"data row5 col8\" >0.558397</td>\n",
        "                        <td id=\"T_f257e_row5_col9\" class=\"data row5 col9\" >0.340914</td>\n",
        "                        <td id=\"T_f257e_row5_col10\" class=\"data row5 col10\" >0.610180</td>\n",
        "                        <td id=\"T_f257e_row5_col11\" class=\"data row5 col11\" >0.590422</td>\n",
        "                        <td id=\"T_f257e_row5_col12\" class=\"data row5 col12\" >0.725697</td>\n",
        "                        <td id=\"T_f257e_row5_col13\" class=\"data row5 col13\" >0.473583</td>\n",
        "                        <td id=\"T_f257e_row5_col14\" class=\"data row5 col14\" >0.197320</td>\n",
        "                        <td id=\"T_f257e_row5_col15\" class=\"data row5 col15\" >-0.067777</td>\n",
        "                        <td id=\"T_f257e_row5_col16\" class=\"data row5 col16\" >0.809865</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f257e_level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_f257e_row6_col0\" class=\"data row6 col0\" >-0.178544</td>\n",
        "                        <td id=\"T_f257e_row6_col1\" class=\"data row6 col1\" >-0.899632</td>\n",
        "                        <td id=\"T_f257e_row6_col2\" class=\"data row6 col2\" >-0.794488</td>\n",
        "                        <td id=\"T_f257e_row6_col3\" class=\"data row6 col3\" >-0.457709</td>\n",
        "                        <td id=\"T_f257e_row6_col4\" class=\"data row6 col4\" >0.630121</td>\n",
        "                        <td id=\"T_f257e_row6_col5\" class=\"data row6 col5\" >0.656247</td>\n",
        "                        <td id=\"T_f257e_row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_f257e_row6_col7\" class=\"data row6 col7\" >0.853216</td>\n",
        "                        <td id=\"T_f257e_row6_col8\" class=\"data row6 col8\" >0.931025</td>\n",
        "                        <td id=\"T_f257e_row6_col9\" class=\"data row6 col9\" >0.409908</td>\n",
        "                        <td id=\"T_f257e_row6_col10\" class=\"data row6 col10\" >0.775561</td>\n",
        "                        <td id=\"T_f257e_row6_col11\" class=\"data row6 col11\" >0.777634</td>\n",
        "                        <td id=\"T_f257e_row6_col12\" class=\"data row6 col12\" >0.791588</td>\n",
        "                        <td id=\"T_f257e_row6_col13\" class=\"data row6 col13\" >0.664782</td>\n",
        "                        <td id=\"T_f257e_row6_col14\" class=\"data row6 col14\" >0.762891</td>\n",
        "                        <td id=\"T_f257e_row6_col15\" class=\"data row6 col15\" >0.408893</td>\n",
        "                        <td id=\"T_f257e_row6_col16\" class=\"data row6 col16\" >0.887395</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f257e_level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_f257e_row7_col0\" class=\"data row7 col0\" >-0.236270</td>\n",
        "                        <td id=\"T_f257e_row7_col1\" class=\"data row7 col1\" >-0.836026</td>\n",
        "                        <td id=\"T_f257e_row7_col2\" class=\"data row7 col2\" >-0.762880</td>\n",
        "                        <td id=\"T_f257e_row7_col3\" class=\"data row7 col3\" >-0.436929</td>\n",
        "                        <td id=\"T_f257e_row7_col4\" class=\"data row7 col4\" >0.586261</td>\n",
        "                        <td id=\"T_f257e_row7_col5\" class=\"data row7 col5\" >0.561757</td>\n",
        "                        <td id=\"T_f257e_row7_col6\" class=\"data row7 col6\" >0.853216</td>\n",
        "                        <td id=\"T_f257e_row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_f257e_row7_col8\" class=\"data row7 col8\" >0.882595</td>\n",
        "                        <td id=\"T_f257e_row7_col9\" class=\"data row7 col9\" >0.161152</td>\n",
        "                        <td id=\"T_f257e_row7_col10\" class=\"data row7 col10\" >0.710813</td>\n",
        "                        <td id=\"T_f257e_row7_col11\" class=\"data row7 col11\" >0.770237</td>\n",
        "                        <td id=\"T_f257e_row7_col12\" class=\"data row7 col12\" >0.845643</td>\n",
        "                        <td id=\"T_f257e_row7_col13\" class=\"data row7 col13\" >0.767049</td>\n",
        "                        <td id=\"T_f257e_row7_col14\" class=\"data row7 col14\" >0.737430</td>\n",
        "                        <td id=\"T_f257e_row7_col15\" class=\"data row7 col15\" >0.432559</td>\n",
        "                        <td id=\"T_f257e_row7_col16\" class=\"data row7 col16\" >0.867551</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f257e_level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_f257e_row8_col0\" class=\"data row8 col0\" >-0.205573</td>\n",
        "                        <td id=\"T_f257e_row8_col1\" class=\"data row8 col1\" >-0.971090</td>\n",
        "                        <td id=\"T_f257e_row8_col2\" class=\"data row8 col2\" >-0.861971</td>\n",
        "                        <td id=\"T_f257e_row8_col3\" class=\"data row8 col3\" >-0.525661</td>\n",
        "                        <td id=\"T_f257e_row8_col4\" class=\"data row8 col4\" >0.653055</td>\n",
        "                        <td id=\"T_f257e_row8_col5\" class=\"data row8 col5\" >0.558397</td>\n",
        "                        <td id=\"T_f257e_row8_col6\" class=\"data row8 col6\" >0.931025</td>\n",
        "                        <td id=\"T_f257e_row8_col7\" class=\"data row8 col7\" >0.882595</td>\n",
        "                        <td id=\"T_f257e_row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_f257e_row8_col9\" class=\"data row8 col9\" >0.168725</td>\n",
        "                        <td id=\"T_f257e_row8_col10\" class=\"data row8 col10\" >0.643285</td>\n",
        "                        <td id=\"T_f257e_row8_col11\" class=\"data row8 col11\" >0.819063</td>\n",
        "                        <td id=\"T_f257e_row8_col12\" class=\"data row8 col12\" >0.848402</td>\n",
        "                        <td id=\"T_f257e_row8_col13\" class=\"data row8 col13\" >0.718333</td>\n",
        "                        <td id=\"T_f257e_row8_col14\" class=\"data row8 col14\" >0.785380</td>\n",
        "                        <td id=\"T_f257e_row8_col15\" class=\"data row8 col15\" >0.418124</td>\n",
        "                        <td id=\"T_f257e_row8_col16\" class=\"data row8 col16\" >0.848796</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f257e_level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_f257e_row9_col0\" class=\"data row9 col0\" >-0.009043</td>\n",
        "                        <td id=\"T_f257e_row9_col1\" class=\"data row9 col1\" >-0.137235</td>\n",
        "                        <td id=\"T_f257e_row9_col2\" class=\"data row9 col2\" >-0.109107</td>\n",
        "                        <td id=\"T_f257e_row9_col3\" class=\"data row9 col3\" >-0.070807</td>\n",
        "                        <td id=\"T_f257e_row9_col4\" class=\"data row9 col4\" >0.123408</td>\n",
        "                        <td id=\"T_f257e_row9_col5\" class=\"data row9 col5\" >0.340914</td>\n",
        "                        <td id=\"T_f257e_row9_col6\" class=\"data row9 col6\" >0.409908</td>\n",
        "                        <td id=\"T_f257e_row9_col7\" class=\"data row9 col7\" >0.161152</td>\n",
        "                        <td id=\"T_f257e_row9_col8\" class=\"data row9 col8\" >0.168725</td>\n",
        "                        <td id=\"T_f257e_row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_f257e_row9_col10\" class=\"data row9 col10\" >0.467740</td>\n",
        "                        <td id=\"T_f257e_row9_col11\" class=\"data row9 col11\" >0.162471</td>\n",
        "                        <td id=\"T_f257e_row9_col12\" class=\"data row9 col12\" >0.111757</td>\n",
        "                        <td id=\"T_f257e_row9_col13\" class=\"data row9 col13\" >0.124562</td>\n",
        "                        <td id=\"T_f257e_row9_col14\" class=\"data row9 col14\" >0.191461</td>\n",
        "                        <td id=\"T_f257e_row9_col15\" class=\"data row9 col15\" >0.186473</td>\n",
        "                        <td id=\"T_f257e_row9_col16\" class=\"data row9 col16\" >0.387645</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f257e_level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_f257e_row10_col0\" class=\"data row10 col0\" >-0.169393</td>\n",
        "                        <td id=\"T_f257e_row10_col1\" class=\"data row10 col1\" >-0.590235</td>\n",
        "                        <td id=\"T_f257e_row10_col2\" class=\"data row10 col2\" >-0.559739</td>\n",
        "                        <td id=\"T_f257e_row10_col3\" class=\"data row10 col3\" >-0.237202</td>\n",
        "                        <td id=\"T_f257e_row10_col4\" class=\"data row10 col4\" >0.410685</td>\n",
        "                        <td id=\"T_f257e_row10_col5\" class=\"data row10 col5\" >0.610180</td>\n",
        "                        <td id=\"T_f257e_row10_col6\" class=\"data row10 col6\" >0.775561</td>\n",
        "                        <td id=\"T_f257e_row10_col7\" class=\"data row10 col7\" >0.710813</td>\n",
        "                        <td id=\"T_f257e_row10_col8\" class=\"data row10 col8\" >0.643285</td>\n",
        "                        <td id=\"T_f257e_row10_col9\" class=\"data row10 col9\" >0.467740</td>\n",
        "                        <td id=\"T_f257e_row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_f257e_row10_col11\" class=\"data row10 col11\" >0.518128</td>\n",
        "                        <td id=\"T_f257e_row10_col12\" class=\"data row10 col12\" >0.599587</td>\n",
        "                        <td id=\"T_f257e_row10_col13\" class=\"data row10 col13\" >0.555754</td>\n",
        "                        <td id=\"T_f257e_row10_col14\" class=\"data row10 col14\" >0.570753</td>\n",
        "                        <td id=\"T_f257e_row10_col15\" class=\"data row10 col15\" >0.386345</td>\n",
        "                        <td id=\"T_f257e_row10_col16\" class=\"data row10 col16\" >0.781603</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f257e_level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_f257e_row11_col0\" class=\"data row11 col0\" >-0.152568</td>\n",
        "                        <td id=\"T_f257e_row11_col1\" class=\"data row11 col1\" >-0.793085</td>\n",
        "                        <td id=\"T_f257e_row11_col2\" class=\"data row11 col2\" >-0.687257</td>\n",
        "                        <td id=\"T_f257e_row11_col3\" class=\"data row11 col3\" >-0.511579</td>\n",
        "                        <td id=\"T_f257e_row11_col4\" class=\"data row11 col4\" >0.565441</td>\n",
        "                        <td id=\"T_f257e_row11_col5\" class=\"data row11 col5\" >0.590422</td>\n",
        "                        <td id=\"T_f257e_row11_col6\" class=\"data row11 col6\" >0.777634</td>\n",
        "                        <td id=\"T_f257e_row11_col7\" class=\"data row11 col7\" >0.770237</td>\n",
        "                        <td id=\"T_f257e_row11_col8\" class=\"data row11 col8\" >0.819063</td>\n",
        "                        <td id=\"T_f257e_row11_col9\" class=\"data row11 col9\" >0.162471</td>\n",
        "                        <td id=\"T_f257e_row11_col10\" class=\"data row11 col10\" >0.518128</td>\n",
        "                        <td id=\"T_f257e_row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_f257e_row11_col12\" class=\"data row11 col12\" >0.813151</td>\n",
        "                        <td id=\"T_f257e_row11_col13\" class=\"data row11 col13\" >0.644991</td>\n",
        "                        <td id=\"T_f257e_row11_col14\" class=\"data row11 col14\" >0.631446</td>\n",
        "                        <td id=\"T_f257e_row11_col15\" class=\"data row11 col15\" >0.297043</td>\n",
        "                        <td id=\"T_f257e_row11_col16\" class=\"data row11 col16\" >0.784022</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f257e_level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_f257e_row12_col0\" class=\"data row12 col0\" >-0.159866</td>\n",
        "                        <td id=\"T_f257e_row12_col1\" class=\"data row12 col1\" >-0.791524</td>\n",
        "                        <td id=\"T_f257e_row12_col2\" class=\"data row12 col2\" >-0.673971</td>\n",
        "                        <td id=\"T_f257e_row12_col3\" class=\"data row12 col3\" >-0.528602</td>\n",
        "                        <td id=\"T_f257e_row12_col4\" class=\"data row12 col4\" >0.619715</td>\n",
        "                        <td id=\"T_f257e_row12_col5\" class=\"data row12 col5\" >0.725697</td>\n",
        "                        <td id=\"T_f257e_row12_col6\" class=\"data row12 col6\" >0.791588</td>\n",
        "                        <td id=\"T_f257e_row12_col7\" class=\"data row12 col7\" >0.845643</td>\n",
        "                        <td id=\"T_f257e_row12_col8\" class=\"data row12 col8\" >0.848402</td>\n",
        "                        <td id=\"T_f257e_row12_col9\" class=\"data row12 col9\" >0.111757</td>\n",
        "                        <td id=\"T_f257e_row12_col10\" class=\"data row12 col10\" >0.599587</td>\n",
        "                        <td id=\"T_f257e_row12_col11\" class=\"data row12 col11\" >0.813151</td>\n",
        "                        <td id=\"T_f257e_row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_f257e_row12_col13\" class=\"data row12 col13\" >0.780793</td>\n",
        "                        <td id=\"T_f257e_row12_col14\" class=\"data row12 col14\" >0.559723</td>\n",
        "                        <td id=\"T_f257e_row12_col15\" class=\"data row12 col15\" >0.270011</td>\n",
        "                        <td id=\"T_f257e_row12_col16\" class=\"data row12 col16\" >0.908907</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f257e_level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_f257e_row13_col0\" class=\"data row13 col0\" >-0.101042</td>\n",
        "                        <td id=\"T_f257e_row13_col1\" class=\"data row13 col1\" >-0.706063</td>\n",
        "                        <td id=\"T_f257e_row13_col2\" class=\"data row13 col2\" >-0.614765</td>\n",
        "                        <td id=\"T_f257e_row13_col3\" class=\"data row13 col3\" >-0.397320</td>\n",
        "                        <td id=\"T_f257e_row13_col4\" class=\"data row13 col4\" >0.465076</td>\n",
        "                        <td id=\"T_f257e_row13_col5\" class=\"data row13 col5\" >0.473583</td>\n",
        "                        <td id=\"T_f257e_row13_col6\" class=\"data row13 col6\" >0.664782</td>\n",
        "                        <td id=\"T_f257e_row13_col7\" class=\"data row13 col7\" >0.767049</td>\n",
        "                        <td id=\"T_f257e_row13_col8\" class=\"data row13 col8\" >0.718333</td>\n",
        "                        <td id=\"T_f257e_row13_col9\" class=\"data row13 col9\" >0.124562</td>\n",
        "                        <td id=\"T_f257e_row13_col10\" class=\"data row13 col10\" >0.555754</td>\n",
        "                        <td id=\"T_f257e_row13_col11\" class=\"data row13 col11\" >0.644991</td>\n",
        "                        <td id=\"T_f257e_row13_col12\" class=\"data row13 col12\" >0.780793</td>\n",
        "                        <td id=\"T_f257e_row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_f257e_row13_col14\" class=\"data row13 col14\" >0.685549</td>\n",
        "                        <td id=\"T_f257e_row13_col15\" class=\"data row13 col15\" >0.673454</td>\n",
        "                        <td id=\"T_f257e_row13_col16\" class=\"data row13 col16\" >0.786648</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f257e_level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_f257e_row14_col0\" class=\"data row14 col0\" >-0.235842</td>\n",
        "                        <td id=\"T_f257e_row14_col1\" class=\"data row14 col1\" >-0.824767</td>\n",
        "                        <td id=\"T_f257e_row14_col2\" class=\"data row14 col2\" >-0.758398</td>\n",
        "                        <td id=\"T_f257e_row14_col3\" class=\"data row14 col3\" >-0.300444</td>\n",
        "                        <td id=\"T_f257e_row14_col4\" class=\"data row14 col4\" >0.520125</td>\n",
        "                        <td id=\"T_f257e_row14_col5\" class=\"data row14 col5\" >0.197320</td>\n",
        "                        <td id=\"T_f257e_row14_col6\" class=\"data row14 col6\" >0.762891</td>\n",
        "                        <td id=\"T_f257e_row14_col7\" class=\"data row14 col7\" >0.737430</td>\n",
        "                        <td id=\"T_f257e_row14_col8\" class=\"data row14 col8\" >0.785380</td>\n",
        "                        <td id=\"T_f257e_row14_col9\" class=\"data row14 col9\" >0.191461</td>\n",
        "                        <td id=\"T_f257e_row14_col10\" class=\"data row14 col10\" >0.570753</td>\n",
        "                        <td id=\"T_f257e_row14_col11\" class=\"data row14 col11\" >0.631446</td>\n",
        "                        <td id=\"T_f257e_row14_col12\" class=\"data row14 col12\" >0.559723</td>\n",
        "                        <td id=\"T_f257e_row14_col13\" class=\"data row14 col13\" >0.685549</td>\n",
        "                        <td id=\"T_f257e_row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_f257e_row14_col15\" class=\"data row14 col15\" >0.670349</td>\n",
        "                        <td id=\"T_f257e_row14_col16\" class=\"data row14 col16\" >0.596007</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f257e_level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_f257e_row15_col0\" class=\"data row15 col0\" >-0.144510</td>\n",
        "                        <td id=\"T_f257e_row15_col1\" class=\"data row15 col1\" >-0.450033</td>\n",
        "                        <td id=\"T_f257e_row15_col2\" class=\"data row15 col2\" >-0.362769</td>\n",
        "                        <td id=\"T_f257e_row15_col3\" class=\"data row15 col3\" >-0.013122</td>\n",
        "                        <td id=\"T_f257e_row15_col4\" class=\"data row15 col4\" >0.144951</td>\n",
        "                        <td id=\"T_f257e_row15_col5\" class=\"data row15 col5\" >-0.067777</td>\n",
        "                        <td id=\"T_f257e_row15_col6\" class=\"data row15 col6\" >0.408893</td>\n",
        "                        <td id=\"T_f257e_row15_col7\" class=\"data row15 col7\" >0.432559</td>\n",
        "                        <td id=\"T_f257e_row15_col8\" class=\"data row15 col8\" >0.418124</td>\n",
        "                        <td id=\"T_f257e_row15_col9\" class=\"data row15 col9\" >0.186473</td>\n",
        "                        <td id=\"T_f257e_row15_col10\" class=\"data row15 col10\" >0.386345</td>\n",
        "                        <td id=\"T_f257e_row15_col11\" class=\"data row15 col11\" >0.297043</td>\n",
        "                        <td id=\"T_f257e_row15_col12\" class=\"data row15 col12\" >0.270011</td>\n",
        "                        <td id=\"T_f257e_row15_col13\" class=\"data row15 col13\" >0.673454</td>\n",
        "                        <td id=\"T_f257e_row15_col14\" class=\"data row15 col14\" >0.670349</td>\n",
        "                        <td id=\"T_f257e_row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_f257e_row15_col16\" class=\"data row15 col16\" >0.358591</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f257e_level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_f257e_row16_col0\" class=\"data row16 col0\" >-0.168435</td>\n",
        "                        <td id=\"T_f257e_row16_col1\" class=\"data row16 col1\" >-0.784584</td>\n",
        "                        <td id=\"T_f257e_row16_col2\" class=\"data row16 col2\" >-0.687031</td>\n",
        "                        <td id=\"T_f257e_row16_col3\" class=\"data row16 col3\" >-0.513673</td>\n",
        "                        <td id=\"T_f257e_row16_col4\" class=\"data row16 col4\" >0.616442</td>\n",
        "                        <td id=\"T_f257e_row16_col5\" class=\"data row16 col5\" >0.809865</td>\n",
        "                        <td id=\"T_f257e_row16_col6\" class=\"data row16 col6\" >0.887395</td>\n",
        "                        <td id=\"T_f257e_row16_col7\" class=\"data row16 col7\" >0.867551</td>\n",
        "                        <td id=\"T_f257e_row16_col8\" class=\"data row16 col8\" >0.848796</td>\n",
        "                        <td id=\"T_f257e_row16_col9\" class=\"data row16 col9\" >0.387645</td>\n",
        "                        <td id=\"T_f257e_row16_col10\" class=\"data row16 col10\" >0.781603</td>\n",
        "                        <td id=\"T_f257e_row16_col11\" class=\"data row16 col11\" >0.784022</td>\n",
        "                        <td id=\"T_f257e_row16_col12\" class=\"data row16 col12\" >0.908907</td>\n",
        "                        <td id=\"T_f257e_row16_col13\" class=\"data row16 col13\" >0.786648</td>\n",
        "                        <td id=\"T_f257e_row16_col14\" class=\"data row16 col14\" >0.596007</td>\n",
        "                        <td id=\"T_f257e_row16_col15\" class=\"data row16 col15\" >0.358591</td>\n",
        "                        <td id=\"T_f257e_row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7fc0d0467940>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
