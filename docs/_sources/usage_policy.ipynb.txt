{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.13.1'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "196"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **16th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{2: ['Solomon Islands', 'Holy See', 'Laos'],\n",
        " 3: ['Timor-Leste', 'Tanzania', 'Saint Kitts and Nevis'],\n",
        " 4: ['Dominica', 'Brunei', 'Saint Lucia'],\n",
        " 5: ['Equatorial Guinea', 'Grenada', 'Fiji'],\n",
        " 6: ['Antigua and Barbuda', 'Mauritius'],\n",
        " 7: ['Saint Vincent and the Grenadines', 'Cambodia', 'Gambia'],\n",
        " 8: ['Kyrgyzstan', 'Madagascar', 'Monaco', 'Vietnam', 'Trinidad and Tobago',\n",
        "     'Northern Mariana Islands', 'Bahamas', 'Seychelles'],\n",
        " 9: ['Virgin Islands, U.S.', 'Oman', 'South Africa', 'Lesotho', 'Kazakhstan',\n",
        "     'Suriname', 'Djibouti', 'Barbados', 'Republic of the Congo', 'Australia',\n",
        "     'Ghana', 'Swaziland', 'Sao Tome and Principe', 'Zambia', 'Bolivia',\n",
        "     'Burundi', 'Liechtenstein', 'Malawi', 'Uzbekistan', 'Zimbabwe'],\n",
        " 10: ['Liberia', 'New Zealand', 'Bahrain', 'Bhutan', \"Cote d'Ivoire\",\n",
        "      'Papua New Guinea', 'Philippines', 'Saudi Arabia', 'Senegal',\n",
        "      'Mozambique', 'Belize', 'Benin', 'Guatemala', 'Jamaica',\n",
        "      'Central African Republic', 'Rwanda', 'Bermuda', 'Namibia', 'Maldives',\n",
        "      'Israel', 'Guyana', 'Venezuela', 'Dominican Republic', 'Honduras',\n",
        "      'Libya', 'Ethiopia', 'Kuwait', 'Comoros', 'Chile', 'Singapore',\n",
        "      'Mongolia', 'Eritrea', 'Angola'],\n",
        " 11: ['India', 'Jordan', 'Cameroon', 'Mexico', 'Taiwan', 'Brazil', 'Nigeria',\n",
        "      'Colombia', 'Nepal', 'Niger', 'Paraguay', 'Argentina', 'Peru', 'Yemen',\n",
        "      'Gabon', 'Cape Verde', 'Egypt', 'Andorra', 'Botswana', 'Iraq',\n",
        "      'Guinea-Bissau', 'Togo', 'Syria', 'Sierra Leone', 'Ecuador', 'Guam',\n",
        "      'Iceland', 'Bangladesh', 'El Salvador', 'Algeria', 'Kenya', 'Puerto Rico',\n",
        "      'Costa Rica', 'Nicaragua'],\n",
        " 12: ['Guinea', 'Japan', 'Georgia', 'Sudan', 'Democratic Republic of the Congo',\n",
        "      'Panama', 'Croatia', 'Indonesia', 'Somalia', 'Montenegro', 'Qatar',\n",
        "      'Kosovo', 'Chad', 'Slovenia', 'Slovakia', 'Tajikistan', 'South Sudan',\n",
        "      'Pakistan'],\n",
        " 13: ['Azerbaijan', 'Armenia', 'Tunisia', 'Latvia', 'Malaysia', 'Luxembourg',\n",
        "      'Moldova', 'San Marino', 'Cyprus', 'Lithuania', 'Hungary', 'Cuba',\n",
        "      'Palestine', 'Russia', 'Burkina Faso', 'Belarus', 'Malta', 'Uganda',\n",
        "      'China', 'United Arab Emirates', 'Bulgaria', 'Serbia', 'Haiti', 'Mali'],\n",
        " 14: ['Mauritania', 'Czech Republic', 'Sri Lanka', 'Bosnia and Herzegovina',\n",
        "      'Uruguay', 'Greece', 'United States', 'Morocco', 'Thailand', 'Norway',\n",
        "      'Afghanistan', 'Turkey', 'Myanmar', 'Poland', 'Iran', 'Switzerland',\n",
        "      'Spain', 'Ireland', 'Albania'],\n",
        " 15: ['Austria', 'Estonia', 'North Macedonia', 'Netherlands', 'Lebanon',\n",
        "      'Sweden', 'Canada', 'Italy'],\n",
        " 16: ['Portugal', 'Germany', 'Denmark', 'Romania', 'Ukraine', 'France',\n",
        "      'Belgium', 'Finland'],\n",
        " 17: ['United Kingdom']}\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=16)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "9"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{16: ['Portugal', 'Germany', 'Denmark', 'Romania', 'Ukraine', 'France',\n",
        "      'Belgium', 'Finland'],\n",
        " 17: ['United Kingdom']}\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"17\" valign=\"top\">United Kingdom</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Feb2020</td>\n",
        "      <td>08Apr2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Apr2020</td>\n",
        "      <td>29Apr2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>30Apr2020</td>\n",
        "      <td>25May2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Aug2020</td>\n",
        "      <td>14Sep2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Sep2020</td>\n",
        "      <td>02Oct2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Oct2020</td>\n",
        "      <td>11Oct2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Oct2020</td>\n",
        "      <td>18Oct2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Oct2020</td>\n",
        "      <td>24Oct2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Oct2020</td>\n",
        "      <td>30Oct2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Oct2020</td>\n",
        "      <td>05Nov2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Nov2020</td>\n",
        "      <td>11Nov2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Nov2020</td>\n",
        "      <td>17Nov2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Nov2020</td>\n",
        "      <td>23Nov2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Nov2020</td>\n",
        "      <td>02Dec2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Dec2020</td>\n",
        "      <td>09Dec2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10Dec2020</td>\n",
        "      <td>16Dec2020</td>\n",
        "      <td>66460344</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "                      Type      Start        End  Population\n",
        "Country        Phase                                        \n",
        "United Kingdom 0th    Past  14Feb2020  08Apr2020    66460344\n",
        "               1st    Past  09Apr2020  29Apr2020    66460344\n",
        "               2nd    Past  30Apr2020  25May2020    66460344\n",
        "               3rd    Past  26May2020  01Aug2020    66460344\n",
        "               4th    Past  02Aug2020  14Sep2020    66460344\n",
        "               5th    Past  15Sep2020  02Oct2020    66460344\n",
        "               6th    Past  03Oct2020  11Oct2020    66460344\n",
        "               7th    Past  12Oct2020  18Oct2020    66460344\n",
        "               8th    Past  19Oct2020  24Oct2020    66460344\n",
        "               9th    Past  25Oct2020  30Oct2020    66460344\n",
        "               10th   Past  31Oct2020  05Nov2020    66460344\n",
        "               11th   Past  06Nov2020  11Nov2020    66460344\n",
        "               12th   Past  12Nov2020  17Nov2020    66460344\n",
        "               13th   Past  18Nov2020  23Nov2020    66460344\n",
        "               14th   Past  24Nov2020  02Dec2020    66460344\n",
        "               15th   Past  03Dec2020  09Dec2020    66460344\n",
        "               16th   Past  10Dec2020  16Dec2020    66460344"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF, timeout=10)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>\n",
        "Running optimization with 4 CPUs...\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  6th phase (09Sep2020 - 30Sep2020): finished  277 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  8th phase (22Oct2020 - 29Oct2020): finished  273 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  5th phase (15Sep2020 - 02Oct2020): finished  266 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  4th phase (02Aug2020 - 14Sep2020): finished  246 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  3rd phase (12Aug2020 - 31Aug2020): finished  255 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  6th phase (03Oct2020 - 11Oct2020): finished  245 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  2nd phase (15Apr2020 - 09May2020): finished  254 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  8th phase (14Oct2020 - 23Oct2020): finished  245 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  4th phase (10Aug2020 - 08Sep2020): finished  268 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 15th phase (10Dec2020 - 16Dec2020): finished  273 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  0th phase (21Mar2020 - 01Apr2020): finished  268 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  1st phase (02May2020 - 07Jul2020): finished  251 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  3rd phase (31Jul2020 - 19Aug2020): finished  253 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  3rd phase (10May2020 - 27Jul2020): finished  245 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 10th phase (31Oct2020 - 05Nov2020): finished  268 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 14th phase (24Nov2020 - 02Dec2020): finished  268 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  1st phase (13Apr2020 - 02May2020): finished  277 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  5th phase (12Aug2020 - 08Sep2020): finished  274 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 10th phase (06Nov2020 - 12Nov2020): finished  274 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  0th phase (14Mar2020 - 03Apr2020): finished  258 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  5th phase (10Sep2020 - 29Sep2020): finished  283 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  4th phase (01Sep2020 - 16Sep2020): finished  282 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  2nd phase (03May2020 - 12Jun2020): finished  271 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  5th phase (09Sep2020 - 20Sep2020): finished  307 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  4th phase (28Jul2020 - 22Aug2020): finished  279 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  2nd phase (20Apr2020 - 04May2020): finished  294 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  8th phase (21Oct2020 - 28Oct2020): finished  293 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 12th phase (09Nov2020 - 15Nov2020): finished  261 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  6th phase (21Sep2020 - 30Sep2020): finished  289 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 12th phase (12Nov2020 - 17Nov2020): finished  285 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  9th phase (24Oct2020 - 02Nov2020): finished  303 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  0th phase (19Mar2020 - 12Apr2020): finished  287 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  1st phase (31May2020 - 08Jul2020): finished  266 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 11th phase (13Nov2020 - 19Nov2020): finished  287 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  3rd phase (13Jun2020 - 09Aug2020): finished  288 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (12Sep2020 - 30Sep2020): finished  290 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 12th phase (13Nov2020 - 22Nov2020): finished  285 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 10th phase (22Oct2020 - 01Nov2020): finished  285 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  1st phase (05Apr2020 - 19Apr2020): finished  309 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU, 13th phase (25Nov2020 - 02Dec2020): finished  285 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  6th phase (30Sep2020 - 11Oct2020): finished  296 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  4th phase (27May2020 - 18Aug2020): finished  282 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 14th phase (25Nov2020 - 05Dec2020): finished  299 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 13th phase (16Nov2020 - 24Nov2020): finished  253 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  0th phase (14Feb2020 - 08Apr2020): finished  243 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (02Apr2020 - 27Apr2020): finished  233 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  2nd phase (30Apr2020 - 25May2020): finished  319 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  9th phase (25Oct2020 - 30Oct2020): finished  275 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  6th phase (21Sep2020 - 04Oct2020): finished  272 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (22Oct2020 - 31Oct2020): finished  339 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  2nd phase (05Apr2020 - 21Apr2020): finished  318 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 14th phase (26Nov2020 - 06Dec2020): finished  285 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  8th phase (06Oct2020 - 11Oct2020): finished  343 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (23Apr2020 - 01Jun2020): finished  322 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 12th phase (11Nov2020 - 16Nov2020): finished  258 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  6th phase (01Oct2020 - 11Oct2020): finished  270 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (30Jul2020 - 26Aug2020): finished  334 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 13th phase (18Nov2020 - 24Nov2020): finished  286 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (14Oct2020 - 21Oct2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  8th phase (13Oct2020 - 22Oct2020): finished  283 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 14th phase (30Nov2020 - 09Dec2020): finished  317 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU, 15th phase (09Dec2020 - 16Dec2020): finished  244 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 14th phase (25Nov2020 - 30Nov2020): finished  261 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  9th phase (23Oct2020 - 29Oct2020): finished  340 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN, 11th phase (12Nov2020 - 19Nov2020): finished  244 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  3rd phase (05May2020 - 26May2020): finished  244 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 13th phase (26Nov2020 - 01Dec2020): finished  236 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (01Oct2020 - 13Oct2020): finished  236 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  0th phase (16Mar2020 - 04Apr2020): finished  246 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 13th phase (23Nov2020 - 03Dec2020): finished  260 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  1st phase (24Mar2020 - 04Apr2020): finished  257 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 15th phase (01Dec2020 - 16Dec2020): finished  292 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  8th phase (19Oct2020 - 24Oct2020): finished  318 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  1st phase (09Apr2020 - 29Apr2020): finished  307 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 15th phase (07Dec2020 - 16Dec2020): finished  301 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  0th phase (05Mar2020 - 01May2020): finished  294 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  4th phase (16Jun2020 - 11Aug2020): finished  284 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 12th phase (13Nov2020 - 23Nov2020): finished  299 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (27Aug2020 - 09Sep2020): finished  290 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  2nd phase (09Jul2020 - 11Aug2020): finished  291 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  7th phase (01Oct2020 - 12Oct2020): finished  259 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  7th phase (28Sep2020 - 05Oct2020): finished  260 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  7th phase (05Oct2020 - 13Oct2020): finished  263 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN, 10th phase (03Nov2020 - 11Nov2020): finished  254 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 15th phase (03Dec2020 - 09Dec2020): finished  361 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (22Sep2020 - 30Sep2020): finished  367 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (10Sep2020 - 21Sep2020): finished  355 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 11th phase (01Nov2020 - 10Nov2020): finished  366 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  6th phase (15Sep2020 - 27Sep2020): finished  316 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  5th phase (23Aug2020 - 14Sep2020): finished  321 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (12Aug2020 - 11Sep2020): finished  319 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 10th phase (30Oct2020 - 04Nov2020): finished  323 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  9th phase (29Oct2020 - 04Nov2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  4th phase (20Aug2020 - 09Sep2020): finished  355 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (01Oct2020 - 08Oct2020): finished  367 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 11th phase (03Nov2020 - 12Nov2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (02Jun2020 - 02Jul2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  9th phase (22Oct2020 - 27Oct2020): finished  361 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 13th phase (24Nov2020 - 29Nov2020): finished  367 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  9th phase (30Oct2020 - 05Nov2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 13th phase (17Nov2020 - 25Nov2020): finished  363 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (09Oct2020 - 15Oct2020): finished  368 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  5th phase (19Aug2020 - 20Sep2020): finished  356 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  2nd phase (08Jul2020 - 30Jul2020): finished  359 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 15th phase (06Dec2020 - 16Dec2020): finished  358 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 11th phase (05Nov2020 - 11Nov2020): finished  366 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 11th phase (06Nov2020 - 11Nov2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  7th phase (12Oct2020 - 21Oct2020): finished  360 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  7th phase (12Oct2020 - 20Oct2020): finished  364 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 10th phase (28Oct2020 - 02Nov2020): finished  367 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (16Oct2020 - 21Oct2020): finished  367 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  1st phase (02Apr2020 - 14Apr2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 11th phase (02Nov2020 - 08Nov2020): finished  368 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 14th phase (04Dec2020 - 09Dec2020): finished  371 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 14th phase (02Dec2020 - 08Dec2020): finished  369 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  3rd phase (26May2020 - 01Aug2020): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (03Jul2020 - 11Aug2020): finished  344 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU, 14th phase (03Dec2020 - 08Dec2020): finished  369 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  0th phase (14Jan2020 - 23Mar2020): finished  337 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  0th phase (21Mar2020 - 30May2020): finished  342 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 13th phase (18Nov2020 - 23Nov2020): finished  358 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 01Apr2020): finished  355 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 12th phase (20Nov2020 - 25Nov2020): finished  367 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  5th phase (17Sep2020 - 30Sep2020): finished  357 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (04Apr2020 - 22Apr2020): finished  364 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  7th phase (12Oct2020 - 18Oct2020): finished  371 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (28Apr2020 - 29Jul2020): finished  340 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  3rd phase (22Apr2020 - 15Jun2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 5 min 47 sec\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"17\" valign=\"top\">United Kingdom</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Feb2020</td>\n",
        "      <td>08Apr2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>79.64</td>\n",
        "      <td>0.0290222</td>\n",
        "      <td>0.000328169</td>\n",
        "      <td>0.0464732</td>\n",
        "      <td>0.000238402</td>\n",
        "      <td>360</td>\n",
        "      <td>1048</td>\n",
        "      <td>5</td>\n",
        "      <td>761</td>\n",
        "      <td>0.029</td>\n",
        "      <td>0.944595</td>\n",
        "      <td>243</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Apr2020</td>\n",
        "      <td>29Apr2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>49.11</td>\n",
        "      <td>0.188808</td>\n",
        "      <td>0.000240587</td>\n",
        "      <td>0.0147431</td>\n",
        "      <td>2.95296e-06</td>\n",
        "      <td>360</td>\n",
        "      <td>84660</td>\n",
        "      <td>16</td>\n",
        "      <td>1039</td>\n",
        "      <td>0.189</td>\n",
        "      <td>0.0517484</td>\n",
        "      <td>307</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>30Apr2020</td>\n",
        "      <td>25May2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>8.33</td>\n",
        "      <td>0.00147935</td>\n",
        "      <td>0.000552431</td>\n",
        "      <td>0.00462168</td>\n",
        "      <td>1.4552e-06</td>\n",
        "      <td>360</td>\n",
        "      <td>171797</td>\n",
        "      <td>54</td>\n",
        "      <td>452</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0535507</td>\n",
        "      <td>319</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>10.87</td>\n",
        "      <td>0.458652</td>\n",
        "      <td>4.05079e-05</td>\n",
        "      <td>0.000834302</td>\n",
        "      <td>1.04405e-06</td>\n",
        "      <td>360</td>\n",
        "      <td>239451</td>\n",
        "      <td>299</td>\n",
        "      <td>6171</td>\n",
        "      <td>0.459</td>\n",
        "      <td>0.137785</td>\n",
        "      <td>347</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Aug2020</td>\n",
        "      <td>14Sep2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>11.93</td>\n",
        "      <td>0.395844</td>\n",
        "      <td>5.91497e-05</td>\n",
        "      <td>0.00118517</td>\n",
        "      <td>8.58933e-07</td>\n",
        "      <td>360</td>\n",
        "      <td>291058</td>\n",
        "      <td>210</td>\n",
        "      <td>4226</td>\n",
        "      <td>0.396</td>\n",
        "      <td>0.165435</td>\n",
        "      <td>246</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Sep2020</td>\n",
        "      <td>02Oct2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>60.22</td>\n",
        "      <td>0.296966</td>\n",
        "      <td>4.05652e-05</td>\n",
        "      <td>0.00352797</td>\n",
        "      <td>6.21499e-07</td>\n",
        "      <td>360</td>\n",
        "      <td>402253</td>\n",
        "      <td>70</td>\n",
        "      <td>6162</td>\n",
        "      <td>0.297</td>\n",
        "      <td>0.170658</td>\n",
        "      <td>266</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Oct2020</td>\n",
        "      <td>11Oct2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3169.4</td>\n",
        "      <td>0.0123505</td>\n",
        "      <td>1.85307e-06</td>\n",
        "      <td>0.00742983</td>\n",
        "      <td>4.62216e-07</td>\n",
        "      <td>360</td>\n",
        "      <td>540872</td>\n",
        "      <td>33</td>\n",
        "      <td>134911</td>\n",
        "      <td>0.012</td>\n",
        "      <td>0.0138011</td>\n",
        "      <td>245</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Oct2020</td>\n",
        "      <td>18Oct2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>93.32</td>\n",
        "      <td>0.000739258</td>\n",
        "      <td>7.90539e-05</td>\n",
        "      <td>0.00741766</td>\n",
        "      <td>3.77483e-07</td>\n",
        "      <td>360</td>\n",
        "      <td>662281</td>\n",
        "      <td>33</td>\n",
        "      <td>3162</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.00449578</td>\n",
        "      <td>371</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Oct2020</td>\n",
        "      <td>24Oct2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>75.65</td>\n",
        "      <td>0.000920263</td>\n",
        "      <td>9.8046e-05</td>\n",
        "      <td>0.00744848</td>\n",
        "      <td>3.19302e-07</td>\n",
        "      <td>360</td>\n",
        "      <td>782957</td>\n",
        "      <td>33</td>\n",
        "      <td>2549</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.00512729</td>\n",
        "      <td>318</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Oct2020</td>\n",
        "      <td>30Oct2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>118.75</td>\n",
        "      <td>0.00144834</td>\n",
        "      <td>5.43331e-05</td>\n",
        "      <td>0.00649318</td>\n",
        "      <td>2.66944e-07</td>\n",
        "      <td>360</td>\n",
        "      <td>936527</td>\n",
        "      <td>38</td>\n",
        "      <td>4601</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.00247552</td>\n",
        "      <td>275</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Oct2020</td>\n",
        "      <td>05Nov2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>100.63</td>\n",
        "      <td>0.00167411</td>\n",
        "      <td>5.4333e-05</td>\n",
        "      <td>0.00550091</td>\n",
        "      <td>2.37728e-07</td>\n",
        "      <td>360</td>\n",
        "      <td>1.05162e+06</td>\n",
        "      <td>45</td>\n",
        "      <td>4601</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.00259864</td>\n",
        "      <td>268</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Nov2020</td>\n",
        "      <td>11Nov2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>924.72</td>\n",
        "      <td>0.0413923</td>\n",
        "      <td>4.56034e-06</td>\n",
        "      <td>0.00460174</td>\n",
        "      <td>2.10054e-07</td>\n",
        "      <td>360</td>\n",
        "      <td>1.19017e+06</td>\n",
        "      <td>54</td>\n",
        "      <td>54820</td>\n",
        "      <td>0.041</td>\n",
        "      <td>0.0188266</td>\n",
        "      <td>365</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Nov2020</td>\n",
        "      <td>17Nov2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>45.1</td>\n",
        "      <td>0.00232649</td>\n",
        "      <td>9.61685e-05</td>\n",
        "      <td>0.00435629</td>\n",
        "      <td>1.89213e-07</td>\n",
        "      <td>360</td>\n",
        "      <td>1.32126e+06</td>\n",
        "      <td>57</td>\n",
        "      <td>2599</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.00830544</td>\n",
        "      <td>285</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Nov2020</td>\n",
        "      <td>23Nov2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>35.46</td>\n",
        "      <td>0.000696569</td>\n",
        "      <td>9.8046e-05</td>\n",
        "      <td>0.0034851</td>\n",
        "      <td>1.70803e-07</td>\n",
        "      <td>360</td>\n",
        "      <td>1.46368e+06</td>\n",
        "      <td>71</td>\n",
        "      <td>2549</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.00519512</td>\n",
        "      <td>358</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Nov2020</td>\n",
        "      <td>02Dec2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>36.78</td>\n",
        "      <td>0.36151</td>\n",
        "      <td>4.04961e-05</td>\n",
        "      <td>0.00234192</td>\n",
        "      <td>1.60699e-07</td>\n",
        "      <td>360</td>\n",
        "      <td>1.5557e+06</td>\n",
        "      <td>106</td>\n",
        "      <td>6173</td>\n",
        "      <td>0.362</td>\n",
        "      <td>0.180389</td>\n",
        "      <td>268</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Dec2020</td>\n",
        "      <td>09Dec2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>40.59</td>\n",
        "      <td>0.207849</td>\n",
        "      <td>4.8104e-05</td>\n",
        "      <td>0.00247274</td>\n",
        "      <td>1.49916e-07</td>\n",
        "      <td>360</td>\n",
        "      <td>1.6676e+06</td>\n",
        "      <td>101</td>\n",
        "      <td>5197</td>\n",
        "      <td>0.208</td>\n",
        "      <td>0.0966587</td>\n",
        "      <td>361</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10Dec2020</td>\n",
        "      <td>16Dec2020</td>\n",
        "      <td>66460344</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "                      Type      Start        End  Population    ODE      Rt  \\\n",
        "Country        Phase                                                          \n",
        "United Kingdom 0th    Past  14Feb2020  08Apr2020    66460344  SIR-F   79.64   \n",
        "               1st    Past  09Apr2020  29Apr2020    66460344  SIR-F   49.11   \n",
        "               2nd    Past  30Apr2020  25May2020    66460344  SIR-F    8.33   \n",
        "               3rd    Past  26May2020  01Aug2020    66460344  SIR-F   10.87   \n",
        "               4th    Past  02Aug2020  14Sep2020    66460344  SIR-F   11.93   \n",
        "               5th    Past  15Sep2020  02Oct2020    66460344  SIR-F   60.22   \n",
        "               6th    Past  03Oct2020  11Oct2020    66460344  SIR-F  3169.4   \n",
        "               7th    Past  12Oct2020  18Oct2020    66460344  SIR-F   93.32   \n",
        "               8th    Past  19Oct2020  24Oct2020    66460344  SIR-F   75.65   \n",
        "               9th    Past  25Oct2020  30Oct2020    66460344  SIR-F  118.75   \n",
        "               10th   Past  31Oct2020  05Nov2020    66460344  SIR-F  100.63   \n",
        "               11th   Past  06Nov2020  11Nov2020    66460344  SIR-F  924.72   \n",
        "               12th   Past  12Nov2020  17Nov2020    66460344  SIR-F    45.1   \n",
        "               13th   Past  18Nov2020  23Nov2020    66460344  SIR-F   35.46   \n",
        "               14th   Past  24Nov2020  02Dec2020    66460344  SIR-F   36.78   \n",
        "               15th   Past  03Dec2020  09Dec2020    66460344  SIR-F   40.59   \n",
        "               16th   Past  10Dec2020  16Dec2020    66460344      -       -   \n",
        "\n",
        "                            theta        kappa          rho        sigma  tau  \\\n",
        "Country        Phase                                                            \n",
        "United Kingdom 0th      0.0290222  0.000328169    0.0464732  0.000238402  360   \n",
        "               1st       0.188808  0.000240587    0.0147431  2.95296e-06  360   \n",
        "               2nd     0.00147935  0.000552431   0.00462168   1.4552e-06  360   \n",
        "               3rd       0.458652  4.05079e-05  0.000834302  1.04405e-06  360   \n",
        "               4th       0.395844  5.91497e-05   0.00118517  8.58933e-07  360   \n",
        "               5th       0.296966  4.05652e-05   0.00352797  6.21499e-07  360   \n",
        "               6th      0.0123505  1.85307e-06   0.00742983  4.62216e-07  360   \n",
        "               7th    0.000739258  7.90539e-05   0.00741766  3.77483e-07  360   \n",
        "               8th    0.000920263   9.8046e-05   0.00744848  3.19302e-07  360   \n",
        "               9th     0.00144834  5.43331e-05   0.00649318  2.66944e-07  360   \n",
        "               10th    0.00167411   5.4333e-05   0.00550091  2.37728e-07  360   \n",
        "               11th     0.0413923  4.56034e-06   0.00460174  2.10054e-07  360   \n",
        "               12th    0.00232649  9.61685e-05   0.00435629  1.89213e-07  360   \n",
        "               13th   0.000696569   9.8046e-05    0.0034851  1.70803e-07  360   \n",
        "               14th       0.36151  4.04961e-05   0.00234192  1.60699e-07  360   \n",
        "               15th      0.207849   4.8104e-05   0.00247274  1.49916e-07  360   \n",
        "               16th             -            -            -            -    -   \n",
        "\n",
        "                     1/gamma [day] 1/beta [day] 1/alpha2 [day] alpha1 [-]  \\\n",
        "Country        Phase                                                        \n",
        "United Kingdom 0th            1048            5            761      0.029   \n",
        "               1st           84660           16           1039      0.189   \n",
        "               2nd          171797           54            452      0.001   \n",
        "               3rd          239451          299           6171      0.459   \n",
        "               4th          291058          210           4226      0.396   \n",
        "               5th          402253           70           6162      0.297   \n",
        "               6th          540872           33         134911      0.012   \n",
        "               7th          662281           33           3162      0.001   \n",
        "               8th          782957           33           2549      0.001   \n",
        "               9th          936527           38           4601      0.001   \n",
        "               10th    1.05162e+06           45           4601      0.002   \n",
        "               11th    1.19017e+06           54          54820      0.041   \n",
        "               12th    1.32126e+06           57           2599      0.002   \n",
        "               13th    1.46368e+06           71           2549      0.001   \n",
        "               14th     1.5557e+06          106           6173      0.362   \n",
        "               15th     1.6676e+06          101           5197      0.208   \n",
        "               16th              -            -              -          -   \n",
        "\n",
        "                           RMSLE Trials       Runtime  \n",
        "Country        Phase                                   \n",
        "United Kingdom 0th      0.944595    243  0 min 10 sec  \n",
        "               1st     0.0517484    307  0 min 10 sec  \n",
        "               2nd     0.0535507    319  0 min 10 sec  \n",
        "               3rd      0.137785    347  0 min 10 sec  \n",
        "               4th      0.165435    246  0 min 10 sec  \n",
        "               5th      0.170658    266  0 min 10 sec  \n",
        "               6th     0.0138011    245  0 min 10 sec  \n",
        "               7th    0.00449578    371  0 min 10 sec  \n",
        "               8th    0.00512729    318  0 min 10 sec  \n",
        "               9th    0.00247552    275  0 min 10 sec  \n",
        "               10th   0.00259864    268  0 min 10 sec  \n",
        "               11th    0.0188266    365  0 min 10 sec  \n",
        "               12th   0.00830544    285  0 min 10 sec  \n",
        "               13th   0.00519512    358  0 min 10 sec  \n",
        "               14th     0.180389    268  0 min 10 sec  \n",
        "               15th    0.0966587    361  0 min 10 sec  \n",
        "               16th            -      -             -  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-03-14</td>\n",
        "      <td>Portugal</td>\n",
        "      <td>0.0290181</td>\n",
        "      <td>9.34715e-05</td>\n",
        "      <td>0.0427256</td>\n",
        "      <td>0.000252305</td>\n",
        "      <td>0.029</td>\n",
        "      <td>2674</td>\n",
        "      <td>5</td>\n",
        "      <td>990</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>32.41</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-03-14</td>\n",
        "      <td>Portugal</td>\n",
        "      <td>0.0290181</td>\n",
        "      <td>9.34715e-05</td>\n",
        "      <td>0.0427256</td>\n",
        "      <td>0.000252305</td>\n",
        "      <td>0.029</td>\n",
        "      <td>2674</td>\n",
        "      <td>5</td>\n",
        "      <td>990</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>32.41</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-03-14</td>\n",
        "      <td>Portugal</td>\n",
        "      <td>0.0290181</td>\n",
        "      <td>9.34715e-05</td>\n",
        "      <td>0.0427256</td>\n",
        "      <td>0.000252305</td>\n",
        "      <td>0.029</td>\n",
        "      <td>2674</td>\n",
        "      <td>5</td>\n",
        "      <td>990</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>32.41</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-03-14</td>\n",
        "      <td>Portugal</td>\n",
        "      <td>0.0290181</td>\n",
        "      <td>9.34715e-05</td>\n",
        "      <td>0.0427256</td>\n",
        "      <td>0.000252305</td>\n",
        "      <td>0.029</td>\n",
        "      <td>2674</td>\n",
        "      <td>5</td>\n",
        "      <td>990</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>32.41</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-03-14</td>\n",
        "      <td>Portugal</td>\n",
        "      <td>0.0290181</td>\n",
        "      <td>9.34715e-05</td>\n",
        "      <td>0.0427256</td>\n",
        "      <td>0.000252305</td>\n",
        "      <td>0.029</td>\n",
        "      <td>2674</td>\n",
        "      <td>5</td>\n",
        "      <td>990</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>32.41</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date   Country      theta        kappa        rho        sigma  \\\n",
        "0 2020-03-14  Portugal  0.0290181  9.34715e-05  0.0427256  0.000252305   \n",
        "1 2020-03-14  Portugal  0.0290181  9.34715e-05  0.0427256  0.000252305   \n",
        "2 2020-03-14  Portugal  0.0290181  9.34715e-05  0.0427256  0.000252305   \n",
        "3 2020-03-14  Portugal  0.0290181  9.34715e-05  0.0427256  0.000252305   \n",
        "4 2020-03-14  Portugal  0.0290181  9.34715e-05  0.0427256  0.000252305   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.029           2674            5           990  ...             0   \n",
        "1      0.029           2674            5           990  ...             0   \n",
        "2      0.029           2674            5           990  ...             0   \n",
        "3      0.029           2674            5           990  ...             0   \n",
        "4      0.029           2674            5           990  ...             0   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        0                  0                       0   \n",
        "4                        0                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    3   \n",
        "1                               0                                    3   \n",
        "2                               0                                    3   \n",
        "3                               0                                    3   \n",
        "4                               0                                    3   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               1                2             32.41  \n",
        "1                      2               1                2             32.41  \n",
        "2                      2               1                2             32.41  \n",
        "3                      2               1                2             32.41  \n",
        "4                      2               1                2             32.41  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Finland</th>\n",
        "      <th>France</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>22.05</td>\n",
        "      <td>2.02</td>\n",
        "      <td>1.25</td>\n",
        "      <td>7.01</td>\n",
        "      <td>1.08</td>\n",
        "      <td>1.21</td>\n",
        "      <td>0.92</td>\n",
        "      <td>1.07</td>\n",
        "      <td>40.59</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>22.05</td>\n",
        "      <td>2.02</td>\n",
        "      <td>1.25</td>\n",
        "      <td>7.01</td>\n",
        "      <td>1.08</td>\n",
        "      <td>1.21</td>\n",
        "      <td>0.92</td>\n",
        "      <td>1.07</td>\n",
        "      <td>40.59</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-14</th>\n",
        "      <td>22.05</td>\n",
        "      <td>2.02</td>\n",
        "      <td>1.25</td>\n",
        "      <td>7.01</td>\n",
        "      <td>1.08</td>\n",
        "      <td>1.21</td>\n",
        "      <td>0.92</td>\n",
        "      <td>1.07</td>\n",
        "      <td>40.59</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-15</th>\n",
        "      <td>22.05</td>\n",
        "      <td>2.02</td>\n",
        "      <td>1.25</td>\n",
        "      <td>7.01</td>\n",
        "      <td>1.08</td>\n",
        "      <td>1.21</td>\n",
        "      <td>0.92</td>\n",
        "      <td>1.07</td>\n",
        "      <td>40.59</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-16</th>\n",
        "      <td>22.05</td>\n",
        "      <td>2.02</td>\n",
        "      <td>1.25</td>\n",
        "      <td>7.01</td>\n",
        "      <td>1.08</td>\n",
        "      <td>1.21</td>\n",
        "      <td>0.92</td>\n",
        "      <td>1.07</td>\n",
        "      <td>40.59</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Belgium  Denmark  Finland  France  Germany  Portugal  Romania  \\\n",
        "Date                                                                        \n",
        "2020-12-12    22.05     2.02     1.25    7.01     1.08      1.21     0.92   \n",
        "2020-12-13    22.05     2.02     1.25    7.01     1.08      1.21     0.92   \n",
        "2020-12-14    22.05     2.02     1.25    7.01     1.08      1.21     0.92   \n",
        "2020-12-15    22.05     2.02     1.25    7.01     1.08      1.21     0.92   \n",
        "2020-12-16    22.05     2.02     1.25    7.01     1.08      1.21     0.92   \n",
        "\n",
        "Country     Ukraine  United Kingdom  \n",
        "Date                                 \n",
        "2020-12-12     1.07           40.59  \n",
        "2020-12-13     1.07           40.59  \n",
        "2020-12-14     1.07           40.59  \n",
        "2020-12-15     1.07           40.59  \n",
        "2020-12-16     1.07           40.59  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Finland</th>\n",
        "      <th>France</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>0.001277</td>\n",
        "      <td>0.028491</td>\n",
        "      <td>0.011107</td>\n",
        "      <td>0.001398</td>\n",
        "      <td>0.027938</td>\n",
        "      <td>0.015193</td>\n",
        "      <td>0.014981</td>\n",
        "      <td>0.009223</td>\n",
        "      <td>0.002473</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>0.001277</td>\n",
        "      <td>0.028491</td>\n",
        "      <td>0.011107</td>\n",
        "      <td>0.001398</td>\n",
        "      <td>0.027938</td>\n",
        "      <td>0.015193</td>\n",
        "      <td>0.014981</td>\n",
        "      <td>0.009223</td>\n",
        "      <td>0.002473</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-14</th>\n",
        "      <td>0.001277</td>\n",
        "      <td>0.028491</td>\n",
        "      <td>0.011107</td>\n",
        "      <td>0.001398</td>\n",
        "      <td>0.027938</td>\n",
        "      <td>0.015193</td>\n",
        "      <td>0.014981</td>\n",
        "      <td>0.009223</td>\n",
        "      <td>0.002473</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-15</th>\n",
        "      <td>0.001277</td>\n",
        "      <td>0.028491</td>\n",
        "      <td>0.011107</td>\n",
        "      <td>0.001398</td>\n",
        "      <td>0.027938</td>\n",
        "      <td>0.015193</td>\n",
        "      <td>0.014981</td>\n",
        "      <td>0.009223</td>\n",
        "      <td>0.002473</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-16</th>\n",
        "      <td>0.001277</td>\n",
        "      <td>0.028491</td>\n",
        "      <td>0.011107</td>\n",
        "      <td>0.001398</td>\n",
        "      <td>0.027938</td>\n",
        "      <td>0.015193</td>\n",
        "      <td>0.014981</td>\n",
        "      <td>0.009223</td>\n",
        "      <td>0.002473</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Belgium   Denmark   Finland    France   Germany  Portugal  \\\n",
        "Date                                                                     \n",
        "2020-12-12  0.001277  0.028491  0.011107  0.001398  0.027938  0.015193   \n",
        "2020-12-13  0.001277  0.028491  0.011107  0.001398  0.027938  0.015193   \n",
        "2020-12-14  0.001277  0.028491  0.011107  0.001398  0.027938  0.015193   \n",
        "2020-12-15  0.001277  0.028491  0.011107  0.001398  0.027938  0.015193   \n",
        "2020-12-16  0.001277  0.028491  0.011107  0.001398  0.027938  0.015193   \n",
        "\n",
        "Country      Romania   Ukraine  United Kingdom  \n",
        "Date                                            \n",
        "2020-12-12  0.014981  0.009223        0.002473  \n",
        "2020-12-13  0.014981  0.009223        0.002473  \n",
        "2020-12-14  0.014981  0.009223        0.002473  \n",
        "2020-12-15  0.014981  0.009223        0.002473  \n",
        "2020-12-16  0.014981  0.009223        0.002473  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Finland</th>\n",
        "      <th>France</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>0.000008</td>\n",
        "      <td>0.014018</td>\n",
        "      <td>0.008803</td>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.025681</td>\n",
        "      <td>0.012172</td>\n",
        "      <td>0.015635</td>\n",
        "      <td>0.008474</td>\n",
        "      <td>1.499157e-07</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>0.000008</td>\n",
        "      <td>0.014018</td>\n",
        "      <td>0.008803</td>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.025681</td>\n",
        "      <td>0.012172</td>\n",
        "      <td>0.015635</td>\n",
        "      <td>0.008474</td>\n",
        "      <td>1.499157e-07</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-14</th>\n",
        "      <td>0.000008</td>\n",
        "      <td>0.014018</td>\n",
        "      <td>0.008803</td>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.025681</td>\n",
        "      <td>0.012172</td>\n",
        "      <td>0.015635</td>\n",
        "      <td>0.008474</td>\n",
        "      <td>1.499157e-07</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-15</th>\n",
        "      <td>0.000008</td>\n",
        "      <td>0.014018</td>\n",
        "      <td>0.008803</td>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.025681</td>\n",
        "      <td>0.012172</td>\n",
        "      <td>0.015635</td>\n",
        "      <td>0.008474</td>\n",
        "      <td>1.499157e-07</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-16</th>\n",
        "      <td>0.000008</td>\n",
        "      <td>0.014018</td>\n",
        "      <td>0.008803</td>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.025681</td>\n",
        "      <td>0.012172</td>\n",
        "      <td>0.015635</td>\n",
        "      <td>0.008474</td>\n",
        "      <td>1.499157e-07</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Belgium   Denmark   Finland    France   Germany  Portugal  \\\n",
        "Date                                                                     \n",
        "2020-12-12  0.000008  0.014018  0.008803  0.000108  0.025681  0.012172   \n",
        "2020-12-13  0.000008  0.014018  0.008803  0.000108  0.025681  0.012172   \n",
        "2020-12-14  0.000008  0.014018  0.008803  0.000108  0.025681  0.012172   \n",
        "2020-12-15  0.000008  0.014018  0.008803  0.000108  0.025681  0.012172   \n",
        "2020-12-16  0.000008  0.014018  0.008803  0.000108  0.025681  0.012172   \n",
        "\n",
        "Country      Romania   Ukraine  United Kingdom  \n",
        "Date                                            \n",
        "2020-12-12  0.015635  0.008474    1.499157e-07  \n",
        "2020-12-13  0.015635  0.008474    1.499157e-07  \n",
        "2020-12-14  0.015635  0.008474    1.499157e-07  \n",
        "2020-12-15  0.015635  0.008474    1.499157e-07  \n",
        "2020-12-16  0.015635  0.008474    1.499157e-07  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Finland</th>\n",
        "      <th>France</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000595</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000048</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000595</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000048</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-14</th>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000595</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000048</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-15</th>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000595</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000048</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-16</th>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000595</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000048</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Belgium   Denmark   Finland    France   Germany  Portugal  \\\n",
        "Date                                                                     \n",
        "2020-12-12  0.000048  0.000071  0.000071  0.000005  0.000235  0.000301   \n",
        "2020-12-13  0.000048  0.000071  0.000071  0.000005  0.000235  0.000301   \n",
        "2020-12-14  0.000048  0.000071  0.000071  0.000005  0.000235  0.000301   \n",
        "2020-12-15  0.000048  0.000071  0.000071  0.000005  0.000235  0.000301   \n",
        "2020-12-16  0.000048  0.000071  0.000071  0.000005  0.000235  0.000301   \n",
        "\n",
        "Country      Romania  Ukraine  United Kingdom  \n",
        "Date                                           \n",
        "2020-12-12  0.000595  0.00015        0.000048  \n",
        "2020-12-13  0.000595  0.00015        0.000048  \n",
        "2020-12-14  0.000595  0.00015        0.000048  \n",
        "2020-12-15  0.000595  0.00015        0.000048  \n",
        "2020-12-16  0.000595  0.00015        0.000048  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Finland</th>\n",
        "      <th>France</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>0.037127</td>\n",
        "      <td>0.000902</td>\n",
        "      <td>0.000905</td>\n",
        "      <td>0.436983</td>\n",
        "      <td>0.000548</td>\n",
        "      <td>0.003842</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.00088</td>\n",
        "      <td>0.207849</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>0.037127</td>\n",
        "      <td>0.000902</td>\n",
        "      <td>0.000905</td>\n",
        "      <td>0.436983</td>\n",
        "      <td>0.000548</td>\n",
        "      <td>0.003842</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.00088</td>\n",
        "      <td>0.207849</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-14</th>\n",
        "      <td>0.037127</td>\n",
        "      <td>0.000902</td>\n",
        "      <td>0.000905</td>\n",
        "      <td>0.436983</td>\n",
        "      <td>0.000548</td>\n",
        "      <td>0.003842</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.00088</td>\n",
        "      <td>0.207849</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-15</th>\n",
        "      <td>0.037127</td>\n",
        "      <td>0.000902</td>\n",
        "      <td>0.000905</td>\n",
        "      <td>0.436983</td>\n",
        "      <td>0.000548</td>\n",
        "      <td>0.003842</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.00088</td>\n",
        "      <td>0.207849</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-16</th>\n",
        "      <td>0.037127</td>\n",
        "      <td>0.000902</td>\n",
        "      <td>0.000905</td>\n",
        "      <td>0.436983</td>\n",
        "      <td>0.000548</td>\n",
        "      <td>0.003842</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.00088</td>\n",
        "      <td>0.207849</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Belgium   Denmark   Finland    France   Germany  Portugal  \\\n",
        "Date                                                                     \n",
        "2020-12-12  0.037127  0.000902  0.000905  0.436983  0.000548  0.003842   \n",
        "2020-12-13  0.037127  0.000902  0.000905  0.436983  0.000548  0.003842   \n",
        "2020-12-14  0.037127  0.000902  0.000905  0.436983  0.000548  0.003842   \n",
        "2020-12-15  0.037127  0.000902  0.000905  0.436983  0.000548  0.003842   \n",
        "2020-12-16  0.037127  0.000902  0.000905  0.436983  0.000548  0.003842   \n",
        "\n",
        "Country      Romania  Ukraine  United Kingdom  \n",
        "Date                                           \n",
        "2020-12-12  0.001486  0.00088        0.207849  \n",
        "2020-12-13  0.001486  0.00088        0.207849  \n",
        "2020-12-14  0.001486  0.00088        0.207849  \n",
        "2020-12-15  0.001486  0.00088        0.207849  \n",
        "2020-12-16  0.001486  0.00088        0.207849  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 25674 entries, 0 to 25785\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 25674 non-null  datetime64[ns]\n",
        " 1   Country                              25674 non-null  object        \n",
        " 2   Rt                                   25674 non-null  float64       \n",
        " 3   theta                                25674 non-null  float64       \n",
        " 4   kappa                                25674 non-null  float64       \n",
        " 5   rho                                  25674 non-null  float64       \n",
        " 6   sigma                                25674 non-null  float64       \n",
        " 7   School_closing                       25674 non-null  int64         \n",
        " 8   Workplace_closing                    25674 non-null  int64         \n",
        " 9   Cancel_events                        25674 non-null  int64         \n",
        " 10  Gatherings_restrictions              25674 non-null  int64         \n",
        " 11  Transport_closing                    25674 non-null  int64         \n",
        " 12  Stay_home_restrictions               25674 non-null  int64         \n",
        " 13  Internal_movement_restrictions       25674 non-null  int64         \n",
        " 14  International_movement_restrictions  25674 non-null  int64         \n",
        " 15  Information_campaigns                25674 non-null  int64         \n",
        " 16  Testing_policy                       25674 non-null  int64         \n",
        " 17  Contact_tracing                      25674 non-null  int64         \n",
        " 18  Stringency_index                     25674 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 3.9+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col0,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col1,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col2,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col3,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col4,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col5,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col6,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col7,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col8,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col9,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col10,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col11,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col12,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col13,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col14,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col15,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col1,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col0{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col2,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col0{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col3,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col14,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col0,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col1{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col4,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col0{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col5,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col0{\n",
        "            background-color:  #b5c4df;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col6,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col0{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col7,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col13,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col0,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col4{\n",
        "            background-color:  #99b8d8;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col8,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col10,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col0,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col2,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col16,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col15{\n",
        "            background-color:  #9ab8d8;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col9,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col0{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col10,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col0{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col11,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col0{\n",
        "            background-color:  #94b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col12,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col0{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col13,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col4,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col2,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col0{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col14,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col0{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col15,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col0{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col16,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col0{\n",
        "            background-color:  #9ebad9;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col2,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col1{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col3,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col1{\n",
        "            background-color:  #f3edf5;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col4,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col1{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col5,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col1,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col12,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col6{\n",
        "            background-color:  #4897c4;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col6,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col1{\n",
        "            background-color:  #69a5cc;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col7,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col1{\n",
        "            background-color:  #4a98c5;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col8,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col1{\n",
        "            background-color:  #5a9ec9;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col9,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col1{\n",
        "            background-color:  #6da6cd;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col10,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col1{\n",
        "            background-color:  #7eadd1;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col11,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col1{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col12,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col6,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col2,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col1{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col13,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col1{\n",
        "            background-color:  #78abd0;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col15,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col1{\n",
        "            background-color:  #63a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col16,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col3,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col2,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col1{\n",
        "            background-color:  #5c9fc9;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col5,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col2{\n",
        "            background-color:  #8fb4d6;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col7,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col2{\n",
        "            background-color:  #cacee5;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col8,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col2{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col9,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col15,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col2,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col6{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col11,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col14,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col2,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col5{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col12,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col2{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col13,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col2{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col14,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col2{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col15,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col2{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col16,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col5,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col4,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col15,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col10,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col2{\n",
        "            background-color:  #adc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col4,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col3,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col14,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col7{\n",
        "            background-color:  #4496c3;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col5,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col3{\n",
        "            background-color:  #e3e0ee;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col6,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col3{\n",
        "            background-color:  #eae6f1;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col7,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col9,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col3,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col4{\n",
        "            background-color:  #f2ecf5;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col8,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col9,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col3{\n",
        "            background-color:  #f7f0f7;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col10,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col3{\n",
        "            background-color:  #e5e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col11,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col3{\n",
        "            background-color:  #fdf5fa;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col12,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col3{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col13,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col3{\n",
        "            background-color:  #e9e5f1;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col14,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col3{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col15,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col3{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col16,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col3{\n",
        "            background-color:  #f4eef6;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col6,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col4{\n",
        "            background-color:  #a1bbda;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col7,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col14,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col4,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col6{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col8,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col4{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col10,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col4{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col11,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col4{\n",
        "            background-color:  #dfddec;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col12,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col4{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col14,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col4{\n",
        "            background-color:  #4e9ac6;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col15,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col14,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col9,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col4{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col16,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col4{\n",
        "            background-color:  #a5bddb;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col6,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col5{\n",
        "            background-color:  #046097;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col7,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col5{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col8,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col5{\n",
        "            background-color:  #1077b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col9,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col5,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col13,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col11{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col10,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col5{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col11,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col5{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col12,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col5{\n",
        "            background-color:  #6fa7ce;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col13,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col5{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col15,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col5{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col16,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col7,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col6,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col5{\n",
        "            background-color:  #045b8f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col8,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col6{\n",
        "            background-color:  #046299;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col9,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col6{\n",
        "            background-color:  #2f8bbe;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col10,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col8,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col7,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col6{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col11,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col6{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col13,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col11,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col7,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col6,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col14,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col13{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col16,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col6{\n",
        "            background-color:  #034973;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col9,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col7{\n",
        "            background-color:  #509ac6;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col10,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col10,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col7,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col8,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col15,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col14{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col12,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col7{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col13,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col7{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col15,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col7{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col16,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col7{\n",
        "            background-color:  #034f7d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col9,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col8,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col10,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col9,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col13,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col10{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col11,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col8{\n",
        "            background-color:  #05659f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col12,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col8{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col13,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col11,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col10,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col8{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col14,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col8{\n",
        "            background-color:  #2383ba;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col15,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col8{\n",
        "            background-color:  #589ec8;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col16,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col8{\n",
        "            background-color:  #045a8d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col11,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col9{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col12,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col9{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col13,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col9{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col15,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col9{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col16,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col14,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col12,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col9{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col12,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col10{\n",
        "            background-color:  #4295c3;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col14,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col10{\n",
        "            background-color:  #89b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col16,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col10{\n",
        "            background-color:  #045e94;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col12,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col11{\n",
        "            background-color:  #60a1ca;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col14,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col11{\n",
        "            background-color:  #81aed2;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col15,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col11{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col16,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col11{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col13,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col12{\n",
        "            background-color:  #2081b9;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col15,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col15,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col12,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col13{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col16,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col12{\n",
        "            background-color:  #2182b9;\n",
        "            color:  #000000;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col16,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col13{\n",
        "            background-color:  #0568a3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col16,#T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col14{\n",
        "            background-color:  #75a9cf;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbf\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbflevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col1\" class=\"data row0 col1\" >-0.077968</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col2\" class=\"data row0 col2\" >-0.071721</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col3\" class=\"data row0 col3\" >-0.037891</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col4\" class=\"data row0 col4\" >-0.108012</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col5\" class=\"data row0 col5\" >-0.087394</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col6\" class=\"data row0 col6\" >0.010204</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col7\" class=\"data row0 col7\" >0.039959</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col8\" class=\"data row0 col8\" >0.034097</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col9\" class=\"data row0 col9\" >0.080579</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col10\" class=\"data row0 col10\" >-0.043404</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col11\" class=\"data row0 col11\" >0.055474</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col12\" class=\"data row0 col12\" >-0.058339</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col13\" class=\"data row0 col13\" >0.027497</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col14\" class=\"data row0 col14\" >-0.022246</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col15\" class=\"data row0 col15\" >-0.061967</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow0_col16\" class=\"data row0 col16\" >0.022707</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbflevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col0\" class=\"data row1 col0\" >-0.077968</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col2\" class=\"data row1 col2\" >-0.166413</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col3\" class=\"data row1 col3\" >-0.492778</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col4\" class=\"data row1 col4\" >-0.309952</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col5\" class=\"data row1 col5\" >0.331027</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col6\" class=\"data row1 col6\" >0.223728</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col7\" class=\"data row1 col7\" >0.325125</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col8\" class=\"data row1 col8\" >0.275493</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col9\" class=\"data row1 col9\" >0.209290</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col10\" class=\"data row1 col10\" >0.147206</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col11\" class=\"data row1 col11\" >0.364347</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col12\" class=\"data row1 col12\" >-0.000532</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col13\" class=\"data row1 col13\" >0.174290</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col14\" class=\"data row1 col14\" >-0.034992</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col15\" class=\"data row1 col15\" >0.241005</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow1_col16\" class=\"data row1 col16\" >0.269723</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbflevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col0\" class=\"data row2 col0\" >-0.071721</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col1\" class=\"data row2 col1\" >-0.166413</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col3\" class=\"data row2 col3\" >0.268938</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col4\" class=\"data row2 col4\" >0.026868</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col5\" class=\"data row2 col5\" >0.078153</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col6\" class=\"data row2 col6\" >-0.000373</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col7\" class=\"data row2 col7\" >-0.192572</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col8\" class=\"data row2 col8\" >-0.238458</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col9\" class=\"data row2 col9\" >-0.083193</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col10\" class=\"data row2 col10\" >0.031660</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col11\" class=\"data row2 col11\" >-0.098146</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col12\" class=\"data row2 col12\" >-0.216737</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col13\" class=\"data row2 col13\" >-0.158325</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col14\" class=\"data row2 col14\" >-0.438318</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col15\" class=\"data row2 col15\" >-0.288250</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow2_col16\" class=\"data row2 col16\" >-0.051275</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbflevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col0\" class=\"data row3 col0\" >-0.037891</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col1\" class=\"data row3 col1\" >-0.492778</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col2\" class=\"data row3 col2\" >0.268938</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col4\" class=\"data row3 col4\" >0.343449</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col5\" class=\"data row3 col5\" >-0.355293</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col6\" class=\"data row3 col6\" >-0.403744</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col7\" class=\"data row3 col7\" >-0.487016</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col8\" class=\"data row3 col8\" >-0.624353</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col9\" class=\"data row3 col9\" >-0.533984</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col10\" class=\"data row3 col10\" >-0.366610</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col11\" class=\"data row3 col11\" >-0.594835</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col12\" class=\"data row3 col12\" >-0.362723</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col13\" class=\"data row3 col13\" >-0.401358</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col14\" class=\"data row3 col14\" >-0.340562</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col15\" class=\"data row3 col15\" >-0.276487</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow3_col16\" class=\"data row3 col16\" >-0.506044</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbflevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col0\" class=\"data row4 col0\" >-0.108012</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col1\" class=\"data row4 col1\" >-0.309952</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col2\" class=\"data row4 col2\" >0.026868</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col3\" class=\"data row4 col3\" >0.343449</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col5\" class=\"data row4 col5\" >-0.051567</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col6\" class=\"data row4 col6\" >0.008273</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col7\" class=\"data row4 col7\" >0.117350</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col8\" class=\"data row4 col8\" >0.066185</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col9\" class=\"data row4 col9\" >-0.484589</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col10\" class=\"data row4 col10\" >-0.118960</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col11\" class=\"data row4 col11\" >-0.323110</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col12\" class=\"data row4 col12\" >0.380197</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col13\" class=\"data row4 col13\" >0.039398</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col14\" class=\"data row4 col14\" >0.313505</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col15\" class=\"data row4 col15\" >0.094243</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow4_col16\" class=\"data row4 col16\" >-0.014294</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbflevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col0\" class=\"data row5 col0\" >-0.087394</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col1\" class=\"data row5 col1\" >0.331027</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col2\" class=\"data row5 col2\" >0.078153</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col3\" class=\"data row5 col3\" >-0.355293</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col4\" class=\"data row5 col4\" >-0.051567</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col6\" class=\"data row5 col6\" >0.734543</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col7\" class=\"data row5 col7\" >0.574038</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col8\" class=\"data row5 col8\" >0.543731</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col9\" class=\"data row5 col9\" >0.443975</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col10\" class=\"data row5 col10\" >0.586289</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col11\" class=\"data row5 col11\" >0.553188</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col12\" class=\"data row5 col12\" >0.204685</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col13\" class=\"data row5 col13\" >0.400138</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col14\" class=\"data row5 col14\" >-0.101211</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col15\" class=\"data row5 col15\" >-0.096247</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow5_col16\" class=\"data row5 col16\" >0.779398</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbflevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col0\" class=\"data row6 col0\" >0.010204</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col1\" class=\"data row6 col1\" >0.223728</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col2\" class=\"data row6 col2\" >-0.000373</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col3\" class=\"data row6 col3\" >-0.403744</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col4\" class=\"data row6 col4\" >0.008273</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col5\" class=\"data row6 col5\" >0.734543</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col7\" class=\"data row6 col7\" >0.782249</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col8\" class=\"data row6 col8\" >0.724732</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col9\" class=\"data row6 col9\" >0.419151</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col10\" class=\"data row6 col10\" >0.774557</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col11\" class=\"data row6 col11\" >0.581053</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col12\" class=\"data row6 col12\" >0.330464</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col13\" class=\"data row6 col13\" >0.520391</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col14\" class=\"data row6 col14\" >0.113338</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col15\" class=\"data row6 col15\" >-0.078827</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow6_col16\" class=\"data row6 col16\" >0.897180</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbflevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col0\" class=\"data row7 col0\" >0.039959</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col1\" class=\"data row7 col1\" >0.325125</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col2\" class=\"data row7 col2\" >-0.192572</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col3\" class=\"data row7 col3\" >-0.487016</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col4\" class=\"data row7 col4\" >0.117350</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col5\" class=\"data row7 col5\" >0.574038</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col6\" class=\"data row7 col6\" >0.782249</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col8\" class=\"data row7 col8\" >0.773295</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col9\" class=\"data row7 col9\" >0.305043</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col10\" class=\"data row7 col10\" >0.590161</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col11\" class=\"data row7 col11\" >0.522379</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col12\" class=\"data row7 col12\" >0.454969</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col13\" class=\"data row7 col13\" >0.635960</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col14\" class=\"data row7 col14\" >0.344475</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col15\" class=\"data row7 col15\" >0.106219</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow7_col16\" class=\"data row7 col16\" >0.859205</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbflevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col0\" class=\"data row8 col0\" >0.034097</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col1\" class=\"data row8 col1\" >0.275493</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col2\" class=\"data row8 col2\" >-0.238458</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col3\" class=\"data row8 col3\" >-0.624353</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col4\" class=\"data row8 col4\" >0.066185</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col5\" class=\"data row8 col5\" >0.543731</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col6\" class=\"data row8 col6\" >0.724732</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col7\" class=\"data row8 col7\" >0.773295</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col9\" class=\"data row8 col9\" >0.432314</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col10\" class=\"data row8 col10\" >0.589645</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col11\" class=\"data row8 col11\" >0.694576</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col12\" class=\"data row8 col12\" >0.563486</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col13\" class=\"data row8 col13\" >0.620614</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col14\" class=\"data row8 col14\" >0.472845</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col15\" class=\"data row8 col15\" >0.280297</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow8_col16\" class=\"data row8 col16\" >0.795556</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbflevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col0\" class=\"data row9 col0\" >0.080579</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col1\" class=\"data row9 col1\" >0.209290</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col2\" class=\"data row9 col2\" >-0.083193</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col3\" class=\"data row9 col3\" >-0.533984</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col4\" class=\"data row9 col4\" >-0.484589</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col5\" class=\"data row9 col5\" >0.443975</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col6\" class=\"data row9 col6\" >0.419151</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col7\" class=\"data row9 col7\" >0.305043</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col8\" class=\"data row9 col8\" >0.432314</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col10\" class=\"data row9 col10\" >0.432739</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col11\" class=\"data row9 col11\" >0.614500</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col12\" class=\"data row9 col12\" >0.068318</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col13\" class=\"data row9 col13\" >0.319567</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col14\" class=\"data row9 col14\" >0.093088</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col15\" class=\"data row9 col15\" >-0.016092</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow9_col16\" class=\"data row9 col16\" >0.535583</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbflevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col0\" class=\"data row10 col0\" >-0.043404</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col1\" class=\"data row10 col1\" >0.147206</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col2\" class=\"data row10 col2\" >0.031660</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col3\" class=\"data row10 col3\" >-0.366610</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col4\" class=\"data row10 col4\" >-0.118960</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col5\" class=\"data row10 col5\" >0.586289</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col6\" class=\"data row10 col6\" >0.774557</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col7\" class=\"data row10 col7\" >0.590161</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col8\" class=\"data row10 col8\" >0.589645</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col9\" class=\"data row10 col9\" >0.432739</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col11\" class=\"data row10 col11\" >0.620727</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col12\" class=\"data row10 col12\" >0.346505</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col13\" class=\"data row10 col13\" >0.431104</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col14\" class=\"data row10 col14\" >0.099993</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col15\" class=\"data row10 col15\" >-0.051669</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow10_col16\" class=\"data row10 col16\" >0.758852</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbflevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col0\" class=\"data row11 col0\" >0.055474</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col1\" class=\"data row11 col1\" >0.364347</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col2\" class=\"data row11 col2\" >-0.098146</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col3\" class=\"data row11 col3\" >-0.594835</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col4\" class=\"data row11 col4\" >-0.323110</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col5\" class=\"data row11 col5\" >0.553188</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col6\" class=\"data row11 col6\" >0.581053</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col7\" class=\"data row11 col7\" >0.522379</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col8\" class=\"data row11 col8\" >0.694576</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col9\" class=\"data row11 col9\" >0.614500</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col10\" class=\"data row11 col10\" >0.620727</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col12\" class=\"data row11 col12\" >0.255025</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col13\" class=\"data row11 col13\" >0.447393</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col14\" class=\"data row11 col14\" >0.136799</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col15\" class=\"data row11 col15\" >0.161334</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow11_col16\" class=\"data row11 col16\" >0.679895</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbflevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col0\" class=\"data row12 col0\" >-0.058339</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col1\" class=\"data row12 col1\" >-0.000532</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col2\" class=\"data row12 col2\" >-0.216737</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col3\" class=\"data row12 col3\" >-0.362723</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col4\" class=\"data row12 col4\" >0.380197</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col5\" class=\"data row12 col5\" >0.204685</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col6\" class=\"data row12 col6\" >0.330464</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col7\" class=\"data row12 col7\" >0.454969</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col8\" class=\"data row12 col8\" >0.563486</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col9\" class=\"data row12 col9\" >0.068318</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col10\" class=\"data row12 col10\" >0.346505</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col11\" class=\"data row12 col11\" >0.255025</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col13\" class=\"data row12 col13\" >0.483113</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col14\" class=\"data row12 col14\" >0.531771</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col15\" class=\"data row12 col15\" >0.448198</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow12_col16\" class=\"data row12 col16\" >0.479546</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbflevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col0\" class=\"data row13 col0\" >0.027497</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col1\" class=\"data row13 col1\" >0.174290</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col2\" class=\"data row13 col2\" >-0.158325</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col3\" class=\"data row13 col3\" >-0.401358</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col4\" class=\"data row13 col4\" >0.039398</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col5\" class=\"data row13 col5\" >0.400138</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col6\" class=\"data row13 col6\" >0.520391</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col7\" class=\"data row13 col7\" >0.635960</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col8\" class=\"data row13 col8\" >0.620614</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col9\" class=\"data row13 col9\" >0.319567</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col10\" class=\"data row13 col10\" >0.431104</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col11\" class=\"data row13 col11\" >0.447393</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col12\" class=\"data row13 col12\" >0.483113</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col14\" class=\"data row13 col14\" >0.519005</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col15\" class=\"data row13 col15\" >0.453045</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow13_col16\" class=\"data row13 col16\" >0.666469</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbflevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col0\" class=\"data row14 col0\" >-0.022246</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col1\" class=\"data row14 col1\" >-0.034992</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col2\" class=\"data row14 col2\" >-0.438318</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col3\" class=\"data row14 col3\" >-0.340562</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col4\" class=\"data row14 col4\" >0.313505</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col5\" class=\"data row14 col5\" >-0.101211</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col6\" class=\"data row14 col6\" >0.113338</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col7\" class=\"data row14 col7\" >0.344475</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col8\" class=\"data row14 col8\" >0.472845</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col9\" class=\"data row14 col9\" >0.093088</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col10\" class=\"data row14 col10\" >0.099993</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col11\" class=\"data row14 col11\" >0.136799</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col12\" class=\"data row14 col12\" >0.531771</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col13\" class=\"data row14 col13\" >0.519005</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col15\" class=\"data row14 col15\" >0.593082</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow14_col16\" class=\"data row14 col16\" >0.185452</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbflevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col0\" class=\"data row15 col0\" >-0.061967</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col1\" class=\"data row15 col1\" >0.241005</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col2\" class=\"data row15 col2\" >-0.288250</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col3\" class=\"data row15 col3\" >-0.276487</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col4\" class=\"data row15 col4\" >0.094243</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col5\" class=\"data row15 col5\" >-0.096247</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col6\" class=\"data row15 col6\" >-0.078827</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col7\" class=\"data row15 col7\" >0.106219</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col8\" class=\"data row15 col8\" >0.280297</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col9\" class=\"data row15 col9\" >-0.016092</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col10\" class=\"data row15 col10\" >-0.051669</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col11\" class=\"data row15 col11\" >0.161334</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col12\" class=\"data row15 col12\" >0.448198</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col13\" class=\"data row15 col13\" >0.453045</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col14\" class=\"data row15 col14\" >0.593082</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow15_col16\" class=\"data row15 col16\" >0.031895</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbflevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col0\" class=\"data row16 col0\" >0.022707</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col1\" class=\"data row16 col1\" >0.269723</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col2\" class=\"data row16 col2\" >-0.051275</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col3\" class=\"data row16 col3\" >-0.506044</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col4\" class=\"data row16 col4\" >-0.014294</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col5\" class=\"data row16 col5\" >0.779398</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col6\" class=\"data row16 col6\" >0.897180</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col7\" class=\"data row16 col7\" >0.859205</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col8\" class=\"data row16 col8\" >0.795556</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col9\" class=\"data row16 col9\" >0.535583</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col10\" class=\"data row16 col10\" >0.758852</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col11\" class=\"data row16 col11\" >0.679895</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col12\" class=\"data row16 col12\" >0.479546</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col13\" class=\"data row16 col13\" >0.666469</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col14\" class=\"data row16 col14\" >0.185452</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col15\" class=\"data row16 col15\" >0.031895</td>\n",
        "                        <td id=\"T_c14a8370_3fc4_11eb_a01b_5254002addbfrow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f1328061e20>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
