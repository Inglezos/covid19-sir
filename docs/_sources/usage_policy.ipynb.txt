{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage: policy measures\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.14.0-theta'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "196"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **17th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{2: ['Holy See', 'Saint Kitts and Nevis', 'Grenada', 'Laos'],\n",
        " 3: ['Fiji', 'Timor-Leste'],\n",
        " 4: ['Dominica', 'Tanzania'],\n",
        " 6: ['Brunei', 'Saint Vincent and the Grenadines', 'Equatorial Guinea'],\n",
        " 7: ['Cambodia', 'Saint Lucia', 'Northern Mariana Islands'],\n",
        " 8: ['Seychelles', 'Bahamas', 'Antigua and Barbuda', 'Mauritius', 'Kyrgyzstan'],\n",
        " 9: ['Barbados', 'Madagascar', 'Sao Tome and Principe', 'Liechtenstein',\n",
        "     'Trinidad and Tobago', 'Guam', 'Vietnam', 'Botswana', 'Ethiopia',\n",
        "     'Papua New Guinea', 'Australia', 'Philippines', 'Republic of the Congo',\n",
        "     'Uzbekistan', 'Guyana'],\n",
        " 10: ['Singapore', 'Benin', 'Zimbabwe', 'Algeria', 'Kenya', 'Nicaragua',\n",
        "      'Bahrain', 'Jamaica', 'Angola', 'Eritrea', 'Guatemala', 'Djibouti',\n",
        "      'Rwanda', 'Venezuela', 'Kazakhstan', 'Maldives', 'Bolivia', 'Libya',\n",
        "      'Iraq', 'India', 'Gambia', 'Belize', 'Iceland', 'Virgin Islands, U.S.',\n",
        "      'Oman'],\n",
        " 11: ['Argentina', 'Mongolia', 'Paraguay', 'Monaco', 'Bangladesh',\n",
        "      'New Zealand', 'Honduras', 'Costa Rica', 'Israel', 'Colombia',\n",
        "      'El Salvador', 'Cape Verde', 'Ecuador', 'Chile', 'Zambia', 'Ghana',\n",
        "      'Uganda', 'Kuwait', 'Senegal', 'Namibia', 'Syria', 'Suriname',\n",
        "      'Saudi Arabia', 'Swaziland', 'Nepal', 'South Africa', 'Mozambique',\n",
        "      'Peru', \"Cote d'Ivoire\", 'Brazil', 'Dominican Republic', 'Bhutan',\n",
        "      'Burundi', 'Gabon'],\n",
        " 12: ['Sudan', 'Mexico', 'Liberia', 'Puerto Rico', 'Bermuda', 'Panama', 'Togo',\n",
        "      'Guinea-Bissau', 'Somalia', 'Malawi', 'Lesotho', 'Cameroon', 'Guinea',\n",
        "      'Myanmar', 'Pakistan', 'Egypt', 'Nigeria', 'Yemen'],\n",
        " 13: ['Kosovo', 'Qatar', 'Georgia', 'Armenia', 'Malta', 'Azerbaijan',\n",
        "      'San Marino', 'Moldova', 'Niger', 'Sierra Leone',\n",
        "      'Democratic Republic of the Congo', 'Palestine', 'Indonesia',\n",
        "      'South Sudan', 'Comoros', 'Taiwan', 'Mali', 'Japan', 'Ireland',\n",
        "      'Montenegro', 'Afghanistan', 'Morocco', 'Central African Republic',\n",
        "      'Tajikistan', 'Andorra'],\n",
        " 14: ['Slovenia', 'Russia', 'Jordan', 'Iran', 'Serbia', 'Mauritania', 'Cuba',\n",
        "      'Bosnia and Herzegovina', 'China', 'Thailand', 'United States', 'Lebanon',\n",
        "      'France', 'United Arab Emirates', 'Belarus', 'Burkina Faso', 'Hungary',\n",
        "      'Chad'],\n",
        " 15: ['Cyprus', 'Poland', 'Croatia', 'Bulgaria', 'Sri Lanka', 'Tunisia',\n",
        "      'Luxembourg', 'Albania', 'Ukraine', 'Haiti', 'Spain', 'Lithuania'],\n",
        " 16: ['Greece', 'Uruguay', 'Belgium', 'Latvia', 'Finland', 'North Macedonia',\n",
        "      'Slovakia', 'Italy', 'Czech Republic', 'Turkey'],\n",
        " 17: ['Austria', 'Malaysia', 'Switzerland', 'Denmark', 'Estonia', 'Canada',\n",
        "      'Romania', 'United Kingdom'],\n",
        " 18: ['Sweden', 'Portugal', 'Norway', 'Netherlands'],\n",
        " 19: ['Germany']}\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=17)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "13"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{17: ['Austria', 'Malaysia', 'Switzerland', 'Denmark', 'Estonia', 'Canada',\n",
        "      'Romania', 'United Kingdom'],\n",
        " 18: ['Sweden', 'Portugal', 'Norway', 'Netherlands'],\n",
        " 19: ['Germany']}\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"19\" valign=\"top\">Germany</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Jan2020</td>\n",
        "      <td>22Mar2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Mar2020</td>\n",
        "      <td>02Apr2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Apr2020</td>\n",
        "      <td>20Apr2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Apr2020</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jun2020</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20Sep2020</td>\n",
        "      <td>10Oct2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Oct2020</td>\n",
        "      <td>20Oct2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Oct2020</td>\n",
        "      <td>27Oct2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Oct2020</td>\n",
        "      <td>03Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Nov2020</td>\n",
        "      <td>10Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Nov2020</td>\n",
        "      <td>17Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Nov2020</td>\n",
        "      <td>24Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Nov2020</td>\n",
        "      <td>01Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Dec2020</td>\n",
        "      <td>08Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Dec2020</td>\n",
        "      <td>15Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Dec2020</td>\n",
        "      <td>21Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>17th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Dec2020</td>\n",
        "      <td>28Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>18th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Dec2020</td>\n",
        "      <td>10Jan2021</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Germany 0th    Past  19Jan2020  22Mar2020    82905782\n",
        "        1st    Past  23Mar2020  02Apr2020    82905782\n",
        "        2nd    Past  03Apr2020  20Apr2020    82905782\n",
        "        3rd    Past  21Apr2020  17Jun2020    82905782\n",
        "        4th    Past  18Jun2020  17Aug2020    82905782\n",
        "        5th    Past  18Aug2020  19Sep2020    82905782\n",
        "        6th    Past  20Sep2020  10Oct2020    82905782\n",
        "        7th    Past  11Oct2020  20Oct2020    82905782\n",
        "        8th    Past  21Oct2020  27Oct2020    82905782\n",
        "        9th    Past  28Oct2020  03Nov2020    82905782\n",
        "        10th   Past  04Nov2020  10Nov2020    82905782\n",
        "        11th   Past  11Nov2020  17Nov2020    82905782\n",
        "        12th   Past  18Nov2020  24Nov2020    82905782\n",
        "        13th   Past  25Nov2020  01Dec2020    82905782\n",
        "        14th   Past  02Dec2020  08Dec2020    82905782\n",
        "        15th   Past  09Dec2020  15Dec2020    82905782\n",
        "        16th   Past  16Dec2020  21Dec2020    82905782\n",
        "        17th   Past  22Dec2020  28Dec2020    82905782\n",
        "        18th   Past  29Dec2020  10Jan2021    82905782"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF, timeout=10)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>\n",
        "Running optimization with 4 CPUs...\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 13th phase (30Nov2020 - 08Dec2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  7th phase (11Oct2020 - 20Oct2020): finished  349 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  5th phase (13Sep2020 - 03Oct2020): finished  348 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  8th phase (31Oct2020 - 10Nov2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 11th phase (20Nov2020 - 26Nov2020): finished  356 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  1st phase (23Mar2020 - 02Apr2020): finished  351 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE, 12th phase (01Dec2020 - 10Dec2020): finished  354 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  1st phase (07May2020 - 16Jul2020): finished  332 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  3rd phase (26May2020 - 22Jul2020): finished  337 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE,  8th phase (04Nov2020 - 10Nov2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  2nd phase (17Apr2020 - 03Jun2020): finished  339 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 17th phase (30Dec2020 - 10Jan2021): finished  351 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  0th phase (14Mar2020 - 03Apr2020): finished  348 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  8th phase (30Oct2020 - 05Nov2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE,  5th phase (13Aug2020 - 04Oct2020): finished  341 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 18th phase (29Dec2020 - 10Jan2021): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  5th phase (24Sep2020 - 07Oct2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE, 16th phase (03Jan2021 - 10Jan2021): finished  354 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  1st phase (29Mar2020 - 12Jul2020): finished  322 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  3rd phase (21Apr2020 - 17Jun2020): finished  333 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE,  7th phase (27Oct2020 - 03Nov2020): finished  356 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  8th phase (29Oct2020 - 03Nov2020): finished  355 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 12th phase (07Dec2020 - 12Dec2020): finished  357 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 15th phase (18Dec2020 - 28Dec2020): finished  351 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE,  2nd phase (13May2020 - 07Jun2020): finished  348 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE, 14th phase (16Dec2020 - 21Dec2020): finished  355 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE,  9th phase (11Nov2020 - 17Nov2020): finished  355 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 16th phase (04Jan2021 - 10Jan2021): finished  354 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMYS,  3rd phase (25May2020 - 09Sep2020): finished  321 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (10Jul2020 - 01Sep2020): finished  337 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  6th phase (20Sep2020 - 10Oct2020): finished  351 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 10th phase (12Nov2020 - 19Nov2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 12th phase (28Nov2020 - 05Dec2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  3rd phase (28May2020 - 07Aug2020): finished  321 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU, 12th phase (25Nov2020 - 02Dec2020): finished  340 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  6th phase (04Oct2020 - 17Oct2020): finished  334 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMYS,  1st phase (26Mar2020 - 12Apr2020): finished  344 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 12th phase (24Nov2020 - 03Dec2020): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 10th phase (09Nov2020 - 22Nov2020): finished  349 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 12th phase (30Nov2020 - 07Dec2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  8th phase (21Oct2020 - 27Oct2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE,  0th phase (21Feb2020 - 15Apr2020): finished  346 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE, 11th phase (25Nov2020 - 01Dec2020): finished  355 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  5th phase (17Sep2020 - 02Oct2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  9th phase (09Nov2020 - 14Nov2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  3rd phase (03May2020 - 05Aug2020): finished  321 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  9th phase (28Oct2020 - 04Nov2020): finished  354 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMYS, 13th phase (05Dec2020 - 14Dec2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMYS,  5th phase (04Oct2020 - 12Oct2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  0th phase (04Mar2020 - 06May2020): finished  337 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  5th phase (18Sep2020 - 30Sep2020): finished  349 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (13Oct2020 - 21Oct2020): finished  349 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  4th phase (25Aug2020 - 17Sep2020): finished  348 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  0th phase (16Mar2020 - 15Apr2020): finished  346 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  0th phase (06Mar2020 - 05Apr2020): finished  343 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (04Apr2020 - 23Apr2020): finished  346 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 15th phase (24Dec2020 - 03Jan2021): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  6th phase (17Oct2020 - 22Oct2020): finished  355 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 13th phase (04Dec2020 - 13Dec2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 13th phase (06Dec2020 - 11Dec2020): finished  354 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 14th phase (14Dec2020 - 23Dec2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  8th phase (31Oct2020 - 09Nov2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU, 14th phase (10Dec2020 - 17Dec2020): finished  354 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMYS, 11th phase (18Nov2020 - 28Nov2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  6th phase (21Sep2020 - 07Oct2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMYS,  4th phase (10Sep2020 - 03Oct2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 15th phase (16Dec2020 - 25Dec2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  2nd phase (03Apr2020 - 20Apr2020): finished  348 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 16th phase (26Dec2020 - 10Jan2021): finished  351 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMYS,  6th phase (13Oct2020 - 18Oct2020): finished  357 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 10th phase (13Nov2020 - 19Nov2020): finished  354 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  6th phase (13Oct2020 - 20Oct2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  7th phase (18Oct2020 - 30Oct2020): finished  351 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 12th phase (05Dec2020 - 11Dec2020): finished  355 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE, 10th phase (18Nov2020 - 24Nov2020): finished  354 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 14th phase (21Dec2020 - 27Dec2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  5th phase (01Oct2020 - 12Oct2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  2nd phase (08Apr2020 - 01Aug2020): finished  318 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  4th phase (06Aug2020 - 02Sep2020): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  2nd phase (06Apr2020 - 02May2020): finished  343 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE, 16th phase (29Dec2020 - 03Jan2021): finished  335 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE, 13th phase (11Dec2020 - 20Dec2020): finished  333 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 13th phase (12Dec2020 - 18Dec2020): finished  335 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE, 15th phase (28Dec2020 - 02Jan2021): finished  330 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  0th phase (19Jan2020 - 22Mar2020): finished  334 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE, 11th phase (25Nov2020 - 30Nov2020): finished  355 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 12th phase (20Nov2020 - 29Nov2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMYS, 12th phase (29Nov2020 - 04Dec2020): finished  351 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMYS,  0th phase (07Feb2020 - 25Mar2020): finished  335 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  5th phase (03Sep2020 - 20Sep2020): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMYS,  2nd phase (13Apr2020 - 24May2020): finished  338 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  4th phase (08Sep2020 - 04Oct2020): finished  342 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  4th phase (08Aug2020 - 16Sep2020): finished  341 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (22Oct2020 - 28Oct2020): finished  355 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  3rd phase (04Jun2020 - 24Aug2020): finished  327 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  5th phase (05Oct2020 - 13Oct2020): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  9th phase (11Nov2020 - 19Nov2020): finished  351 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (02Sep2020 - 24Sep2020): finished  344 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE,  4th phase (25Jun2020 - 12Aug2020): finished  337 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 11th phase (18Nov2020 - 23Nov2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  7th phase (23Oct2020 - 28Oct2020): finished  341 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  1st phase (06Apr2020 - 05May2020): finished  325 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  1st phase (10Apr2020 - 30Apr2020): finished  332 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  2nd phase (01May2020 - 25May2020): finished  327 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  1st phase (24Mar2020 - 07Apr2020): finished  346 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 12th phase (26Nov2020 - 02Dec2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 11th phase (23Nov2020 - 29Nov2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  7th phase (08Oct2020 - 24Oct2020): finished  345 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE, 15th phase (22Dec2020 - 28Dec2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  6th phase (08Oct2020 - 20Oct2020): finished  349 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  9th phase (05Nov2020 - 12Nov2020): finished  354 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  1st phase (16Apr2020 - 09Aug2020): finished  314 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  7th phase (20Oct2020 - 28Oct2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  0th phase (11Mar2020 - 09Apr2020): finished  344 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE, 12th phase (02Dec2020 - 08Dec2020): finished  354 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 14th phase (10Dec2020 - 15Dec2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  9th phase (06Nov2020 - 11Nov2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 15th phase (27Dec2020 - 02Jan2021): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (06Jun2020 - 09Jul2020): finished  343 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  6th phase (09Oct2020 - 19Oct2020): finished  348 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  3rd phase (07Aug2020 - 10Sep2020): finished  342 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  6th phase (03Oct2020 - 12Oct2020): finished  351 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (25Sep2020 - 12Oct2020): finished  349 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  0th phase (17Feb2020 - 09Apr2020): finished  334 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE,  1st phase (16Apr2020 - 12May2020): finished  321 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE, 13th phase (09Dec2020 - 15Dec2020): finished  334 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 11th phase (01Dec2020 - 06Dec2020): finished  335 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  9th phase (29Oct2020 - 04Nov2020): finished  334 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE,  3rd phase (08Jun2020 - 24Jun2020): finished  346 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 15th phase (16Dec2020 - 22Dec2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 16th phase (23Dec2020 - 29Dec2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMYS, 15th phase (25Dec2020 - 03Jan2021): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  9th phase (10Nov2020 - 19Nov2020): finished  349 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  3rd phase (10Aug2020 - 01Sep2020): finished  346 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 10th phase (05Nov2020 - 14Nov2020): finished  351 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE,  6th phase (05Oct2020 - 26Oct2020): finished  344 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  7th phase (21Oct2020 - 30Oct2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  1st phase (22Mar2020 - 05Apr2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMYS,  8th phase (25Oct2020 - 30Oct2020): finished  354 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  1st phase (02Apr2020 - 16Apr2020): finished  349 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  2nd phase (17Jul2020 - 09Aug2020): finished  341 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  2nd phase (13Jul2020 - 24Aug2020): finished  337 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMYS, 10th phase (12Nov2020 - 17Nov2020): finished  348 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 14th phase (19Dec2020 - 26Dec2020): finished  346 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 12th phase (27Nov2020 - 03Dec2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  9th phase (05Nov2020 - 11Nov2020): finished  351 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  0th phase (05Mar2020 - 28Mar2020): finished  344 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  2nd phase (10Aug2020 - 16Sep2020): finished  340 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  0th phase (15Mar2020 - 01Apr2020): finished  343 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  9th phase (04Nov2020 - 11Nov2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  3rd phase (17Sep2020 - 30Sep2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  2nd phase (06May2020 - 06Aug2020): finished  323 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 14th phase (12Dec2020 - 17Dec2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  5th phase (18Aug2020 - 19Sep2020): finished  340 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  4th phase (15Sep2020 - 30Sep2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 11th phase (28Nov2020 - 04Dec2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  2nd phase (01May2020 - 27May2020): finished  342 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  8th phase (30Oct2020 - 08Nov2020): finished  348 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMYS, 14th phase (15Dec2020 - 24Dec2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  9th phase (28Oct2020 - 03Nov2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  7th phase (20Oct2020 - 29Oct2020): finished  338 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 13th phase (13Dec2020 - 20Dec2020): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 13th phase (03Dec2020 - 09Dec2020): finished  345 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  8th phase (25Oct2020 - 01Nov2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  4th phase (23Jul2020 - 12Sep2020): finished  335 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 15th phase (28Dec2020 - 03Jan2021): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  0th phase (08Mar2020 - 21Mar2020): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  0th phase (03Mar2020 - 23Mar2020): finished  346 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  4th phase (01Oct2020 - 09Oct2020): finished  339 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE, 10th phase (15Nov2020 - 24Nov2020): finished  330 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 10th phase (20Nov2020 - 30Nov2020): finished  330 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  3rd phase (02Aug2020 - 07Sep2020): finished  329 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  4th phase (11Sep2020 - 23Sep2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  3rd phase (25Aug2020 - 14Sep2020): finished  348 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  5th phase (24Sep2020 - 08Oct2020): finished  349 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  5th phase (10Oct2020 - 16Oct2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  6th phase (01Oct2020 - 19Oct2020): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMYS,  7th phase (19Oct2020 - 24Oct2020): finished  354 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 11th phase (15Nov2020 - 25Nov2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  9th phase (02Nov2020 - 08Nov2020): finished  354 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 10th phase (20Nov2020 - 27Nov2020): finished  356 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (24Apr2020 - 05Jun2020): finished  344 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 14th phase (15Dec2020 - 21Dec2020): finished  358 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  4th phase (02Sep2020 - 23Sep2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  6th phase (14Oct2020 - 19Oct2020): finished  361 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMYS,  9th phase (31Oct2020 - 11Nov2020): finished  356 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  4th phase (18Jun2020 - 17Aug2020): finished  340 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  7th phase (21Oct2020 - 28Oct2020): finished  360 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 13th phase (08Dec2020 - 14Dec2020): finished  359 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 8 min 29 sec\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"19\" valign=\"top\">Germany</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Jan2020</td>\n",
        "      <td>22Mar2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>4.91</td>\n",
        "      <td>0.022540</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.019137</td>\n",
        "      <td>0.003731</td>\n",
        "      <td>360.0</td>\n",
        "      <td>3152.0</td>\n",
        "      <td>13.0</td>\n",
        "      <td>0.023</td>\n",
        "      <td>67.0</td>\n",
        "      <td>1.332419</td>\n",
        "      <td>334.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Mar2020</td>\n",
        "      <td>02Apr2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>7.70</td>\n",
        "      <td>0.021782</td>\n",
        "      <td>0.000682</td>\n",
        "      <td>0.028067</td>\n",
        "      <td>0.002884</td>\n",
        "      <td>360.0</td>\n",
        "      <td>366.0</td>\n",
        "      <td>8.0</td>\n",
        "      <td>0.022</td>\n",
        "      <td>86.0</td>\n",
        "      <td>0.150635</td>\n",
        "      <td>351.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Apr2020</td>\n",
        "      <td>20Apr2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.74</td>\n",
        "      <td>0.074281</td>\n",
        "      <td>0.000070</td>\n",
        "      <td>0.011903</td>\n",
        "      <td>0.014751</td>\n",
        "      <td>360.0</td>\n",
        "      <td>3567.0</td>\n",
        "      <td>21.0</td>\n",
        "      <td>0.074</td>\n",
        "      <td>16.0</td>\n",
        "      <td>0.071200</td>\n",
        "      <td>348.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Apr2020</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.54</td>\n",
        "      <td>0.029872</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.012776</td>\n",
        "      <td>0.022828</td>\n",
        "      <td>360.0</td>\n",
        "      <td>3708.0</td>\n",
        "      <td>19.0</td>\n",
        "      <td>0.030</td>\n",
        "      <td>10.0</td>\n",
        "      <td>0.091190</td>\n",
        "      <td>333.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jun2020</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.15</td>\n",
        "      <td>0.006277</td>\n",
        "      <td>0.000180</td>\n",
        "      <td>0.017392</td>\n",
        "      <td>0.014861</td>\n",
        "      <td>360.0</td>\n",
        "      <td>1388.0</td>\n",
        "      <td>14.0</td>\n",
        "      <td>0.006</td>\n",
        "      <td>16.0</td>\n",
        "      <td>0.119716</td>\n",
        "      <td>340.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.22</td>\n",
        "      <td>0.000382</td>\n",
        "      <td>0.000080</td>\n",
        "      <td>0.016441</td>\n",
        "      <td>0.013383</td>\n",
        "      <td>360.0</td>\n",
        "      <td>3133.0</td>\n",
        "      <td>15.0</td>\n",
        "      <td>0.000</td>\n",
        "      <td>18.0</td>\n",
        "      <td>0.046121</td>\n",
        "      <td>340.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20Sep2020</td>\n",
        "      <td>10Oct2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.54</td>\n",
        "      <td>0.002473</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.018450</td>\n",
        "      <td>0.011867</td>\n",
        "      <td>360.0</td>\n",
        "      <td>2685.0</td>\n",
        "      <td>13.0</td>\n",
        "      <td>0.002</td>\n",
        "      <td>21.0</td>\n",
        "      <td>0.031513</td>\n",
        "      <td>351.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Oct2020</td>\n",
        "      <td>20Oct2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.76</td>\n",
        "      <td>0.000299</td>\n",
        "      <td>0.000230</td>\n",
        "      <td>0.025045</td>\n",
        "      <td>0.008832</td>\n",
        "      <td>360.0</td>\n",
        "      <td>1085.0</td>\n",
        "      <td>9.0</td>\n",
        "      <td>0.000</td>\n",
        "      <td>28.0</td>\n",
        "      <td>0.025908</td>\n",
        "      <td>349.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Oct2020</td>\n",
        "      <td>27Oct2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.03</td>\n",
        "      <td>0.002617</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.027295</td>\n",
        "      <td>0.008693</td>\n",
        "      <td>360.0</td>\n",
        "      <td>829.0</td>\n",
        "      <td>9.0</td>\n",
        "      <td>0.003</td>\n",
        "      <td>28.0</td>\n",
        "      <td>0.019598</td>\n",
        "      <td>352.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Oct2020</td>\n",
        "      <td>03Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.30</td>\n",
        "      <td>0.000256</td>\n",
        "      <td>0.000257</td>\n",
        "      <td>0.018147</td>\n",
        "      <td>0.007648</td>\n",
        "      <td>360.0</td>\n",
        "      <td>974.0</td>\n",
        "      <td>13.0</td>\n",
        "      <td>0.000</td>\n",
        "      <td>32.0</td>\n",
        "      <td>0.035547</td>\n",
        "      <td>353.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Nov2020</td>\n",
        "      <td>10Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Nov2020</td>\n",
        "      <td>17Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Nov2020</td>\n",
        "      <td>24Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Nov2020</td>\n",
        "      <td>01Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Dec2020</td>\n",
        "      <td>08Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Dec2020</td>\n",
        "      <td>15Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Dec2020</td>\n",
        "      <td>21Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>17th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Dec2020</td>\n",
        "      <td>28Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>18th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Dec2020</td>\n",
        "      <td>10Jan2021</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.70</td>\n",
        "      <td>0.000438</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.012112</td>\n",
        "      <td>0.017078</td>\n",
        "      <td>360.0</td>\n",
        "      <td>2549.0</td>\n",
        "      <td>20.0</td>\n",
        "      <td>0.000</td>\n",
        "      <td>14.0</td>\n",
        "      <td>0.037012</td>\n",
        "      <td>350.0</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt     theta  \\\n",
        "Country Phase                                                                  \n",
        "Germany 0th    Past  19Jan2020  22Mar2020    82905782  SIR-F  4.91  0.022540   \n",
        "        1st    Past  23Mar2020  02Apr2020    82905782  SIR-F  7.70  0.021782   \n",
        "        2nd    Past  03Apr2020  20Apr2020    82905782  SIR-F  0.74  0.074281   \n",
        "        3rd    Past  21Apr2020  17Jun2020    82905782  SIR-F  0.54  0.029872   \n",
        "        4th    Past  18Jun2020  17Aug2020    82905782  SIR-F  1.15  0.006277   \n",
        "        5th    Past  18Aug2020  19Sep2020    82905782  SIR-F  1.22  0.000382   \n",
        "        6th    Past  20Sep2020  10Oct2020    82905782  SIR-F  1.54  0.002473   \n",
        "        7th    Past  11Oct2020  20Oct2020    82905782  SIR-F  2.76  0.000299   \n",
        "        8th    Past  21Oct2020  27Oct2020    82905782  SIR-F  3.03  0.002617   \n",
        "        9th    Past  28Oct2020  03Nov2020    82905782  SIR-F  2.30  0.000256   \n",
        "        10th   Past  04Nov2020  10Nov2020    82905782      -     -         -   \n",
        "        11th   Past  11Nov2020  17Nov2020    82905782      -     -         -   \n",
        "        12th   Past  18Nov2020  24Nov2020    82905782      -     -         -   \n",
        "        13th   Past  25Nov2020  01Dec2020    82905782      -     -         -   \n",
        "        14th   Past  02Dec2020  08Dec2020    82905782      -     -         -   \n",
        "        15th   Past  09Dec2020  15Dec2020    82905782      -     -         -   \n",
        "        16th   Past  16Dec2020  21Dec2020    82905782      -     -         -   \n",
        "        17th   Past  22Dec2020  28Dec2020    82905782      -     -         -   \n",
        "        18th   Past  29Dec2020  10Jan2021    82905782  SIR-F  0.70  0.000438   \n",
        "\n",
        "                  kappa       rho     sigma    tau 1/alpha2 [day]  \\\n",
        "Country Phase                                                       \n",
        "Germany 0th    0.000079  0.019137  0.003731  360.0         3152.0   \n",
        "        1st    0.000682  0.028067  0.002884  360.0          366.0   \n",
        "        2nd    0.000070  0.011903  0.014751  360.0         3567.0   \n",
        "        3rd    0.000067  0.012776  0.022828  360.0         3708.0   \n",
        "        4th    0.000180  0.017392  0.014861  360.0         1388.0   \n",
        "        5th    0.000080  0.016441  0.013383  360.0         3133.0   \n",
        "        6th    0.000093  0.018450  0.011867  360.0         2685.0   \n",
        "        7th    0.000230  0.025045  0.008832  360.0         1085.0   \n",
        "        8th    0.000301  0.027295  0.008693  360.0          829.0   \n",
        "        9th    0.000257  0.018147  0.007648  360.0          974.0   \n",
        "        10th          -         -         -      -              -   \n",
        "        11th          -         -         -      -              -   \n",
        "        12th          -         -         -      -              -   \n",
        "        13th          -         -         -      -              -   \n",
        "        14th          -         -         -      -              -   \n",
        "        15th          -         -         -      -              -   \n",
        "        16th          -         -         -      -              -   \n",
        "        17th          -         -         -      -              -   \n",
        "        18th   0.000098  0.012112  0.017078  360.0         2549.0   \n",
        "\n",
        "              1/beta [day] alpha1 [-] 1/gamma [day]     RMSLE Trials  \\\n",
        "Country Phase                                                          \n",
        "Germany 0th           13.0      0.023          67.0  1.332419  334.0   \n",
        "        1st            8.0      0.022          86.0  0.150635  351.0   \n",
        "        2nd           21.0      0.074          16.0  0.071200  348.0   \n",
        "        3rd           19.0      0.030          10.0  0.091190  333.0   \n",
        "        4th           14.0      0.006          16.0  0.119716  340.0   \n",
        "        5th           15.0      0.000          18.0  0.046121  340.0   \n",
        "        6th           13.0      0.002          21.0  0.031513  351.0   \n",
        "        7th            9.0      0.000          28.0  0.025908  349.0   \n",
        "        8th            9.0      0.003          28.0  0.019598  352.0   \n",
        "        9th           13.0      0.000          32.0  0.035547  353.0   \n",
        "        10th             -          -             -         -      -   \n",
        "        11th             -          -             -         -      -   \n",
        "        12th             -          -             -         -      -   \n",
        "        13th             -          -             -         -      -   \n",
        "        14th             -          -             -         -      -   \n",
        "        15th             -          -             -         -      -   \n",
        "        16th             -          -             -         -      -   \n",
        "        17th             -          -             -         -      -   \n",
        "        18th          20.0      0.000          14.0  0.037012  350.0   \n",
        "\n",
        "                    Runtime  \n",
        "Country Phase                \n",
        "Germany 0th    0 min 10 sec  \n",
        "        1st    0 min 10 sec  \n",
        "        2nd    0 min 10 sec  \n",
        "        3rd    0 min 10 sec  \n",
        "        4th    0 min 10 sec  \n",
        "        5th    0 min 10 sec  \n",
        "        6th    0 min 10 sec  \n",
        "        7th    0 min 10 sec  \n",
        "        8th    0 min 10 sec  \n",
        "        9th    0 min 10 sec  \n",
        "        10th              -  \n",
        "        11th              -  \n",
        "        12th              -  \n",
        "        13th              -  \n",
        "        14th              -  \n",
        "        15th              -  \n",
        "        16th              -  \n",
        "        17th              -  \n",
        "        18th   0 min 10 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-03-05</td>\n",
        "      <td>Austria</td>\n",
        "      <td>0.017157</td>\n",
        "      <td>0.00019</td>\n",
        "      <td>0.051718</td>\n",
        "      <td>0.001504</td>\n",
        "      <td>0.017</td>\n",
        "      <td>1315</td>\n",
        "      <td>4</td>\n",
        "      <td>166</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>11.11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-03-05</td>\n",
        "      <td>Austria</td>\n",
        "      <td>0.017157</td>\n",
        "      <td>0.00019</td>\n",
        "      <td>0.051718</td>\n",
        "      <td>0.001504</td>\n",
        "      <td>0.017</td>\n",
        "      <td>1315</td>\n",
        "      <td>4</td>\n",
        "      <td>166</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>11.11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-03-05</td>\n",
        "      <td>Austria</td>\n",
        "      <td>0.017157</td>\n",
        "      <td>0.00019</td>\n",
        "      <td>0.051718</td>\n",
        "      <td>0.001504</td>\n",
        "      <td>0.017</td>\n",
        "      <td>1315</td>\n",
        "      <td>4</td>\n",
        "      <td>166</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>11.11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-03-05</td>\n",
        "      <td>Austria</td>\n",
        "      <td>0.017157</td>\n",
        "      <td>0.00019</td>\n",
        "      <td>0.051718</td>\n",
        "      <td>0.001504</td>\n",
        "      <td>0.017</td>\n",
        "      <td>1315</td>\n",
        "      <td>4</td>\n",
        "      <td>166</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>11.11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-03-05</td>\n",
        "      <td>Austria</td>\n",
        "      <td>0.017157</td>\n",
        "      <td>0.00019</td>\n",
        "      <td>0.051718</td>\n",
        "      <td>0.001504</td>\n",
        "      <td>0.017</td>\n",
        "      <td>1315</td>\n",
        "      <td>4</td>\n",
        "      <td>166</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>11.11</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date  Country     theta    kappa       rho     sigma alpha1 [-]  \\\n",
        "0 2020-03-05  Austria  0.017157  0.00019  0.051718  0.001504      0.017   \n",
        "1 2020-03-05  Austria  0.017157  0.00019  0.051718  0.001504      0.017   \n",
        "2 2020-03-05  Austria  0.017157  0.00019  0.051718  0.001504      0.017   \n",
        "3 2020-03-05  Austria  0.017157  0.00019  0.051718  0.001504      0.017   \n",
        "4 2020-03-05  Austria  0.017157  0.00019  0.051718  0.001504      0.017   \n",
        "\n",
        "  1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0           1315            4           166  ...             0   \n",
        "1           1315            4           166  ...             0   \n",
        "2           1315            4           166  ...             0   \n",
        "3           1315            4           166  ...             0   \n",
        "4           1315            4           166  ...             0   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        0                  0                       0   \n",
        "4                        0                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    0   \n",
        "1                               0                                    0   \n",
        "2                               0                                    0   \n",
        "3                               0                                    0   \n",
        "4                               0                                    0   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               1                1             11.11  \n",
        "1                      2               1                1             11.11  \n",
        "2                      2               1                1             11.11  \n",
        "3                      2               1                1             11.11  \n",
        "4                      2               1                1             11.11  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Malaysia</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Norway</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Sweden</th>\n",
        "      <th>Switzerland</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2021-01-06</th>\n",
        "      <td>1.02</td>\n",
        "      <td>1.22</td>\n",
        "      <td>0.66</td>\n",
        "      <td>1.87</td>\n",
        "      <td>0.7</td>\n",
        "      <td>1.41</td>\n",
        "      <td>1.7</td>\n",
        "      <td>2.89</td>\n",
        "      <td>2.49</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.61</td>\n",
        "      <td>0.76</td>\n",
        "      <td>2.08</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-07</th>\n",
        "      <td>1.02</td>\n",
        "      <td>1.22</td>\n",
        "      <td>0.66</td>\n",
        "      <td>1.87</td>\n",
        "      <td>0.7</td>\n",
        "      <td>1.41</td>\n",
        "      <td>1.7</td>\n",
        "      <td>2.89</td>\n",
        "      <td>2.49</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.61</td>\n",
        "      <td>0.76</td>\n",
        "      <td>2.08</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-08</th>\n",
        "      <td>1.02</td>\n",
        "      <td>1.22</td>\n",
        "      <td>0.66</td>\n",
        "      <td>1.87</td>\n",
        "      <td>0.7</td>\n",
        "      <td>1.41</td>\n",
        "      <td>1.7</td>\n",
        "      <td>2.89</td>\n",
        "      <td>2.49</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.61</td>\n",
        "      <td>0.76</td>\n",
        "      <td>2.08</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-09</th>\n",
        "      <td>1.02</td>\n",
        "      <td>1.22</td>\n",
        "      <td>0.66</td>\n",
        "      <td>1.87</td>\n",
        "      <td>0.7</td>\n",
        "      <td>1.41</td>\n",
        "      <td>1.7</td>\n",
        "      <td>2.89</td>\n",
        "      <td>2.49</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.61</td>\n",
        "      <td>0.76</td>\n",
        "      <td>2.08</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-10</th>\n",
        "      <td>1.02</td>\n",
        "      <td>1.22</td>\n",
        "      <td>0.66</td>\n",
        "      <td>1.87</td>\n",
        "      <td>0.7</td>\n",
        "      <td>1.41</td>\n",
        "      <td>1.7</td>\n",
        "      <td>2.89</td>\n",
        "      <td>2.49</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.61</td>\n",
        "      <td>0.76</td>\n",
        "      <td>2.08</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Austria  Canada  Denmark  Estonia  Germany  Malaysia  Netherlands  \\\n",
        "Date                                                                            \n",
        "2021-01-06     1.02    1.22     0.66     1.87      0.7      1.41          1.7   \n",
        "2021-01-07     1.02    1.22     0.66     1.87      0.7      1.41          1.7   \n",
        "2021-01-08     1.02    1.22     0.66     1.87      0.7      1.41          1.7   \n",
        "2021-01-09     1.02    1.22     0.66     1.87      0.7      1.41          1.7   \n",
        "2021-01-10     1.02    1.22     0.66     1.87      0.7      1.41          1.7   \n",
        "\n",
        "Country     Norway  Portugal  Romania  Sweden  Switzerland  United Kingdom  \n",
        "Date                                                                        \n",
        "2021-01-06    2.89      2.49     0.82    0.61         0.76            2.08  \n",
        "2021-01-07    2.89      2.49     0.82    0.61         0.76            2.08  \n",
        "2021-01-08    2.89      2.49     0.82    0.61         0.76            2.08  \n",
        "2021-01-09    2.89      2.49     0.82    0.61         0.76            2.08  \n",
        "2021-01-10    2.89      2.49     0.82    0.61         0.76            2.08  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Malaysia</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Norway</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Sweden</th>\n",
        "      <th>Switzerland</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2021-01-06</th>\n",
        "      <td>0.018401</td>\n",
        "      <td>0.024602</td>\n",
        "      <td>0.014421</td>\n",
        "      <td>0.019255</td>\n",
        "      <td>0.012112</td>\n",
        "      <td>0.022732</td>\n",
        "      <td>0.017883</td>\n",
        "      <td>0.004772</td>\n",
        "      <td>0.024841</td>\n",
        "      <td>0.018264</td>\n",
        "      <td>0.009883</td>\n",
        "      <td>0.0013</td>\n",
        "      <td>0.021395</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-07</th>\n",
        "      <td>0.018401</td>\n",
        "      <td>0.024602</td>\n",
        "      <td>0.014421</td>\n",
        "      <td>0.019255</td>\n",
        "      <td>0.012112</td>\n",
        "      <td>0.022732</td>\n",
        "      <td>0.017883</td>\n",
        "      <td>0.004772</td>\n",
        "      <td>0.024841</td>\n",
        "      <td>0.018264</td>\n",
        "      <td>0.009883</td>\n",
        "      <td>0.0013</td>\n",
        "      <td>0.021395</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-08</th>\n",
        "      <td>0.018401</td>\n",
        "      <td>0.024602</td>\n",
        "      <td>0.014421</td>\n",
        "      <td>0.019255</td>\n",
        "      <td>0.012112</td>\n",
        "      <td>0.022732</td>\n",
        "      <td>0.017883</td>\n",
        "      <td>0.004772</td>\n",
        "      <td>0.024841</td>\n",
        "      <td>0.018264</td>\n",
        "      <td>0.009883</td>\n",
        "      <td>0.0013</td>\n",
        "      <td>0.021395</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-09</th>\n",
        "      <td>0.018401</td>\n",
        "      <td>0.024602</td>\n",
        "      <td>0.014421</td>\n",
        "      <td>0.019255</td>\n",
        "      <td>0.012112</td>\n",
        "      <td>0.022732</td>\n",
        "      <td>0.017883</td>\n",
        "      <td>0.004772</td>\n",
        "      <td>0.024841</td>\n",
        "      <td>0.018264</td>\n",
        "      <td>0.009883</td>\n",
        "      <td>0.0013</td>\n",
        "      <td>0.021395</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-10</th>\n",
        "      <td>0.018401</td>\n",
        "      <td>0.024602</td>\n",
        "      <td>0.014421</td>\n",
        "      <td>0.019255</td>\n",
        "      <td>0.012112</td>\n",
        "      <td>0.022732</td>\n",
        "      <td>0.017883</td>\n",
        "      <td>0.004772</td>\n",
        "      <td>0.024841</td>\n",
        "      <td>0.018264</td>\n",
        "      <td>0.009883</td>\n",
        "      <td>0.0013</td>\n",
        "      <td>0.021395</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Austria    Canada   Denmark   Estonia   Germany  Malaysia  \\\n",
        "Date                                                                     \n",
        "2021-01-06  0.018401  0.024602  0.014421  0.019255  0.012112  0.022732   \n",
        "2021-01-07  0.018401  0.024602  0.014421  0.019255  0.012112  0.022732   \n",
        "2021-01-08  0.018401  0.024602  0.014421  0.019255  0.012112  0.022732   \n",
        "2021-01-09  0.018401  0.024602  0.014421  0.019255  0.012112  0.022732   \n",
        "2021-01-10  0.018401  0.024602  0.014421  0.019255  0.012112  0.022732   \n",
        "\n",
        "Country     Netherlands    Norway  Portugal   Romania    Sweden  Switzerland  \\\n",
        "Date                                                                           \n",
        "2021-01-06     0.017883  0.004772  0.024841  0.018264  0.009883       0.0013   \n",
        "2021-01-07     0.017883  0.004772  0.024841  0.018264  0.009883       0.0013   \n",
        "2021-01-08     0.017883  0.004772  0.024841  0.018264  0.009883       0.0013   \n",
        "2021-01-09     0.017883  0.004772  0.024841  0.018264  0.009883       0.0013   \n",
        "2021-01-10     0.017883  0.004772  0.024841  0.018264  0.009883       0.0013   \n",
        "\n",
        "Country     United Kingdom  \n",
        "Date                        \n",
        "2021-01-06        0.021395  \n",
        "2021-01-07        0.021395  \n",
        "2021-01-08        0.021395  \n",
        "2021-01-09        0.021395  \n",
        "2021-01-10        0.021395  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Malaysia</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Norway</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Sweden</th>\n",
        "      <th>Switzerland</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2021-01-06</th>\n",
        "      <td>0.017875</td>\n",
        "      <td>0.019276</td>\n",
        "      <td>0.021776</td>\n",
        "      <td>0.010053</td>\n",
        "      <td>0.017078</td>\n",
        "      <td>0.016114</td>\n",
        "      <td>0.010385</td>\n",
        "      <td>0.001549</td>\n",
        "      <td>0.009887</td>\n",
        "      <td>0.02176</td>\n",
        "      <td>0.016017</td>\n",
        "      <td>0.001447</td>\n",
        "      <td>0.010093</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-07</th>\n",
        "      <td>0.017875</td>\n",
        "      <td>0.019276</td>\n",
        "      <td>0.021776</td>\n",
        "      <td>0.010053</td>\n",
        "      <td>0.017078</td>\n",
        "      <td>0.016114</td>\n",
        "      <td>0.010385</td>\n",
        "      <td>0.001549</td>\n",
        "      <td>0.009887</td>\n",
        "      <td>0.02176</td>\n",
        "      <td>0.016017</td>\n",
        "      <td>0.001447</td>\n",
        "      <td>0.010093</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-08</th>\n",
        "      <td>0.017875</td>\n",
        "      <td>0.019276</td>\n",
        "      <td>0.021776</td>\n",
        "      <td>0.010053</td>\n",
        "      <td>0.017078</td>\n",
        "      <td>0.016114</td>\n",
        "      <td>0.010385</td>\n",
        "      <td>0.001549</td>\n",
        "      <td>0.009887</td>\n",
        "      <td>0.02176</td>\n",
        "      <td>0.016017</td>\n",
        "      <td>0.001447</td>\n",
        "      <td>0.010093</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-09</th>\n",
        "      <td>0.017875</td>\n",
        "      <td>0.019276</td>\n",
        "      <td>0.021776</td>\n",
        "      <td>0.010053</td>\n",
        "      <td>0.017078</td>\n",
        "      <td>0.016114</td>\n",
        "      <td>0.010385</td>\n",
        "      <td>0.001549</td>\n",
        "      <td>0.009887</td>\n",
        "      <td>0.02176</td>\n",
        "      <td>0.016017</td>\n",
        "      <td>0.001447</td>\n",
        "      <td>0.010093</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-10</th>\n",
        "      <td>0.017875</td>\n",
        "      <td>0.019276</td>\n",
        "      <td>0.021776</td>\n",
        "      <td>0.010053</td>\n",
        "      <td>0.017078</td>\n",
        "      <td>0.016114</td>\n",
        "      <td>0.010385</td>\n",
        "      <td>0.001549</td>\n",
        "      <td>0.009887</td>\n",
        "      <td>0.02176</td>\n",
        "      <td>0.016017</td>\n",
        "      <td>0.001447</td>\n",
        "      <td>0.010093</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Austria    Canada   Denmark   Estonia   Germany  Malaysia  \\\n",
        "Date                                                                     \n",
        "2021-01-06  0.017875  0.019276  0.021776  0.010053  0.017078  0.016114   \n",
        "2021-01-07  0.017875  0.019276  0.021776  0.010053  0.017078  0.016114   \n",
        "2021-01-08  0.017875  0.019276  0.021776  0.010053  0.017078  0.016114   \n",
        "2021-01-09  0.017875  0.019276  0.021776  0.010053  0.017078  0.016114   \n",
        "2021-01-10  0.017875  0.019276  0.021776  0.010053  0.017078  0.016114   \n",
        "\n",
        "Country     Netherlands    Norway  Portugal  Romania    Sweden  Switzerland  \\\n",
        "Date                                                                          \n",
        "2021-01-06     0.010385  0.001549  0.009887  0.02176  0.016017     0.001447   \n",
        "2021-01-07     0.010385  0.001549  0.009887  0.02176  0.016017     0.001447   \n",
        "2021-01-08     0.010385  0.001549  0.009887  0.02176  0.016017     0.001447   \n",
        "2021-01-09     0.010385  0.001549  0.009887  0.02176  0.016017     0.001447   \n",
        "2021-01-10     0.010385  0.001549  0.009887  0.02176  0.016017     0.001447   \n",
        "\n",
        "Country     United Kingdom  \n",
        "Date                        \n",
        "2021-01-06        0.010093  \n",
        "2021-01-07        0.010093  \n",
        "2021-01-08        0.010093  \n",
        "2021-01-09        0.010093  \n",
        "2021-01-10        0.010093  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Malaysia</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Norway</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Sweden</th>\n",
        "      <th>Switzerland</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2021-01-06</th>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.00019</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000531</td>\n",
        "      <td>0.000231</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000191</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-07</th>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.00019</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000531</td>\n",
        "      <td>0.000231</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000191</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-08</th>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.00019</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000531</td>\n",
        "      <td>0.000231</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000191</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-09</th>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.00019</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000531</td>\n",
        "      <td>0.000231</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000191</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-10</th>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.00019</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000531</td>\n",
        "      <td>0.000231</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000191</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country     Austria   Canada   Denmark  Estonia   Germany  Malaysia  \\\n",
        "Date                                                                  \n",
        "2021-01-06  0.00015  0.00019  0.000168  0.00023  0.000098  0.000002   \n",
        "2021-01-07  0.00015  0.00019  0.000168  0.00023  0.000098  0.000002   \n",
        "2021-01-08  0.00015  0.00019  0.000168  0.00023  0.000098  0.000002   \n",
        "2021-01-09  0.00015  0.00019  0.000168  0.00023  0.000098  0.000002   \n",
        "2021-01-10  0.00015  0.00019  0.000168  0.00023  0.000098  0.000002   \n",
        "\n",
        "Country     Netherlands    Norway  Portugal   Romania    Sweden  Switzerland  \\\n",
        "Date                                                                           \n",
        "2021-01-06     0.000093  0.000098  0.000098  0.000531  0.000231     0.000098   \n",
        "2021-01-07     0.000093  0.000098  0.000098  0.000531  0.000231     0.000098   \n",
        "2021-01-08     0.000093  0.000098  0.000098  0.000531  0.000231     0.000098   \n",
        "2021-01-09     0.000093  0.000098  0.000098  0.000531  0.000231     0.000098   \n",
        "2021-01-10     0.000093  0.000098  0.000098  0.000531  0.000231     0.000098   \n",
        "\n",
        "Country     United Kingdom  \n",
        "Date                        \n",
        "2021-01-06        0.000191  \n",
        "2021-01-07        0.000191  \n",
        "2021-01-08        0.000191  \n",
        "2021-01-09        0.000191  \n",
        "2021-01-10        0.000191  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Malaysia</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Norway</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Sweden</th>\n",
        "      <th>Switzerland</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2021-01-06</th>\n",
        "      <td>0.00108</td>\n",
        "      <td>0.033029</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.0003</td>\n",
        "      <td>0.000438</td>\n",
        "      <td>0.001652</td>\n",
        "      <td>0.001799</td>\n",
        "      <td>0.000448</td>\n",
        "      <td>0.000434</td>\n",
        "      <td>0.001643</td>\n",
        "      <td>0.000149</td>\n",
        "      <td>0.09156</td>\n",
        "      <td>0.001486</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-07</th>\n",
        "      <td>0.00108</td>\n",
        "      <td>0.033029</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.0003</td>\n",
        "      <td>0.000438</td>\n",
        "      <td>0.001652</td>\n",
        "      <td>0.001799</td>\n",
        "      <td>0.000448</td>\n",
        "      <td>0.000434</td>\n",
        "      <td>0.001643</td>\n",
        "      <td>0.000149</td>\n",
        "      <td>0.09156</td>\n",
        "      <td>0.001486</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-08</th>\n",
        "      <td>0.00108</td>\n",
        "      <td>0.033029</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.0003</td>\n",
        "      <td>0.000438</td>\n",
        "      <td>0.001652</td>\n",
        "      <td>0.001799</td>\n",
        "      <td>0.000448</td>\n",
        "      <td>0.000434</td>\n",
        "      <td>0.001643</td>\n",
        "      <td>0.000149</td>\n",
        "      <td>0.09156</td>\n",
        "      <td>0.001486</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-09</th>\n",
        "      <td>0.00108</td>\n",
        "      <td>0.033029</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.0003</td>\n",
        "      <td>0.000438</td>\n",
        "      <td>0.001652</td>\n",
        "      <td>0.001799</td>\n",
        "      <td>0.000448</td>\n",
        "      <td>0.000434</td>\n",
        "      <td>0.001643</td>\n",
        "      <td>0.000149</td>\n",
        "      <td>0.09156</td>\n",
        "      <td>0.001486</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-10</th>\n",
        "      <td>0.00108</td>\n",
        "      <td>0.033029</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.0003</td>\n",
        "      <td>0.000438</td>\n",
        "      <td>0.001652</td>\n",
        "      <td>0.001799</td>\n",
        "      <td>0.000448</td>\n",
        "      <td>0.000434</td>\n",
        "      <td>0.001643</td>\n",
        "      <td>0.000149</td>\n",
        "      <td>0.09156</td>\n",
        "      <td>0.001486</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country     Austria    Canada   Denmark  Estonia   Germany  Malaysia  \\\n",
        "Date                                                                   \n",
        "2021-01-06  0.00108  0.033029  0.000131   0.0003  0.000438  0.001652   \n",
        "2021-01-07  0.00108  0.033029  0.000131   0.0003  0.000438  0.001652   \n",
        "2021-01-08  0.00108  0.033029  0.000131   0.0003  0.000438  0.001652   \n",
        "2021-01-09  0.00108  0.033029  0.000131   0.0003  0.000438  0.001652   \n",
        "2021-01-10  0.00108  0.033029  0.000131   0.0003  0.000438  0.001652   \n",
        "\n",
        "Country     Netherlands    Norway  Portugal   Romania    Sweden  Switzerland  \\\n",
        "Date                                                                           \n",
        "2021-01-06     0.001799  0.000448  0.000434  0.001643  0.000149      0.09156   \n",
        "2021-01-07     0.001799  0.000448  0.000434  0.001643  0.000149      0.09156   \n",
        "2021-01-08     0.001799  0.000448  0.000434  0.001643  0.000149      0.09156   \n",
        "2021-01-09     0.001799  0.000448  0.000434  0.001643  0.000149      0.09156   \n",
        "2021-01-10     0.001799  0.000448  0.000434  0.001643  0.000149      0.09156   \n",
        "\n",
        "Country     United Kingdom  \n",
        "Date                        \n",
        "2021-01-06        0.001486  \n",
        "2021-01-07        0.001486  \n",
        "2021-01-08        0.001486  \n",
        "2021-01-09        0.001486  \n",
        "2021-01-10        0.001486  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 44758 entries, 0 to 44925\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 44758 non-null  datetime64[ns]\n",
        " 1   Country                              44758 non-null  object        \n",
        " 2   Rt                                   44758 non-null  float64       \n",
        " 3   theta                                44758 non-null  float64       \n",
        " 4   kappa                                44758 non-null  float64       \n",
        " 5   rho                                  44758 non-null  float64       \n",
        " 6   sigma                                44758 non-null  float64       \n",
        " 7   School_closing                       44758 non-null  int64         \n",
        " 8   Workplace_closing                    44758 non-null  int64         \n",
        " 9   Cancel_events                        44758 non-null  int64         \n",
        " 10  Gatherings_restrictions              44758 non-null  int64         \n",
        " 11  Transport_closing                    44758 non-null  int64         \n",
        " 12  Stay_home_restrictions               44758 non-null  int64         \n",
        " 13  Internal_movement_restrictions       44758 non-null  int64         \n",
        " 14  International_movement_restrictions  44758 non-null  int64         \n",
        " 15  Information_campaigns                44758 non-null  int64         \n",
        " 16  Testing_policy                       44758 non-null  int64         \n",
        " 17  Contact_tracing                      44758 non-null  int64         \n",
        " 18  Stringency_index                     44758 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 6.8+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_7b8c2_row0_col0,#T_7b8c2_row1_col1,#T_7b8c2_row2_col2,#T_7b8c2_row3_col3,#T_7b8c2_row4_col4,#T_7b8c2_row5_col5,#T_7b8c2_row6_col6,#T_7b8c2_row7_col7,#T_7b8c2_row8_col8,#T_7b8c2_row9_col9,#T_7b8c2_row10_col10,#T_7b8c2_row11_col11,#T_7b8c2_row12_col12,#T_7b8c2_row13_col13,#T_7b8c2_row14_col14,#T_7b8c2_row15_col15,#T_7b8c2_row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7b8c2_row0_col1,#T_7b8c2_row1_col0{\n",
        "            background-color:  #c0c9e2;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row0_col2,#T_7b8c2_row0_col10,#T_7b8c2_row2_col0,#T_7b8c2_row10_col0{\n",
        "            background-color:  #bdc8e1;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row0_col3,#T_7b8c2_row3_col0{\n",
        "            background-color:  #04639b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7b8c2_row0_col4,#T_7b8c2_row4_col0{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row0_col5,#T_7b8c2_row5_col0{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row0_col6,#T_7b8c2_row1_col5,#T_7b8c2_row5_col1,#T_7b8c2_row6_col0{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row0_col7,#T_7b8c2_row3_col10,#T_7b8c2_row7_col0,#T_7b8c2_row10_col3{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row0_col8,#T_7b8c2_row8_col0{\n",
        "            background-color:  #dbdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row0_col9,#T_7b8c2_row9_col0{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row0_col11,#T_7b8c2_row1_col7,#T_7b8c2_row2_col7,#T_7b8c2_row7_col1,#T_7b8c2_row7_col2,#T_7b8c2_row11_col0,#T_7b8c2_row11_col12,#T_7b8c2_row12_col11{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row0_col12,#T_7b8c2_row12_col0{\n",
        "            background-color:  #f1ebf4;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row0_col13,#T_7b8c2_row8_col15,#T_7b8c2_row13_col0,#T_7b8c2_row15_col8{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row0_col14,#T_7b8c2_row14_col0{\n",
        "            background-color:  #ede7f2;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row0_col15,#T_7b8c2_row15_col0{\n",
        "            background-color:  #dfddec;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row0_col16,#T_7b8c2_row2_col5,#T_7b8c2_row3_col11,#T_7b8c2_row5_col2,#T_7b8c2_row11_col3,#T_7b8c2_row16_col0{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row1_col2,#T_7b8c2_row2_col1{\n",
        "            background-color:  #023f64;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7b8c2_row1_col3,#T_7b8c2_row3_col1{\n",
        "            background-color:  #96b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row1_col4,#T_7b8c2_row3_col6,#T_7b8c2_row4_col1,#T_7b8c2_row6_col3{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row1_col6,#T_7b8c2_row1_col8,#T_7b8c2_row2_col10,#T_7b8c2_row3_col15,#T_7b8c2_row6_col1,#T_7b8c2_row8_col1,#T_7b8c2_row10_col2,#T_7b8c2_row15_col3{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row1_col9,#T_7b8c2_row3_col13,#T_7b8c2_row5_col9,#T_7b8c2_row9_col1,#T_7b8c2_row9_col5,#T_7b8c2_row13_col3{\n",
        "            background-color:  #c9cee4;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row1_col10,#T_7b8c2_row3_col5,#T_7b8c2_row5_col3,#T_7b8c2_row10_col1{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row1_col11,#T_7b8c2_row1_col16,#T_7b8c2_row2_col4,#T_7b8c2_row2_col8,#T_7b8c2_row2_col11,#T_7b8c2_row4_col2,#T_7b8c2_row8_col2,#T_7b8c2_row11_col1,#T_7b8c2_row11_col2,#T_7b8c2_row16_col1{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row1_col12,#T_7b8c2_row12_col1{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row1_col13,#T_7b8c2_row13_col1{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row1_col14,#T_7b8c2_row2_col13,#T_7b8c2_row13_col2,#T_7b8c2_row14_col1{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row1_col15,#T_7b8c2_row15_col1{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row2_col3,#T_7b8c2_row3_col2,#T_7b8c2_row6_col14,#T_7b8c2_row14_col6{\n",
        "            background-color:  #80aed2;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row2_col6,#T_7b8c2_row6_col2{\n",
        "            background-color:  #e2dfee;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row2_col9,#T_7b8c2_row9_col2,#T_7b8c2_row9_col12,#T_7b8c2_row9_col14,#T_7b8c2_row12_col9,#T_7b8c2_row14_col9{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row2_col12,#T_7b8c2_row12_col2{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row2_col14,#T_7b8c2_row2_col16,#T_7b8c2_row9_col15,#T_7b8c2_row14_col2,#T_7b8c2_row15_col9,#T_7b8c2_row16_col2{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row2_col15,#T_7b8c2_row15_col2{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row3_col4,#T_7b8c2_row4_col3{\n",
        "            background-color:  #f6eff7;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row3_col7,#T_7b8c2_row3_col8,#T_7b8c2_row7_col3,#T_7b8c2_row8_col3{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row3_col9,#T_7b8c2_row9_col3{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row3_col12,#T_7b8c2_row12_col3{\n",
        "            background-color:  #f7f0f7;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row3_col14,#T_7b8c2_row14_col3{\n",
        "            background-color:  #e8e4f0;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row3_col16,#T_7b8c2_row16_col3{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row4_col5,#T_7b8c2_row5_col4{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row4_col6,#T_7b8c2_row4_col11,#T_7b8c2_row6_col4,#T_7b8c2_row9_col13,#T_7b8c2_row11_col4,#T_7b8c2_row13_col9{\n",
        "            background-color:  #84b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row4_col7,#T_7b8c2_row4_col9,#T_7b8c2_row7_col4,#T_7b8c2_row9_col4{\n",
        "            background-color:  #89b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row4_col8,#T_7b8c2_row4_col14,#T_7b8c2_row8_col4,#T_7b8c2_row14_col4{\n",
        "            background-color:  #569dc8;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row4_col10,#T_7b8c2_row10_col4{\n",
        "            background-color:  #83afd3;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row4_col12,#T_7b8c2_row8_col12,#T_7b8c2_row12_col4,#T_7b8c2_row12_col8{\n",
        "            background-color:  #5a9ec9;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row4_col13,#T_7b8c2_row6_col12,#T_7b8c2_row12_col6,#T_7b8c2_row13_col4{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row4_col15,#T_7b8c2_row10_col12,#T_7b8c2_row12_col10,#T_7b8c2_row12_col15,#T_7b8c2_row15_col4,#T_7b8c2_row15_col12{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row4_col16,#T_7b8c2_row16_col4{\n",
        "            background-color:  #6da6cd;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row5_col6,#T_7b8c2_row6_col5{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row5_col7,#T_7b8c2_row7_col5{\n",
        "            background-color:  #8fb4d6;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row5_col8,#T_7b8c2_row8_col5{\n",
        "            background-color:  #76aad0;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row5_col10,#T_7b8c2_row7_col10,#T_7b8c2_row10_col5,#T_7b8c2_row10_col7,#T_7b8c2_row10_col13,#T_7b8c2_row13_col10{\n",
        "            background-color:  #509ac6;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row5_col11,#T_7b8c2_row6_col9,#T_7b8c2_row9_col6,#T_7b8c2_row11_col5{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row5_col12,#T_7b8c2_row12_col5{\n",
        "            background-color:  #5c9fc9;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row5_col13,#T_7b8c2_row13_col5{\n",
        "            background-color:  #589ec8;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row5_col14,#T_7b8c2_row14_col5{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row5_col15,#T_7b8c2_row15_col5{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row5_col16,#T_7b8c2_row16_col5{\n",
        "            background-color:  #2081b9;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row6_col7,#T_7b8c2_row7_col6,#T_7b8c2_row11_col13,#T_7b8c2_row13_col11{\n",
        "            background-color:  #6ba5cd;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row6_col8,#T_7b8c2_row8_col6{\n",
        "            background-color:  #05659f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7b8c2_row6_col10,#T_7b8c2_row10_col6,#T_7b8c2_row13_col16,#T_7b8c2_row16_col13{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row6_col11,#T_7b8c2_row11_col6,#T_7b8c2_row13_col14,#T_7b8c2_row14_col13{\n",
        "            background-color:  #4897c4;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row6_col13,#T_7b8c2_row7_col9,#T_7b8c2_row8_col9,#T_7b8c2_row9_col7,#T_7b8c2_row9_col8,#T_7b8c2_row13_col6{\n",
        "            background-color:  #4a98c5;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row6_col15,#T_7b8c2_row15_col6{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row6_col16,#T_7b8c2_row16_col6{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7b8c2_row7_col8,#T_7b8c2_row8_col7,#T_7b8c2_row9_col10,#T_7b8c2_row10_col9{\n",
        "            background-color:  #358fc0;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row7_col11,#T_7b8c2_row11_col7{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7b8c2_row7_col12,#T_7b8c2_row12_col7{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row7_col13,#T_7b8c2_row13_col7{\n",
        "            background-color:  #4295c3;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row7_col14,#T_7b8c2_row11_col15,#T_7b8c2_row14_col7,#T_7b8c2_row15_col11{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row7_col15,#T_7b8c2_row15_col7{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row7_col16,#T_7b8c2_row16_col7{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row8_col10,#T_7b8c2_row10_col8,#T_7b8c2_row12_col13,#T_7b8c2_row13_col12{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row8_col11,#T_7b8c2_row11_col8{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row8_col13,#T_7b8c2_row13_col8{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row8_col14,#T_7b8c2_row14_col8{\n",
        "            background-color:  #7eadd1;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row8_col16,#T_7b8c2_row16_col8{\n",
        "            background-color:  #045788;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7b8c2_row9_col11,#T_7b8c2_row11_col9{\n",
        "            background-color:  #2f8bbe;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row9_col16,#T_7b8c2_row16_col9{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row10_col11,#T_7b8c2_row11_col10{\n",
        "            background-color:  #3d93c2;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row10_col14,#T_7b8c2_row14_col10{\n",
        "            background-color:  #69a5cc;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row10_col15,#T_7b8c2_row15_col10{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row10_col16,#T_7b8c2_row16_col10{\n",
        "            background-color:  #0d75b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7b8c2_row11_col14,#T_7b8c2_row14_col11{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row11_col16,#T_7b8c2_row16_col11{\n",
        "            background-color:  #308cbe;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row12_col14,#T_7b8c2_row14_col12{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row12_col16,#T_7b8c2_row16_col12{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row13_col15,#T_7b8c2_row15_col13{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row14_col15,#T_7b8c2_row15_col14{\n",
        "            background-color:  #4094c3;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row14_col16,#T_7b8c2_row16_col14{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_7b8c2_row15_col16,#T_7b8c2_row16_col15{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_7b8c2_\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_7b8c2_level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_7b8c2_row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_7b8c2_row0_col1\" class=\"data row0 col1\" >-0.083293</td>\n",
        "                        <td id=\"T_7b8c2_row0_col2\" class=\"data row0 col2\" >-0.071019</td>\n",
        "                        <td id=\"T_7b8c2_row0_col3\" class=\"data row0 col3\" >0.725383</td>\n",
        "                        <td id=\"T_7b8c2_row0_col4\" class=\"data row0 col4\" >-0.542206</td>\n",
        "                        <td id=\"T_7b8c2_row0_col5\" class=\"data row0 col5\" >-0.100523</td>\n",
        "                        <td id=\"T_7b8c2_row0_col6\" class=\"data row0 col6\" >-0.051950</td>\n",
        "                        <td id=\"T_7b8c2_row0_col7\" class=\"data row0 col7\" >-0.119560</td>\n",
        "                        <td id=\"T_7b8c2_row0_col8\" class=\"data row0 col8\" >-0.232467</td>\n",
        "                        <td id=\"T_7b8c2_row0_col9\" class=\"data row0 col9\" >-0.055257</td>\n",
        "                        <td id=\"T_7b8c2_row0_col10\" class=\"data row0 col10\" >-0.069010</td>\n",
        "                        <td id=\"T_7b8c2_row0_col11\" class=\"data row0 col11\" >-0.094021</td>\n",
        "                        <td id=\"T_7b8c2_row0_col12\" class=\"data row0 col12\" >-0.397057</td>\n",
        "                        <td id=\"T_7b8c2_row0_col13\" class=\"data row0 col13\" >-0.074141</td>\n",
        "                        <td id=\"T_7b8c2_row0_col14\" class=\"data row0 col14\" >-0.350154</td>\n",
        "                        <td id=\"T_7b8c2_row0_col15\" class=\"data row0 col15\" >-0.258493</td>\n",
        "                        <td id=\"T_7b8c2_row0_col16\" class=\"data row0 col16\" >-0.141147</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7b8c2_level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_7b8c2_row1_col0\" class=\"data row1 col0\" >-0.083293</td>\n",
        "                        <td id=\"T_7b8c2_row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_7b8c2_row1_col2\" class=\"data row1 col2\" >0.952458</td>\n",
        "                        <td id=\"T_7b8c2_row1_col3\" class=\"data row1 col3\" >0.101998</td>\n",
        "                        <td id=\"T_7b8c2_row1_col4\" class=\"data row1 col4\" >-0.183908</td>\n",
        "                        <td id=\"T_7b8c2_row1_col5\" class=\"data row1 col5\" >-0.048634</td>\n",
        "                        <td id=\"T_7b8c2_row1_col6\" class=\"data row1 col6\" >-0.215717</td>\n",
        "                        <td id=\"T_7b8c2_row1_col7\" class=\"data row1 col7\" >-0.093379</td>\n",
        "                        <td id=\"T_7b8c2_row1_col8\" class=\"data row1 col8\" >-0.222247</td>\n",
        "                        <td id=\"T_7b8c2_row1_col9\" class=\"data row1 col9\" >-0.121894</td>\n",
        "                        <td id=\"T_7b8c2_row1_col10\" class=\"data row1 col10\" >-0.194319</td>\n",
        "                        <td id=\"T_7b8c2_row1_col11\" class=\"data row1 col11\" >-0.209000</td>\n",
        "                        <td id=\"T_7b8c2_row1_col12\" class=\"data row1 col12\" >-0.162751</td>\n",
        "                        <td id=\"T_7b8c2_row1_col13\" class=\"data row1 col13\" >-0.292600</td>\n",
        "                        <td id=\"T_7b8c2_row1_col14\" class=\"data row1 col14\" >-0.307569</td>\n",
        "                        <td id=\"T_7b8c2_row1_col15\" class=\"data row1 col15\" >-0.000215</td>\n",
        "                        <td id=\"T_7b8c2_row1_col16\" class=\"data row1 col16\" >-0.209539</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7b8c2_level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_7b8c2_row2_col0\" class=\"data row2 col0\" >-0.071019</td>\n",
        "                        <td id=\"T_7b8c2_row2_col1\" class=\"data row2 col1\" >0.952458</td>\n",
        "                        <td id=\"T_7b8c2_row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_7b8c2_row2_col3\" class=\"data row2 col3\" >0.181352</td>\n",
        "                        <td id=\"T_7b8c2_row2_col4\" class=\"data row2 col4\" >-0.207666</td>\n",
        "                        <td id=\"T_7b8c2_row2_col5\" class=\"data row2 col5\" >-0.141537</td>\n",
        "                        <td id=\"T_7b8c2_row2_col6\" class=\"data row2 col6\" >-0.282352</td>\n",
        "                        <td id=\"T_7b8c2_row2_col7\" class=\"data row2 col7\" >-0.092094</td>\n",
        "                        <td id=\"T_7b8c2_row2_col8\" class=\"data row2 col8\" >-0.208555</td>\n",
        "                        <td id=\"T_7b8c2_row2_col9\" class=\"data row2 col9\" >-0.085781</td>\n",
        "                        <td id=\"T_7b8c2_row2_col10\" class=\"data row2 col10\" >-0.219791</td>\n",
        "                        <td id=\"T_7b8c2_row2_col11\" class=\"data row2 col11\" >-0.205211</td>\n",
        "                        <td id=\"T_7b8c2_row2_col12\" class=\"data row2 col12\" >-0.187186</td>\n",
        "                        <td id=\"T_7b8c2_row2_col13\" class=\"data row2 col13\" >-0.308689</td>\n",
        "                        <td id=\"T_7b8c2_row2_col14\" class=\"data row2 col14\" >-0.242283</td>\n",
        "                        <td id=\"T_7b8c2_row2_col15\" class=\"data row2 col15\" >0.044760</td>\n",
        "                        <td id=\"T_7b8c2_row2_col16\" class=\"data row2 col16\" >-0.242105</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7b8c2_level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_7b8c2_row3_col0\" class=\"data row3 col0\" >0.725383</td>\n",
        "                        <td id=\"T_7b8c2_row3_col1\" class=\"data row3 col1\" >0.101998</td>\n",
        "                        <td id=\"T_7b8c2_row3_col2\" class=\"data row3 col2\" >0.181352</td>\n",
        "                        <td id=\"T_7b8c2_row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_7b8c2_row3_col4\" class=\"data row3 col4\" >-0.448318</td>\n",
        "                        <td id=\"T_7b8c2_row3_col5\" class=\"data row3 col5\" >-0.193409</td>\n",
        "                        <td id=\"T_7b8c2_row3_col6\" class=\"data row3 col6\" >-0.186106</td>\n",
        "                        <td id=\"T_7b8c2_row3_col7\" class=\"data row3 col7\" >-0.263725</td>\n",
        "                        <td id=\"T_7b8c2_row3_col8\" class=\"data row3 col8\" >-0.262422</td>\n",
        "                        <td id=\"T_7b8c2_row3_col9\" class=\"data row3 col9\" >-0.044094</td>\n",
        "                        <td id=\"T_7b8c2_row3_col10\" class=\"data row3 col10\" >-0.119715</td>\n",
        "                        <td id=\"T_7b8c2_row3_col11\" class=\"data row3 col11\" >-0.141370</td>\n",
        "                        <td id=\"T_7b8c2_row3_col12\" class=\"data row3 col12\" >-0.452011</td>\n",
        "                        <td id=\"T_7b8c2_row3_col13\" class=\"data row3 col13\" >-0.125466</td>\n",
        "                        <td id=\"T_7b8c2_row3_col14\" class=\"data row3 col14\" >-0.320353</td>\n",
        "                        <td id=\"T_7b8c2_row3_col15\" class=\"data row3 col15\" >-0.213751</td>\n",
        "                        <td id=\"T_7b8c2_row3_col16\" class=\"data row3 col16\" >-0.203018</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7b8c2_level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_7b8c2_row4_col0\" class=\"data row4 col0\" >-0.542206</td>\n",
        "                        <td id=\"T_7b8c2_row4_col1\" class=\"data row4 col1\" >-0.183908</td>\n",
        "                        <td id=\"T_7b8c2_row4_col2\" class=\"data row4 col2\" >-0.207666</td>\n",
        "                        <td id=\"T_7b8c2_row4_col3\" class=\"data row4 col3\" >-0.448318</td>\n",
        "                        <td id=\"T_7b8c2_row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_7b8c2_row4_col5\" class=\"data row4 col5\" >0.192969</td>\n",
        "                        <td id=\"T_7b8c2_row4_col6\" class=\"data row4 col6\" >0.167746</td>\n",
        "                        <td id=\"T_7b8c2_row4_col7\" class=\"data row4 col7\" >0.147245</td>\n",
        "                        <td id=\"T_7b8c2_row4_col8\" class=\"data row4 col8\" >0.324767</td>\n",
        "                        <td id=\"T_7b8c2_row4_col9\" class=\"data row4 col9\" >0.144596</td>\n",
        "                        <td id=\"T_7b8c2_row4_col10\" class=\"data row4 col10\" >0.171173</td>\n",
        "                        <td id=\"T_7b8c2_row4_col11\" class=\"data row4 col11\" >0.162896</td>\n",
        "                        <td id=\"T_7b8c2_row4_col12\" class=\"data row4 col12\" >0.308220</td>\n",
        "                        <td id=\"T_7b8c2_row4_col13\" class=\"data row4 col13\" >0.234451</td>\n",
        "                        <td id=\"T_7b8c2_row4_col14\" class=\"data row4 col14\" >0.320421</td>\n",
        "                        <td id=\"T_7b8c2_row4_col15\" class=\"data row4 col15\" >0.201642</td>\n",
        "                        <td id=\"T_7b8c2_row4_col16\" class=\"data row4 col16\" >0.252054</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7b8c2_level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_7b8c2_row5_col0\" class=\"data row5 col0\" >-0.100523</td>\n",
        "                        <td id=\"T_7b8c2_row5_col1\" class=\"data row5 col1\" >-0.048634</td>\n",
        "                        <td id=\"T_7b8c2_row5_col2\" class=\"data row5 col2\" >-0.141537</td>\n",
        "                        <td id=\"T_7b8c2_row5_col3\" class=\"data row5 col3\" >-0.193409</td>\n",
        "                        <td id=\"T_7b8c2_row5_col4\" class=\"data row5 col4\" >0.192969</td>\n",
        "                        <td id=\"T_7b8c2_row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_7b8c2_row5_col6\" class=\"data row5 col6\" >0.461399</td>\n",
        "                        <td id=\"T_7b8c2_row5_col7\" class=\"data row5 col7\" >0.120955</td>\n",
        "                        <td id=\"T_7b8c2_row5_col8\" class=\"data row5 col8\" >0.216997</td>\n",
        "                        <td id=\"T_7b8c2_row5_col9\" class=\"data row5 col9\" >-0.122257</td>\n",
        "                        <td id=\"T_7b8c2_row5_col10\" class=\"data row5 col10\" >0.340030</td>\n",
        "                        <td id=\"T_7b8c2_row5_col11\" class=\"data row5 col11\" >0.208593</td>\n",
        "                        <td id=\"T_7b8c2_row5_col12\" class=\"data row5 col12\" >0.301817</td>\n",
        "                        <td id=\"T_7b8c2_row5_col13\" class=\"data row5 col13\" >0.316026</td>\n",
        "                        <td id=\"T_7b8c2_row5_col14\" class=\"data row5 col14\" >0.126749</td>\n",
        "                        <td id=\"T_7b8c2_row5_col15\" class=\"data row5 col15\" >-0.015059</td>\n",
        "                        <td id=\"T_7b8c2_row5_col16\" class=\"data row5 col16\" >0.510041</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7b8c2_level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_7b8c2_row6_col0\" class=\"data row6 col0\" >-0.051950</td>\n",
        "                        <td id=\"T_7b8c2_row6_col1\" class=\"data row6 col1\" >-0.215717</td>\n",
        "                        <td id=\"T_7b8c2_row6_col2\" class=\"data row6 col2\" >-0.282352</td>\n",
        "                        <td id=\"T_7b8c2_row6_col3\" class=\"data row6 col3\" >-0.186106</td>\n",
        "                        <td id=\"T_7b8c2_row6_col4\" class=\"data row6 col4\" >0.167746</td>\n",
        "                        <td id=\"T_7b8c2_row6_col5\" class=\"data row6 col5\" >0.461399</td>\n",
        "                        <td id=\"T_7b8c2_row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_7b8c2_row6_col7\" class=\"data row6 col7\" >0.253052</td>\n",
        "                        <td id=\"T_7b8c2_row6_col8\" class=\"data row6 col8\" >0.705850</td>\n",
        "                        <td id=\"T_7b8c2_row6_col9\" class=\"data row6 col9\" >0.210215</td>\n",
        "                        <td id=\"T_7b8c2_row6_col10\" class=\"data row6 col10\" >0.541995</td>\n",
        "                        <td id=\"T_7b8c2_row6_col11\" class=\"data row6 col11\" >0.361662</td>\n",
        "                        <td id=\"T_7b8c2_row6_col12\" class=\"data row6 col12\" >0.233545</td>\n",
        "                        <td id=\"T_7b8c2_row6_col13\" class=\"data row6 col13\" >0.355730</td>\n",
        "                        <td id=\"T_7b8c2_row6_col14\" class=\"data row6 col14\" >0.186543</td>\n",
        "                        <td id=\"T_7b8c2_row6_col15\" class=\"data row6 col15\" >-0.107118</td>\n",
        "                        <td id=\"T_7b8c2_row6_col16\" class=\"data row6 col16\" >0.787577</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7b8c2_level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_7b8c2_row7_col0\" class=\"data row7 col0\" >-0.119560</td>\n",
        "                        <td id=\"T_7b8c2_row7_col1\" class=\"data row7 col1\" >-0.093379</td>\n",
        "                        <td id=\"T_7b8c2_row7_col2\" class=\"data row7 col2\" >-0.092094</td>\n",
        "                        <td id=\"T_7b8c2_row7_col3\" class=\"data row7 col3\" >-0.263725</td>\n",
        "                        <td id=\"T_7b8c2_row7_col4\" class=\"data row7 col4\" >0.147245</td>\n",
        "                        <td id=\"T_7b8c2_row7_col5\" class=\"data row7 col5\" >0.120955</td>\n",
        "                        <td id=\"T_7b8c2_row7_col6\" class=\"data row7 col6\" >0.253052</td>\n",
        "                        <td id=\"T_7b8c2_row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_7b8c2_row7_col8\" class=\"data row7 col8\" >0.426536</td>\n",
        "                        <td id=\"T_7b8c2_row7_col9\" class=\"data row7 col9\" >0.357800</td>\n",
        "                        <td id=\"T_7b8c2_row7_col10\" class=\"data row7 col10\" >0.342424</td>\n",
        "                        <td id=\"T_7b8c2_row7_col11\" class=\"data row7 col11\" >0.643218</td>\n",
        "                        <td id=\"T_7b8c2_row7_col12\" class=\"data row7 col12\" >0.141711</td>\n",
        "                        <td id=\"T_7b8c2_row7_col13\" class=\"data row7 col13\" >0.380046</td>\n",
        "                        <td id=\"T_7b8c2_row7_col14\" class=\"data row7 col14\" >-0.028233</td>\n",
        "                        <td id=\"T_7b8c2_row7_col15\" class=\"data row7 col15\" >0.092053</td>\n",
        "                        <td id=\"T_7b8c2_row7_col16\" class=\"data row7 col16\" >0.407216</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7b8c2_level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_7b8c2_row8_col0\" class=\"data row8 col0\" >-0.232467</td>\n",
        "                        <td id=\"T_7b8c2_row8_col1\" class=\"data row8 col1\" >-0.222247</td>\n",
        "                        <td id=\"T_7b8c2_row8_col2\" class=\"data row8 col2\" >-0.208555</td>\n",
        "                        <td id=\"T_7b8c2_row8_col3\" class=\"data row8 col3\" >-0.262422</td>\n",
        "                        <td id=\"T_7b8c2_row8_col4\" class=\"data row8 col4\" >0.324767</td>\n",
        "                        <td id=\"T_7b8c2_row8_col5\" class=\"data row8 col5\" >0.216997</td>\n",
        "                        <td id=\"T_7b8c2_row8_col6\" class=\"data row8 col6\" >0.705850</td>\n",
        "                        <td id=\"T_7b8c2_row8_col7\" class=\"data row8 col7\" >0.426536</td>\n",
        "                        <td id=\"T_7b8c2_row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_7b8c2_row8_col9\" class=\"data row8 col9\" >0.356222</td>\n",
        "                        <td id=\"T_7b8c2_row8_col10\" class=\"data row8 col10\" >0.428359</td>\n",
        "                        <td id=\"T_7b8c2_row8_col11\" class=\"data row8 col11\" >0.466965</td>\n",
        "                        <td id=\"T_7b8c2_row8_col12\" class=\"data row8 col12\" >0.311718</td>\n",
        "                        <td id=\"T_7b8c2_row8_col13\" class=\"data row8 col13\" >0.418634</td>\n",
        "                        <td id=\"T_7b8c2_row8_col14\" class=\"data row8 col14\" >0.188588</td>\n",
        "                        <td id=\"T_7b8c2_row8_col15\" class=\"data row8 col15\" >-0.076040</td>\n",
        "                        <td id=\"T_7b8c2_row8_col16\" class=\"data row8 col16\" >0.822259</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7b8c2_level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_7b8c2_row9_col0\" class=\"data row9 col0\" >-0.055257</td>\n",
        "                        <td id=\"T_7b8c2_row9_col1\" class=\"data row9 col1\" >-0.121894</td>\n",
        "                        <td id=\"T_7b8c2_row9_col2\" class=\"data row9 col2\" >-0.085781</td>\n",
        "                        <td id=\"T_7b8c2_row9_col3\" class=\"data row9 col3\" >-0.044094</td>\n",
        "                        <td id=\"T_7b8c2_row9_col4\" class=\"data row9 col4\" >0.144596</td>\n",
        "                        <td id=\"T_7b8c2_row9_col5\" class=\"data row9 col5\" >-0.122257</td>\n",
        "                        <td id=\"T_7b8c2_row9_col6\" class=\"data row9 col6\" >0.210215</td>\n",
        "                        <td id=\"T_7b8c2_row9_col7\" class=\"data row9 col7\" >0.357800</td>\n",
        "                        <td id=\"T_7b8c2_row9_col8\" class=\"data row9 col8\" >0.356222</td>\n",
        "                        <td id=\"T_7b8c2_row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_7b8c2_row9_col10\" class=\"data row9 col10\" >0.426417</td>\n",
        "                        <td id=\"T_7b8c2_row9_col11\" class=\"data row9 col11\" >0.446792</td>\n",
        "                        <td id=\"T_7b8c2_row9_col12\" class=\"data row9 col12\" >-0.086052</td>\n",
        "                        <td id=\"T_7b8c2_row9_col13\" class=\"data row9 col13\" >0.167902</td>\n",
        "                        <td id=\"T_7b8c2_row9_col14\" class=\"data row9 col14\" >-0.085123</td>\n",
        "                        <td id=\"T_7b8c2_row9_col15\" class=\"data row9 col15\" >-0.245719</td>\n",
        "                        <td id=\"T_7b8c2_row9_col16\" class=\"data row9 col16\" >0.413840</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7b8c2_level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_7b8c2_row10_col0\" class=\"data row10 col0\" >-0.069010</td>\n",
        "                        <td id=\"T_7b8c2_row10_col1\" class=\"data row10 col1\" >-0.194319</td>\n",
        "                        <td id=\"T_7b8c2_row10_col2\" class=\"data row10 col2\" >-0.219791</td>\n",
        "                        <td id=\"T_7b8c2_row10_col3\" class=\"data row10 col3\" >-0.119715</td>\n",
        "                        <td id=\"T_7b8c2_row10_col4\" class=\"data row10 col4\" >0.171173</td>\n",
        "                        <td id=\"T_7b8c2_row10_col5\" class=\"data row10 col5\" >0.340030</td>\n",
        "                        <td id=\"T_7b8c2_row10_col6\" class=\"data row10 col6\" >0.541995</td>\n",
        "                        <td id=\"T_7b8c2_row10_col7\" class=\"data row10 col7\" >0.342424</td>\n",
        "                        <td id=\"T_7b8c2_row10_col8\" class=\"data row10 col8\" >0.428359</td>\n",
        "                        <td id=\"T_7b8c2_row10_col9\" class=\"data row10 col9\" >0.426417</td>\n",
        "                        <td id=\"T_7b8c2_row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_7b8c2_row10_col11\" class=\"data row10 col11\" >0.400706</td>\n",
        "                        <td id=\"T_7b8c2_row10_col12\" class=\"data row10 col12\" >0.201202</td>\n",
        "                        <td id=\"T_7b8c2_row10_col13\" class=\"data row10 col13\" >0.342550</td>\n",
        "                        <td id=\"T_7b8c2_row10_col14\" class=\"data row10 col14\" >0.264305</td>\n",
        "                        <td id=\"T_7b8c2_row10_col15\" class=\"data row10 col15\" >-0.036598</td>\n",
        "                        <td id=\"T_7b8c2_row10_col16\" class=\"data row10 col16\" >0.579134</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7b8c2_level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_7b8c2_row11_col0\" class=\"data row11 col0\" >-0.094021</td>\n",
        "                        <td id=\"T_7b8c2_row11_col1\" class=\"data row11 col1\" >-0.209000</td>\n",
        "                        <td id=\"T_7b8c2_row11_col2\" class=\"data row11 col2\" >-0.205211</td>\n",
        "                        <td id=\"T_7b8c2_row11_col3\" class=\"data row11 col3\" >-0.141370</td>\n",
        "                        <td id=\"T_7b8c2_row11_col4\" class=\"data row11 col4\" >0.162896</td>\n",
        "                        <td id=\"T_7b8c2_row11_col5\" class=\"data row11 col5\" >0.208593</td>\n",
        "                        <td id=\"T_7b8c2_row11_col6\" class=\"data row11 col6\" >0.361662</td>\n",
        "                        <td id=\"T_7b8c2_row11_col7\" class=\"data row11 col7\" >0.643218</td>\n",
        "                        <td id=\"T_7b8c2_row11_col8\" class=\"data row11 col8\" >0.466965</td>\n",
        "                        <td id=\"T_7b8c2_row11_col9\" class=\"data row11 col9\" >0.446792</td>\n",
        "                        <td id=\"T_7b8c2_row11_col10\" class=\"data row11 col10\" >0.400706</td>\n",
        "                        <td id=\"T_7b8c2_row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_7b8c2_row11_col12\" class=\"data row11 col12\" >-0.095206</td>\n",
        "                        <td id=\"T_7b8c2_row11_col13\" class=\"data row11 col13\" >0.258476</td>\n",
        "                        <td id=\"T_7b8c2_row11_col14\" class=\"data row11 col14\" >-0.011425</td>\n",
        "                        <td id=\"T_7b8c2_row11_col15\" class=\"data row11 col15\" >-0.027487</td>\n",
        "                        <td id=\"T_7b8c2_row11_col16\" class=\"data row11 col16\" >0.444301</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7b8c2_level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_7b8c2_row12_col0\" class=\"data row12 col0\" >-0.397057</td>\n",
        "                        <td id=\"T_7b8c2_row12_col1\" class=\"data row12 col1\" >-0.162751</td>\n",
        "                        <td id=\"T_7b8c2_row12_col2\" class=\"data row12 col2\" >-0.187186</td>\n",
        "                        <td id=\"T_7b8c2_row12_col3\" class=\"data row12 col3\" >-0.452011</td>\n",
        "                        <td id=\"T_7b8c2_row12_col4\" class=\"data row12 col4\" >0.308220</td>\n",
        "                        <td id=\"T_7b8c2_row12_col5\" class=\"data row12 col5\" >0.301817</td>\n",
        "                        <td id=\"T_7b8c2_row12_col6\" class=\"data row12 col6\" >0.233545</td>\n",
        "                        <td id=\"T_7b8c2_row12_col7\" class=\"data row12 col7\" >0.141711</td>\n",
        "                        <td id=\"T_7b8c2_row12_col8\" class=\"data row12 col8\" >0.311718</td>\n",
        "                        <td id=\"T_7b8c2_row12_col9\" class=\"data row12 col9\" >-0.086052</td>\n",
        "                        <td id=\"T_7b8c2_row12_col10\" class=\"data row12 col10\" >0.201202</td>\n",
        "                        <td id=\"T_7b8c2_row12_col11\" class=\"data row12 col11\" >-0.095206</td>\n",
        "                        <td id=\"T_7b8c2_row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_7b8c2_row12_col13\" class=\"data row12 col13\" >0.429037</td>\n",
        "                        <td id=\"T_7b8c2_row12_col14\" class=\"data row12 col14\" >0.478447</td>\n",
        "                        <td id=\"T_7b8c2_row12_col15\" class=\"data row12 col15\" >0.199889</td>\n",
        "                        <td id=\"T_7b8c2_row12_col16\" class=\"data row12 col16\" >0.396911</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7b8c2_level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_7b8c2_row13_col0\" class=\"data row13 col0\" >-0.074141</td>\n",
        "                        <td id=\"T_7b8c2_row13_col1\" class=\"data row13 col1\" >-0.292600</td>\n",
        "                        <td id=\"T_7b8c2_row13_col2\" class=\"data row13 col2\" >-0.308689</td>\n",
        "                        <td id=\"T_7b8c2_row13_col3\" class=\"data row13 col3\" >-0.125466</td>\n",
        "                        <td id=\"T_7b8c2_row13_col4\" class=\"data row13 col4\" >0.234451</td>\n",
        "                        <td id=\"T_7b8c2_row13_col5\" class=\"data row13 col5\" >0.316026</td>\n",
        "                        <td id=\"T_7b8c2_row13_col6\" class=\"data row13 col6\" >0.355730</td>\n",
        "                        <td id=\"T_7b8c2_row13_col7\" class=\"data row13 col7\" >0.380046</td>\n",
        "                        <td id=\"T_7b8c2_row13_col8\" class=\"data row13 col8\" >0.418634</td>\n",
        "                        <td id=\"T_7b8c2_row13_col9\" class=\"data row13 col9\" >0.167902</td>\n",
        "                        <td id=\"T_7b8c2_row13_col10\" class=\"data row13 col10\" >0.342550</td>\n",
        "                        <td id=\"T_7b8c2_row13_col11\" class=\"data row13 col11\" >0.258476</td>\n",
        "                        <td id=\"T_7b8c2_row13_col12\" class=\"data row13 col12\" >0.429037</td>\n",
        "                        <td id=\"T_7b8c2_row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_7b8c2_row13_col14\" class=\"data row13 col14\" >0.365403</td>\n",
        "                        <td id=\"T_7b8c2_row13_col15\" class=\"data row13 col15\" >0.160206</td>\n",
        "                        <td id=\"T_7b8c2_row13_col16\" class=\"data row13 col16\" >0.540465</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7b8c2_level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_7b8c2_row14_col0\" class=\"data row14 col0\" >-0.350154</td>\n",
        "                        <td id=\"T_7b8c2_row14_col1\" class=\"data row14 col1\" >-0.307569</td>\n",
        "                        <td id=\"T_7b8c2_row14_col2\" class=\"data row14 col2\" >-0.242283</td>\n",
        "                        <td id=\"T_7b8c2_row14_col3\" class=\"data row14 col3\" >-0.320353</td>\n",
        "                        <td id=\"T_7b8c2_row14_col4\" class=\"data row14 col4\" >0.320421</td>\n",
        "                        <td id=\"T_7b8c2_row14_col5\" class=\"data row14 col5\" >0.126749</td>\n",
        "                        <td id=\"T_7b8c2_row14_col6\" class=\"data row14 col6\" >0.186543</td>\n",
        "                        <td id=\"T_7b8c2_row14_col7\" class=\"data row14 col7\" >-0.028233</td>\n",
        "                        <td id=\"T_7b8c2_row14_col8\" class=\"data row14 col8\" >0.188588</td>\n",
        "                        <td id=\"T_7b8c2_row14_col9\" class=\"data row14 col9\" >-0.085123</td>\n",
        "                        <td id=\"T_7b8c2_row14_col10\" class=\"data row14 col10\" >0.264305</td>\n",
        "                        <td id=\"T_7b8c2_row14_col11\" class=\"data row14 col11\" >-0.011425</td>\n",
        "                        <td id=\"T_7b8c2_row14_col12\" class=\"data row14 col12\" >0.478447</td>\n",
        "                        <td id=\"T_7b8c2_row14_col13\" class=\"data row14 col13\" >0.365403</td>\n",
        "                        <td id=\"T_7b8c2_row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_7b8c2_row14_col15\" class=\"data row14 col15\" >0.387113</td>\n",
        "                        <td id=\"T_7b8c2_row14_col16\" class=\"data row14 col16\" >0.152629</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7b8c2_level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_7b8c2_row15_col0\" class=\"data row15 col0\" >-0.258493</td>\n",
        "                        <td id=\"T_7b8c2_row15_col1\" class=\"data row15 col1\" >-0.000215</td>\n",
        "                        <td id=\"T_7b8c2_row15_col2\" class=\"data row15 col2\" >0.044760</td>\n",
        "                        <td id=\"T_7b8c2_row15_col3\" class=\"data row15 col3\" >-0.213751</td>\n",
        "                        <td id=\"T_7b8c2_row15_col4\" class=\"data row15 col4\" >0.201642</td>\n",
        "                        <td id=\"T_7b8c2_row15_col5\" class=\"data row15 col5\" >-0.015059</td>\n",
        "                        <td id=\"T_7b8c2_row15_col6\" class=\"data row15 col6\" >-0.107118</td>\n",
        "                        <td id=\"T_7b8c2_row15_col7\" class=\"data row15 col7\" >0.092053</td>\n",
        "                        <td id=\"T_7b8c2_row15_col8\" class=\"data row15 col8\" >-0.076040</td>\n",
        "                        <td id=\"T_7b8c2_row15_col9\" class=\"data row15 col9\" >-0.245719</td>\n",
        "                        <td id=\"T_7b8c2_row15_col10\" class=\"data row15 col10\" >-0.036598</td>\n",
        "                        <td id=\"T_7b8c2_row15_col11\" class=\"data row15 col11\" >-0.027487</td>\n",
        "                        <td id=\"T_7b8c2_row15_col12\" class=\"data row15 col12\" >0.199889</td>\n",
        "                        <td id=\"T_7b8c2_row15_col13\" class=\"data row15 col13\" >0.160206</td>\n",
        "                        <td id=\"T_7b8c2_row15_col14\" class=\"data row15 col14\" >0.387113</td>\n",
        "                        <td id=\"T_7b8c2_row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_7b8c2_row15_col16\" class=\"data row15 col16\" >-0.224203</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7b8c2_level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_7b8c2_row16_col0\" class=\"data row16 col0\" >-0.141147</td>\n",
        "                        <td id=\"T_7b8c2_row16_col1\" class=\"data row16 col1\" >-0.209539</td>\n",
        "                        <td id=\"T_7b8c2_row16_col2\" class=\"data row16 col2\" >-0.242105</td>\n",
        "                        <td id=\"T_7b8c2_row16_col3\" class=\"data row16 col3\" >-0.203018</td>\n",
        "                        <td id=\"T_7b8c2_row16_col4\" class=\"data row16 col4\" >0.252054</td>\n",
        "                        <td id=\"T_7b8c2_row16_col5\" class=\"data row16 col5\" >0.510041</td>\n",
        "                        <td id=\"T_7b8c2_row16_col6\" class=\"data row16 col6\" >0.787577</td>\n",
        "                        <td id=\"T_7b8c2_row16_col7\" class=\"data row16 col7\" >0.407216</td>\n",
        "                        <td id=\"T_7b8c2_row16_col8\" class=\"data row16 col8\" >0.822259</td>\n",
        "                        <td id=\"T_7b8c2_row16_col9\" class=\"data row16 col9\" >0.413840</td>\n",
        "                        <td id=\"T_7b8c2_row16_col10\" class=\"data row16 col10\" >0.579134</td>\n",
        "                        <td id=\"T_7b8c2_row16_col11\" class=\"data row16 col11\" >0.444301</td>\n",
        "                        <td id=\"T_7b8c2_row16_col12\" class=\"data row16 col12\" >0.396911</td>\n",
        "                        <td id=\"T_7b8c2_row16_col13\" class=\"data row16 col13\" >0.540465</td>\n",
        "                        <td id=\"T_7b8c2_row16_col14\" class=\"data row16 col14\" >0.152629</td>\n",
        "                        <td id=\"T_7b8c2_row16_col15\" class=\"data row16 col15\" >-0.224203</td>\n",
        "                        <td id=\"T_7b8c2_row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f0a78be9dc0>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "iVBORw0KGgoAAAANSUhEUgAAAfYAAAETCAYAAADEYiSNAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/Il7ecAAAACXBIWXMAAAsTAAALEwEAmpwYAABaEElEQVR4nO2dd5wV1fn/359lQRAQLNgLFuwFaXZFo8YORo29RCPRb2KJsScmmkQx/qyxBktEE6MGC7bYIdiRptgrVkQwooC03X1+f5wzu7N37929u3vvlrvPm9dlZ86cOeeZM3PvM88pzyMzw3Ecx3Gc0qCstQVwHMdxHKdwuGJ3HMdxnBLCFbvjOI7jlBCu2B3HcRynhHDF7jiO4zglhCt2x3Ecxykh2qVilzRe0s+beO7akuZL6lRouVJ1XCjpH/Ucf1PS0CLUu4qkCZLmSbqi0OXHOo6U9GQxym5pJO0k6d1mnG+SNiikTIVEUt8oY3lry5IPkmZI2r0I5d4k6YJCl9uSNPSb4jhpWk2xxy/xwqhkv5J0u6QeRaqn+sfCzD41sx5mVlnouvLFzDYzs/FFKHoEMAdYzsx+k3lQ0pqS7pM0R9J3kt6QdFw8lpcSMLN/mtmeRZC9xTGz58xso9aWwykcko6T9Hw6zcxOMrM/tZZMjtPStLbFvr+Z9QD6A1sD57WuOO2edYC3LLfXoTuBz2K+FYGjgVn5Ft5eLD+n8RT63vqz0nbxe1P6tLZiB8DMvgKeICh4ACRtK+lFSXMlvZar61rS+pKelfRNtET/Kal3PHYnsDbwcOwZODvTMpW0uqSHJP1P0geSTkyVfaGkeyXdEbu335Q0KHX8HElfxGPvSvpRSrQu9ZxX3YsQ6xgj6Z6Yd4qkrXK1laTtJb0aLe5XJW0f028HjgXOjtearUtzMHC7mS0wswozm2pm/4nHJsS/c+P520Xr5wVJV0n6Brgw0yKKbXmSpPfjvbpekuKxTpKuiPflY0m/ymj7XpJulTQztuOfFYdIknokXS7p23j+3ql6V5D0d0lfxuMPxvQ3JO2fytc51r91lrYcKunzjPtypqTXY/veI6lr6vhZUdYvJR2fUdYyUdZPJc1S6P7tFo89ptTQiKS7Jd2W4/4OkfRSbMuZkq6T1KUR7X15vN6PgH2z1ZFxvedIeh1YIKlc9XzvFIbARkqaKOl7SWMlrRCPJd+rEyR9CjwrqUzS7yR9Iulrhe9Dr1R5R8dj30j6bYZst0v6cz33ai1J90uaHc+/TtImwE3AdvEZnpujrBMVvuv/U/jur55P+2Zpv4Z+H2oN1aTlSK5H4Tfp63ivh0vaR9J7UbbzM6rsqhy/Ewq/Y/fF9vhY0qkZco6R9A9J3wPHZbsep4Qws1b5ADOA3eP2msB04Jq4vwbwDbAP4eVjj7jfJx4fD/w8bm8Qjy8D9CEoqKuz1RP3+wIGlMf9CcANQFfCi8VsYLd47EJgUZSjEzASeDke24hg/a6eKnf9hs7Lcu0XAkuBg4HOwJnAx0DnLG22AvAtwdIuBw6P+yvG47cDf66nzZ8GXgAOA9bOOFarXWLacUAFcEqsr1tMez6Vx4BHgN6El6jZwF7x2EnAW/H+Lh/rT7f9A8DfgO7AysBE4BepupcCJ8Y2PBn4ElA8/ihwTyy3M7BLTD8buCcl3zBgeo72GAp8nnFfJgKrx7Z+GzgpHtuL0LuxeZT3rngtG8TjVwEPxfN6Ag8DI+OxVYGvgd2AI4GPgJ45ZBoIbBvbu2+U4fRGtPc7wFpRjnGZ9zTLd3BazN+N/L53X6Ta4D7gHxnPzx3xWDfgeOADYD2gB3A/cGfMvykwH9iZ8N29kvCsJd+L20k9y+l7FZ+H12Kbdyd8d3dMPTfPZ1xndVnxHswBBsR6rwUm5NO+WdrvQur/nlc/H1nkGBqv9/eE5/fEWNddhOdnM2AhsG5DvxPxXk2OZXWJ7f0R8OOMc4fHvN1a63ffPy3zab2Kw4/KfGBe/AI8A/SOx85JfgBS+Z8Ajo3b44mKPUu5w4GpGfVkVeyEH7RKUj+y8ct5e9y+EHg6dWxTYGHc3oDwY707GUq4vvMyZYp50z8GZcBMYKcs13Y0MDEj7SXguLhd/cORo22WBy4F3ozXPQ0YnNkuqfzHAZ9mlHEcdRX7jqn9e4Fz4/azREUd93dPtf0qwOL0jwzhRWVcqp4PUseWjeeuCqwGVAHLZ7nG1eMztVzcHwOcnaM9hlJXsR+V2r8MuClu3wZcmjq2YZRnA0DAAuKLXTy+HfBxav8gwovgnHR75fE9OR14oBHtfVLq2J6Z9zTLd/D41H4+37t0G2wKLCEoteT5WS91/Bng/1L7GxEUTDlBCd2dOtY9lpWPYt+OoATrXBcNK/ZbgctSx3pEmfo21L5Z6rqQ+r/nDSn2hUCnuN8z5t8mlX8yMLyh3wlgG+p+T88D/p46d0K2a/BPaX5auyt+uJn1JDzkGwMrxfR1gENiV9jc2KW2I+EHvRYKM8HvVujK/R74R6qchlgd+J+ZzUulfUKwXBK+Sm3/QOgOKzezDwg/uhcCX0cZVm/ovBxyfJZsmFkV8HmULZu8n2SkZcqbEzP71szONbPNCIp1GvBgrq7GTNnqIfNak0mQq2ecn95eh2BtzEzd478RLPc65ZrZD3GzB+GF7H9m9m2mIGb2JaFX4iCFIZm9gX/mcQ2NvZb0fehDePGYnLqWx2N6wsMEBfiumdWa3JVG0oaSHlGYUPo9cAl1n+emyJiLzHvS0Pcus/zOGfKlj2c+r59Q81JXS1YzW0DoHciHtYBPzKwiz/xpaslkZvNjvfV95+ub1NuY73km31jNJN6F8W96zsvCjLpz/U6sA6yecd/OJ7RznXOd0qe1FTsAZvZfwtvs5THpM4Ll0Dv16W5ml2Y5/RLCm+4WZrYccBTBgqouvp6qvwRWkNQzlbY2obsxH7nvMrMdCV8sA/6Sz3lZWCvZkFRG6Lr+Moe862Sk5S1vGjObQ2jvpNs5VzvV134NMZNwLQlrpbY/I1jsK6Xu8XLxpaMhPiPct945jo8mPAeHAC+ZWaPbJwszqS3/2qntOYQf4c1S19LLwsTQhIsJ3eqrSTq8nnpuJHSn94vP8/nUfp6bKmMu0vc3n+9dZvlLCdefrbzM53VtQvfzrExZJS1LmNCZsIDwspSwaoaca+dQoA09r7VkktQ91luIZySTH8h9DU0h1+/EZ4TeofR962lm+6TObc732GlntAnFHrka2CNOCPkHsL+kHytMCOoaJ5usmeW8noQu/e8krQGclXF8FmHMqQ5m9hnwIjAy1rElcEKsv14kbSRpN0nLEMbZFhK6h5vCQEk/iT9UpxMU3stZ8j0GbCjpCIWJTocSuv8eyacSSX+RtHk8tydh3PoDM/uG0LVZRY62aiL3AqdJWiMq4XOSA2Y2E3gSuELScgoTrdaXtEtDhcZz/wPcIGl5hQlyO6eyPEgYQz2NMOZbqGs5TtKmUQn9ISVPFXAzcJWklQHiNf84bu8M/Aw4hjDB8dr4rGajJ/A9MF/SxoR71BgZT1VY1rg8cG6jrjC/791RqTb4IzDGci8d/Rfwa0nrKixlvYQw/6GCMESyn6QdFSYH/pHav0fTgH0UJkmuSvheJEwkvBhcKql7lHOHeGwWsKZSEw6zyPQzSf3jd/cS4BUzm5FH+zSWacARsS33Ahp8thsg1+/ERGCewkTIbrG+zSUNbmZ9TjulzSh2M5tN+BH+fVS4wwjWymzCG+lZZJf3IsKP+HeECVX3ZxwfCfwudlGdmeX8wwnjg18SJnP9wcyezkPkZQjj1XMI3XEr0/TlemOBQ6mZGPcTM1uamSkq4P2A3xC6D88G9ovWdz4sS7jGuYTJNesAB8SyfyBYlS/Ettq2ideS5maC8n4dmEp4MakgjO9DUHRdCBPsviX82NcZbsnB0QRr8R3CXIfTkwNmtpAwsWtd6j4PTcLC6oGrCePYH8S/ac6J6S/HLvSngY0kLUd4rn9lZl+Y2XOEcd6/5xgCORM4gjBP4GbCBMF8uZkwJv4aMIVGXnue37s7Cb1rXxEmrZ1Kbm6L+ScQJnotIkzExMzeBH5JmCw2k3D/P0+de2e8jhmEZ6i6HeKLxP6E+Q2fxvMOjYefJcwh+UpSne9F/G5fQHg+ZgLrEyaTFoPTopxzCZMmH2xmeVl/J2J77EeY/Psx4TfpFqBXM+tz2inJDGOnlZB0IWGCzVGtLUuxUViudpOZZQ4nFKOu3wMbdoR2bSkkjSfMgr+ltWVxHCc3bcZid0qP2C24T+z6X4PQff1AC9S7AmFIZVSx63Icx2lruGJ3iokIQyXfErri3yYscypehcHB0GfAf8xsQkP5HcdxSg3vinccx3GcEsItdsdxHMcpIVyxO47jOE4J0Saj/Ky00krWt2/f1hbDcRynXTF58uQ5Ztan4ZxOKdMmFXvfvn2ZNGlSa4vhOI7TrpCUjxthp8TxrnjHcRzHKSFcsTuO4zhOCeGK3XEcx3FKCFfsjuM4jlNCuGJ3HMdxnBLCFbvTphh9x0BG3zGwQGUNYPQdAwpSluPkwp8zp63hit1xHMdxSog26St+0KBB5uvYOxY1VnryPIZQ5cceM7kJZWW3no49ZkoTJHOc7LTF50zSZDMb1GoCOG2ColnskjaSNC31+V7S6ZJWkPSUpPfj3+WLJYPjOI7jdDRaxGKX1An4AtgG+CXwPzO7VNK5wPJmdk46v1vsHZfEcm+KpV63rAGxLLfUneLRlp4zt9gdaLkx9h8BH5rZJ8AwYHRMHw0MbyEZHMdxHKfkaSmL/TZgipldJ2mumfWO6QK+TfYT3GJ3HMdpPG6xO9ACFrukLsABwL8zj1l4q6jzZjF79mwGDRpU/Rk1alSxxXQcx3GckqAlorvtTbDWZ8X9WZJWM7OZklYDvs48oU+fPh7dzXEcx3GaQEuMsR8O/Cu1/xBwbNw+FhjbAjI4juM4ToegqIpdUndgD+D+VPKlwB6S3gd2j/uO4ziO4xSAonbFm9kCYMWMtG8Is+Qdx3Ecxykw7lLWcRzHcUoIV+yO4ziOU0K4Ynccx3GcEsIVu+M4juOUEK7YHcdxHKeEcMXuOI7jtBiShksySRs34/xN6zl+kqRjmi5h+8cVu+M4jtOSHA48H/82heFAVsUuqdzMbjKzO5pYdknQEi5lHcdxnHbGojMuOwK4BFgb+BQ4v+uVZ9/VnDIl9QB2BHYFHgb+IGkocKaZ7RfzXAdMMrPbJV1KiDVSATxJcHZ2ALCLpN8BBwG3AtNiuf+S1BOYb2aXSzoRGAF0AT4AjjazH5pzDe0Bt9gdx3GcWkSlfjOwDqD49+aY3hyGAY+b2XvAN5IG5sooaUXgQGAzM9sS+LOZvUhwS36WmfU3sw9j9i5mNsjMrsgo5n4zG2xmWwFvAyc0U/52gSt2x3EcJ5NLgGUz0paN6c3hcODuuH039XfHfwcsAm6V9BOgPkv7nhzpm0t6TtJ04Ehgs0bK2y7xrnjHcRwnk7Ubmd4gklYAdgO2kGRAJ0LY7rHUNjK7AphZhaQhBBfkBwO/iudnY0GO9NuB4Wb2mqTjgKFNlb894Ra74ziOk8mnjUzPh4OBO81sHTPra2ZrAR8T9NCmkpaR1JsYSySOx/cys8eAXwNbxXLmAT3zrLMnMFNSZ4LF3iFwxe44juNkcj51u75/iOlN5XDggYy0+4DDgHuBN+LfqfFYT+ARSa8TZtGfEdPvBs6SNFXS+g3UeQHwCvAC8E4zZG9XyMxaW4Y6DBo0yCZNmtTaYjiO47QrJE02s0GFKKsYs+KdlsHH2B3HcZw6RCXuirwd4l3xjuM4jlNCuGJ3HMdxnBLCFbvjOI7jlBCu2B3HcRynhCiqYpfUW9IYSe9IelvSdpJWkPSUpPfj3+WLKYPjOI7jdCSKbbFfQ/ALvDHBucDbwLnAM2bWD3gm7juO4zgljqTfSnpT0uuSpknapoBlzy9UWe2doi13k9QL2Bk4DsDMlgBLJA2jxq3faGA8cE6x5HAcx3FaH0nbAfsBA8xssaSVCFHXnAJTTIt9XWA28PfoIegWSd2BVcxsZszzFbBK5omzZ89m0KBB1Z9Ro0YVUUzHcRwnkzkXDTxizkUDZ8y5aGBV/NvcyG6rAXPMbDGAmc0B1pB0P4CkYZIWSuoiqaukj2L6+pIelzQ5BnTZOKavK+klSdMl/TldkaSzJL0aewYuiml945DwzbHX4ElJ3Zp5TW2SYir2cmAAcKOZbU1w0l+r292C27s6ru/69OnDpEmTqj8jRowoopiO4zhOmqjE64RtbaZyfxJYS9J7km6QtAvBfWz/eHwnglvZwcA2BFewAKOAU8xsIHAmcENMv4agX7YAEmMRSXsC/YAhseyBknaOh/sB15vZZsBcQjz3kqOYiv1z4HMzS27OGIKinyVpNYD49+siyuA4juM0noKHbTWz+cBAYAShN/ce4CjgQ0mbEBTxlYQh3J2A52IgmO2Bf0uaBvyNYPkD7AD8K27fmapqz/iZCkwBNiYodICPzWxa3J4M9G3q9bRlijbGbmZfSfpM0kZm9i4hYs9b8XMscGn8O7ZYMjiO4zhNouBhWwHMrJIwr2p8jJF+LDAB2BtYCjxNCLXaCTiLYHzONbP+uYrMkiZgpJn9rVai1BdYnEqqBLwrvgmcAvwzRufpT3jbuxTYQ9L7wO5x33Ecx2k7FDxsq6SNJPVLJfUHPgGeA04HXjKz2cCKwEbAG2b2PfCxpENiGZKUhG99gRAZDmqHZH0COD5a+0haQ9LKTZW7PVLUIDCxyyNbpKEfFbNex3Ecp1mcTxhjT3fHNzdsaw/g2hhzvQL4gNAtv4AwiXpCzPc6sKrVhB49ErhR0u+AzoSwra8BpwF3STqHVM+vmT0Zu/ZfkgQwn9DlX9kM2dsVHrbVcRynRChk2NY4Ua5W2NaV/jDZo721Azxsq+M4jlOHqMRdkbdD3Fe84ziO45QQrtgdx3Ecp4Rwxe44juM4JYQrdsdxHMcpIVyxO47jOE4J4YrdcRzHaREkmaR/pPbLJc2W9EgD5w1tKE8j5Vhd0phCldfWcMXuOI7jtBQLgM1TUdX2AL5oaSHM7EszO7il620p6lXskjpJeqelhHEcx3HaBhNuHHjEhBsHzphw48Cq+Le5YVsTHgP2jduHUxPIBUlDYijWqZJelLRR5sm58kiaIKl/Kt/zkraStIukafEzVVLPGML1jZivbwwHOyV+ti/QdbYa9Sr26LD/XUnNcvzvOI7jtB+iEq8TtrVAyv1u4DBJXYEtqQnPCvAOsFMM9f17skeTy5XnVuA4AEkbAl3N7DVCqNdfxkAyOwELM8r7GtjDzAYAhwJ/be4Ftjb5eJ5bHnhT0kRCNwoAZnZA0aRyHMdxWpP6wrY2yxudmb0eI60dTrDe0/QCRsdgMUbwDZ9Jrjz/Bi6QdBZwPCFKHIRgMVdK+idwv5l9Hn3IJ3QGrovWfiWwYXOury2Qj2K/oOhSOI7jOG2JooRtTfEQcDkwlBDNLeFPwDgzOzAq//FZzs2ax8x+kPQUMAz4KSH2O2Z2qaRHgX2AFyT9GFiUKu/XwCxgK0IvdvpYu6RBxW5m/5W0DtDPzJ6WtCwhVq7jOI5TmnxK6H7Pll4IbiPEWZ8uaWgqvRc1k+mOy3FufXluAR4GnjOzbwEkrW9m04HpkgYDGwPTMsr73MyqJB1LCei3BmfFSzoRGAMkQevXAB4sokyO4zhO63I+IUxrmuaGba3GzD43s2xj2ZcBIyVNJbfhmTOPmU0Gvgf+nko+XdIbkl4HlgL/ySjvBuBYSa8RlP4C2jkNhm2VNA0YArwSJysgabqZbVEsoTxsq+M4TuMpZNjWOFGuVtjWnU9u22FbJa1O6Jrf2MyqWlmcViOfMfbFZrYkmWwgqZwwYcFxHMcpUaISb9OKPI2kY4CLgTM6slKH/BT7fyWdD3STtAfwf4QxDMdxHMdpE5jZHcAdrS1HWyAfz3PnArOB6cAvCMsTfpdP4ZJmSJoeHQNMimkrSHpK0vvx7/JNFd5xHMdxnNrkMyu+StJoghMBA961hgbma7Ormc1J7Z8LPBOXIJwb989pjNCO4ziO42Qnn1nx+wIfErzxXAd8IGnvZtQ5DBgdt0cDw5tRluM4juM4KfIZY7+CYHV/AGFNIPAodZcMZMOAJyUZ8DczGwWsYmYz4/GvgFUaL7bjOI7jONnIR7HPS5R65CNgXp7l72hmX0haGXgqM6CMmVlU+rWYPXs2gwbVrNgYMWIEI0aMyLNKx3Ecpy0iqZIwX6sceBs41swy18vnOrc/sLqZZbqhLYRcFwLzzezyQpfdGuRU7JJ+EjcnSXoMuJdggR8CvJpP4Wb2Rfz7taQHCOvhZ0lazcxmSlqN4IC/Fn369MHXsTuO45QcC2MwFqLv9pOAKxs6KS6z7g8Moq5/eSeD+iz2/VPbs4Bd4vZsoFvd7LWR1B0oM7N5cXtP4I8EH8HHApfGv2ObILfjOI5TREbfMaCOg5pjj5lSyHXtzwFbSlqB4GJ2PYJ3uxExUMyFwPox/VNgB8Ky6x2BkcAmpKzsGIZ1PzObIekC4CiCvvoMmGxml0dPqiOALsAHwNH59hi0J3IqdjP7WTPLXgV4IDq2KQfuMrPHJb0K3CvpBOATgrN+x3Ecp40QlfrN1ER4Wwe4efQdAyiEco8W+N7A48BFwFQzGy5pN8Ja9P4x66aEId2Fko4DBpnZr2IZF+YoezBwECGoS2dgCjA5Hr7fzG6O+f4MnABc29zraWs0OMYuaV3gFKBvOn9DYVvN7CNCw2amfwP8qLGCOo7jOC1GscK2dotuyiFY7LcSllIfBGBmz0paUdJyMc9DZpYZP70hdgDGmtkiYJGktEO1zaNC7w30AJ5o2mW0bfKZPPcgofEfBjq0mz7HcZwOQrHCtlaPsSdkxEbPpL6ALBXUXrLdNY/6bweGm9lrsQdgaB7ntDvy8Ty3yMz+ambjzOy/yafokjmO4zitRa7wrIUK25rmOeBIgBjCdY6ZfZ8l3zygZ2p/BjAgnjcAWDemvwDsL6mrpB7AfqlzegIzJXVO6ixF8lHs10j6g6TtJA1IPkWXzHEcx2ktihq2NYMLgYExrGoyqTob44BNo4vyQ4H7gBUkvQn8CngPwMxeJUzSfp3gb2U68F0s4wJC1/8LwDuUKPmEbR0JHE3wPpd0xZuZ7VYsoTxsq+M4TuMpZNjWFpgVXzQk9TCz+ZKWBSYQZtpPaW25Wop8xtgPAdYzsyXFFsZxHMdpG0Ql3i4UeRZGSdqUMO4+uiMpdchPsb9BmEFYx5GM4ziO47Q1zOyI1pahNclHsfcG3onrzxcniQ0td3Mcx3Ecp+XJR7H/oehSOI7jOI5TEPKJx+5L2xzHcRynnZCP57l5hOAvEPzrdgYWmNlyuc9yHMdxHKc1aHAdu5n1NLPloiLvRnD9d0PRJXMcx3FKCkm/lfSmpNfjevRt8jjnj5J2j9unxyVshZDlQklnFqis2yUdXIiyCkE+DmqqscCDwI+LI47jOI5TikjajuAFboCZbQnsToi8Vi9m9nszezrunk5dH/ZNkSWf+WXtlny64n+S2i0jxMNdVDSJHMdxnFbnjPvqOqi58qBmOahZjeAudjGAmc2RNFjSdWb2E0nDgLuBXgRd85aZrSfpduARYPX4GSdpDnAVIRQ4hN7kLma2rqSBhBjvPYA5wHFmNlPSeGAasCPwr7RgucK5xrq/J+i9VYGzzWyMgoP7a4E9CC8nbcrPSz4W+/6pz48J/nqHFVMox3Ecp/WISv1mQrhWxb83x/Sm8iSwlqT3JN0gaRdgKjUhWnci+E0ZDGxDcP1ajZn9FfgS2NXMdjWzh8ysfwwq8xpwefQBfy1wsJkNJMR5vzhVTBczG2RmV2TIdr+ZDTazrYC3CeFcE1YjvAzsR3B5C3AgsBEhrOwxwPZNapEikc+s+ObGZXccx3HaFwUP2xpdvA4kKPBdgXuAc4EPJW0CDCFY2jsDnQjBYRpE0tmEqHHXS9oc2Bx4KkaN6wTMTGW/J0cx9YVzfdDMqoC3JK0S03YG/mVmlcCXkp7NR9aWIp+u+D7AidSNx3588cRyHMdxWpGihG2NinA8MF7SdELAlwnA3sBS4GlCaNVOwFkNlRcn1R1CULQQehfeNLPtcpySKwzs7eQO57o4tV1vjNm2Qj5d8WMJYx5PA4+mPo7jOE5pUvCwrZI2ktQvldQf+IRgmZ8OvGRms4EVCd3cb2Qppjp0q6R1gOuBQ8xsYTz+LtAnTtRDUmdJm+UhXmPDuU4ADpXUSdJqhB6INkM+MwOXNbNzii6J4ziO01Y4nzDGnu6Ob27Y1h7AtZJ6AxWESWojCFb0KgRlCSHc6qqWPfToKOBxSV8SLP8VgQdjt/uXZrZPXHb2V0m9CDruauDNBmRLwrnOjn971p+dB4DdgLcILzsvNZC/RcknbOufgRfN7LGWEcnDtjqO4zSFQoZtLcKseKeFyEexzwO6E8YZlhLGGCxfz3OSOgGTgC/MbD9J6xKWNKwITCYsK6i1VMAVu+M4TuMppGJ32i/5ep4rM7Nu0QNdz0a6kz2NsHwg4S/AVWa2AfAttZcVOI7jOI7TDBrlea6xSFoT2Be4Je6LMC4xJmYZDQwvpgyO4ziO05EoqmInTFo4G6iK+ysCc82sIu5/DqxRZBkcx3Ecp8NQNMUuaT/gazOb3NhzZ8+ezaBBg6o/o0aNKoKEjuM4jlN65OUIP06AW4XaDmoaWs+4A3CApH2ArsBywDVAb0nl0WpfE/gi88Q+ffrgk+ccx3Ecp/E0aLFLOgWYBTxFjXOaRxo6z8zOM7M1zawvcBjwrJkdCYwDkvB2xxIc4DiO4zgljqTKGK71TUmvSfqNpGIPCeeNpPmtLUMhyMdiPw3YyMy+KVCd5wB3x/XxU4FbC1Su4ziO07ZZGIO2IGllgt/55YA/tKZQcWJ3u3AXmw/5KPbPgO+aU4mZjSd4CcLMPiI4+y8KZ9w3AIArD5pSrCraDR/NCW2w3koDml1Wa7RrW72XbVWujorfj+Iw6KHT6ziomXTA1QVzUGNmX0saAbwq6UJCD/KlBD/tywDXm9nfJA0FLiSEYN2c4P/kKDMzSTMIIVj3JnizGwGMBDYA/p+Z3SSpB6FneHmgM/A7MxsrqS8h2MsrwEBgn0Q2SSsBDwN/NrN250I9H8X+EcFh/6OknOGb2ZVFk8pxHMdpNaJST7uUXQe4edBDp1Ng5f5RnMO1MiEc+HdmNljSMsALkp6MWbcGNiOEbX2BMIfr+XjsUzPrL+kqQjCXHQjzut4AbgIWAQea2fdRYb8s6aF4bj/gWDN7GUASMYLbQ4QXgKcKda0tST6K/dP46RI/bZLkrT1zvyO+xSeW+kdzptZKb4rl3hrt2lbvZVuVq6Pi96OoFDxsax7sCWwZfb1DCD7WD1gCTDSzzwEkTSNEG00Ue6KkpwM9zGweME/S4uiXfgFwiaSdCUuv1yBMBgf4JFHqkc7AM8Avzey/Bb/CFiKfeOwXAcTuDMysJCYXOI7jODkpStjWTCStB1QCXxPGuE8xsycy8gyldujUSmrrruRYVUa+qpjvSKAPMNDMlsbu+64xT2YY1wpCV/+PgdJV7DFw/Z3ACnF/DnCMmTUULadFSd7S/a29rmXenDH21mjXtnov26pcHRW/H0XlU0L3e7b0giCpD6Gr/Lo4Xv4EcLKkZ6MC3pAsy6GbQC+CT5WlknYl+3UlGHA88G9J55jZXwpQf4uTT1f8KOAMMxsH1W9PNwPbF08sx3EcpxUpRthWgG6xK70zwTq+E0jma91C6GKfEmepz6YwLsf/CTwsaTohINk79WU2s0pJhwMPSZpnZjcUQIYWJZ/obq+Z2VYNpRWSUozuNub9WQAc3G+VBnLWMG32PAD692koNHDLllVqNOXe5KK937OrpwaD7PStc/e4/vaFDwC4eIcNWkQmJ38KGd2t2LPineKR16x4SRcQ3qwAjiLMlHccx3FKlKjEXZG3Q/JR7McDFwH3x/3nYpqTB4k1+NwXtV0B1GcdJpbaa7Nrz1NsiuVWyLJKjabcm1y093uWWOovfJm0RV3LPbHUJ389v9a+W+6O07bIZ1b8t8CpLSCL4ziO4zjNJKdil3S1mZ0u6WHCTMFamNkBRZWsRMi0/vKxBjMts+ZYaoUsq9Royr3JRXu/ZzWWee4x9sQyd0vdcdo29VnsyZj65S0hiOM4juM4zSefWfGnmdk1DaUVklKcFe84jlNsCjkr3mm/5BMu79gsaccVWA7HcRynxEmFbU0+59aTd7ikTZtR1yBJf23q+e2Z+sbYDweOANZNOcwH6An8r9iCOY7jOCVHddjWPBgOPAK81ZSKzGwSwSFNh6O+MfYXgZnASsAVqfR5wOvFFMpxHMdpXYY8cFMdBzUTDzypKOvaJV0KHEDwRvckYXn1AcAukn4HHEQwKm8ieMP7EDjezL6VNJ4QenVXoDdwgpk9F72knmlm+0kaAlxD8BG/EPiZmb1bjGtpC+RU7Gb2CfCJpCOBL81sEYCkbsCawIwWkdBxHMdpUaJSrxO2dcgDN9FM5Z64lE0YCTwNHAhsHH3G9zazubGn+BEzGwMg6XVCkJj/Svoj8Afg9FhOuZkNkbRPTN89o953gJ3MrELS7oQXloOacR1tmnwc1NxLbb/wlcC/gcFFkchxHMdpbYoVtrVOV7ykckLM9FslPULoficjTy+gdyqU6miCHkpIHKhNJvibz6QXMFpSP8Ly7c7NuIY2Tz6T58rNbEmyE7fbbFx2x3Ecp9m0SNhWADOrAIYAY4D9gMebUEwSrjUzpGvCn4BxZrY5sD81YVtLknwU+2xJ1c5oJA0D5hRPJMdxHKeVyRWetWBhWxMk9QB6mdljwK+BJMDYPMK4Omb2HfCtpJ3isaNpXLz0XtSEgD2uuTK3dfJR7CcB50v6VNJnwDnALxo6SVJXSRMlvSbpTUkXxfR1Jb0i6QNJ90jqENb/ojMuY9EZl5V8nfmw6LyrWXTe1UU/py3RVu+F03g6yL08nxCmNU3BwramPpcSlPcjcQz9eeCMmPdu4CxJUyWtT1h6/f9ivv7AHxtR72XASElTyW8Iul2Tj6/4D4Ft41sVZja/gVMSFgO7mdl8SZ2B5yX9h3DTrjKzuyXdBJwA3Ng08R3HcZxCM/HAk+4a8sBNUOBZ8WbWKcehIVnyvgBkrmPfNku+oantOcQxdjMbD4yP2y8BG6ZO+13eQrdD8vE89/ts6WaW99uSpGUJb2InA48Cq8bZidsBF5rZj9P5S8nzXK43+65Xnl1SdeZDtcW9OE7ZWCZ01nQdeXpBz2lLtNV74TSe9nAv3fOcA/l1xS9IfSqBvck+67AOkjrFpQ1fA08R1h7OjZMlAD4H1sg8b/bs2QwaNKj6M2rUqHyqc0qMqXNm8loPtbYYdZg6ZyZT58wsWHn3fvgG9374RsHKcxynY9OgxV7nBGkZ4Il090ce5/QGHgAuAG43sw1i+lrAf+JMxWpKyWJPSN72W/LtvjXqzIfECm/I6k6U59YrrZb3OS1BWq58qe9eJEr9p+tvXueY0/Zoq98rcIvdCTRlEsGyBAc1eROdDYwDtgN6SyqPVvua1MxUdBygRnFO+6bGKl7SQ2w1v3EvoYUmm1zQOAWfJlHoE2bOqJXuCt5xnObQoGKXNJ2aeOydgD7kMRtRUh9gaVTq3YA9gL8A44CDCTMejwXGNk309kVrvN23RYsCmmZ1d/nFT+naRAXaFmir98JpPH4vnbZOPhb7fqntCmBWaoy8PlYjePrpRBjLv9fMHpH0FnC3pD8DU4FbGyu0U9pkWsBNtYgLTaHlyrTM3VJ3HKcQ1BfdbYW4OS/j0HKSMLN6I7yZ2evA1lnSPyLL0gbHcRyntJG0CnAVYdnat8AS4DIze6BVBSsx6rPYJxO64EVYx/ht3O5NWNO4brGFczo2bcVSz6TQcrml7nQEJAl4EBhtZkfEtHUIUdzyOb88z97iDk990d3WBZB0M/BAdPeHpL0JcXIdx3GcEmWbMWPrhG195eBhzXFQsxuwxMxuShJiFNFr45DtpcBQYBngejP7Wwy9+ieCYbmxpBHARcBcYAtCkLLpwGlAN2C4mX0oaX+CE5ouwDfAkWY2S9KF8XrWi3+vNrO/xmhx/zOzqwEkXQx8bWbXNON6W4181rFvmyh1ADP7D7WjvTmO4zglRFTqNxPCtSr+vTmmN5XNgCk5jp0AfGdmgwmRQ0+UlPQKDwBOM7PEc9xWBFfnmxB8xm9oZkOAW4BTYp7nCbpra8JE7fSMx42BHxOGhP8QPaPeBhwDIKkMOAz4RzOutVXJZ/LclzHQfXKRRwJfFk8kx3Ecp5UpVtjWaiRdD+xIGGf/BNhS0sHxcC+gXzw20cw+Tp36qpnNjGV8CDwZ06cDu8btNYF7JK1GsNrT5z9qZouBxZK+BlYxsxmSvpG0NbAKMNXMvinEdbYG+VjshxOWuD0QPyvHNMdxHKc0KUbY1jcJ1jcAZvZL4EcE/SLgFDPrHz/rmlmisBdklLM4tV2V2q+ixli9FrjOzLYgBC1Lh2lNn58O83oLIfLbzwgWfLulQcVuZv8zs9OAnYGdzOy0hmbEtyYLTx7HwpPHtbYYdcglV33yLrx4Igsvntioc3Kx6MopLLqybi9YfWUtHfc5S8d9Xie98v25VL4/t1H1Lx71BotH1XWbWuj7lau8psici/rKSh/L99pytXNTaEpZ+bRNW/1eZdLUtsx2fe3lmotEMcK2Pgt0lXRyKi3pFXgCODl2iyNpQ0ndm1FXOkzrsXme8wCwF2Eo4Ilm1N3qNKjYJW0RQ929AbwpabIkn8brOI5TuhQ8bKsF/+XDgV0kfSxpIjCaEAr8FuAtYIqkN4C/0bzwqhcC/5Y0GZiTp3xLCA7U7jWzymbU3erkE93tReC3ZjYu7g8FLjGzok2ga4qv+Fxv1t1u3DVrekvR2Df+bjfuWmOlfxm/V6vHl9rPM3ukas7JRWKl24zgjkB9e4b997/LWVZi8VS9Hr4PZVuuFP6u2SOkfzA37G/QG4BO/XrnrD+x0qve/Tacs9HyYX/q7EZfS33kaucuZwRXCo2ROReJVZutrPSxioc+rnsyda8tVzt33rVRHpubXFZ915PQVr9XmTS1LRvz/Wxr15yNQvqKL8Ks+DZNnDQ3BTjEzN5vbXmaQz5vRN0TpQ4hxm0zu0gcx3GcNk5U4iWryNNI2hR4hLC0u10rdcjPYn+A8BZzZ0w6ChhoZgcWS6jmRHdL3sDb2tt1Lrnqkzex3Lv9dkje5+Qisdy7njGgVnp9ZSVWUKbVk1h6jbF6E8t9mRG1R3EKfb9yldcUmXNRX1npY/leW652bgpNKSuftmmr36tMmtqW2a6vvVxzGo/u5kB+s+KPJ8xavB+4D1gppjmO4ziO08ao12KP3oCeNrMWfWUtxXjsjuM4xcYtdgcasNjjzMAqSb1aSB7HcRzHcZpBPpPn5gPTJT1FylGAmZ1aNKkcx3Ecx2kS+Sj2++PHcRzHcZqMJAOuNLPfxP0zgR5mdmGrClZiNKjYzWy0pC4Ex/kGvBsX8juO4zhOY1gM/ETSSDPLy3FMGg/dmh/5eJ7bB/gQ+CtwHfBBDN3qOI7jlCjb3zP5iO3vmTxj+3smV8W/zYnsllABjAJ+nXlAUl9Jz0p6XdIzktaO6bdLuknSK8BlkqZL6q3AN5KSqGx3SNojlvOcpCnxs33q+PBUff+UNKwA19TmyGe525XArmY21Mx2IUTPuaq4YjmO4zitRVTidcK2Fki5Xw8cmWVS9rXAaDPbEvgnwZhMWBPY3szOAF4AdiCEgf0I2Cnm2Q54Efga2MPMBgCHpsq5lRDkhVj39sCjBbieNkc+in2emX2Q2v8ImNfQSZLWkjRO0luS3pR0WkxfQdJTkt6Pf5dvouyO4zhOcagvbGuzMLPvgTuAzAnY21Hj6e5OQkjXhH+n/Lc/RwhKtjNwI7CFpDWAb81sAdAZuFnSdODfwKax3v8C/ST1IUQova9Uu/XzUeyTJD0m6ThJxwIPA69K+omkn9RzXgXwGzPbFNgW+GV023cu8IyZ9QOeifuO4zhO26EYYVvTXA2cAOTrnjwdKGMCwUrfCRgPzAYOJih8CN38s4CtgEGEeOwJdxC8p7b70Kz1kY9i70popF2AoYRG7AbsD+yX6yQzm2lmU+L2POBtYA1gGCGiD/Hv8KaJ7jiO4xSJYoRtrSaG/r6XoNwTXgQOi9tHUqOoM8/9jOABtZ+ZfQQ8D5xJUPgQQrbONLMq4GigU+r024HTYzlvFeBS2iT5zIr/WXMrkdQX2Bp4BVjFzGbGQ18BqzS3fMdxHKegnE8YY093xzcrbGsWrgB+ldo/Bfi7pLMIBmR9uucVahT2c8BIgoIHuAG4L06qe5za/ldmSXobeLAQF9BWyScIzIaEcYxVzGxzSVsCB5jZn/OqQOoB/Be42MzulzTXzHqnjn9rZrXG2ddZZx3r06dP9f6IESMYMWJEvtfkOI7TISmkS9k4Ua5W2NYXDx3YrqO9SVoWmA4MMLPssatLgHwU+3+Bs4C/mdnWMe0NM9u83hNDvs6EUHhPmNmVMe1dYKiZzZS0GjDezDZKn+e+4h3HcRqP+4rPjaTdCTPjrzKzq1tZnKKSzxj7smY2MSOtwZmEkkRoxLcTpR55CDg2bh8LjM1HUMdxHMdpKmb2tJmtU+pKHfJzKTtH0voEr3NIOhiYWf8pQFhneDTBz/y0mHY+cClwr6QTgE+AnzZWaMdxHMdxspOPYv8lwVPQxpK+AD4mzFisFzN7nuDYIBs/yltCx3Ecx3HyJp9Z8R8Bu0vqTui6/4GwJOGTIsvmOI7jOE4jyTnGLmk5SedJuk7SHgSFfizwAd597jiO4zhtkvomz90JbERYGnAiMA44BDjQzErScb7jOI5TPCStKuluSR9Kmhy9mm5YxPrmF6vstkx9XfHrmdkWAJJuIUyYW9vMFrWIZI7jOE7JEFdKPUAI9HJYTNuK4KTsvdaUrdSoT7EvTTbMrFLS567UHcdxOgY/v21BHQc1txzfvTkOanYFlprZTUmCmb0mqYekZ4DlCQFcfmdmY6PH0v8QPMptD3wBDDOzhZJOBEYQ/MB/ABxtZj9IWpcQSKYHqaXU0VHa2Mw6mnEtbZr6uuK3kvR9/MwDtky2JX3fUgI6juM4LUtU6nXCtsb0prI5MDlL+iLCEO8AgvK/Ilr3AP2A681sM2AucFBMv9/MBpvZVoQ4JInP+WuAG2Nvc3pZdn11lBw5FbuZdTKz5eKnp5mVp7aXa0khHcdxnBalaGFbsyDgEkmvA08TgoUlMUQ+NrNpcXsy0Dduby7puRia9UhCbHYI/lP+FbfvzLOOkiOfdeyO4zhOx6IYYVvfJIRXzeRIoA8w0MyWSppBiCoKsDiVr5IQWRRClLbhsSv/OELk0YRsftLrq6PkyMelrOM4jtOxKEbY1meBZSRVR/SKQcXWAb6OCnfXuN8QPYGZMR5J2mHaC9QO/ZrQqwl1tFtcsTuO4ziZnE/wXZKmWWFbLUQcO5Dg8OxDSW8Swq0+BgyK3erHAO/kUdwFhNCtL2TkPw34ZSxrjVT6P5tQR7ulwehurYFHd3Mcx2k8hYzuVoRZ8U4L4WPsjuM4Th2iEndF3g7xrnjHcRzHKSFcsTuO4zhOCeGK3XEcx3FKCFfsjuM4jlNCuGJ3HMdxnBLCFbvjOI7TIkgySVek9s+UdGED5wyVtH1q/3ZJ2TzYNUaOGZJWak4ZqbLaXGhYV+yO4zjNYPQdAxh9x4A2V1YbZTHwk0Yq1aGE6G7NRoGS13tFu0BJt0n6WtIbqbQVJD0l6f34d/li1e84juM0nUdHLjji0ZELZjw6ckFV/NucyG4JFcAo4NeZByT1kXSfpFfjZ4cYuvUk4NeSpknaKWbfWdKLkj5KW++Szornvi7popjWV9K7ku4A3gDWyqj3QUmTJb2Z4e52vqSLJb0m6WVJq8T0dSW9JGm6pD+n8q8maUKU842UrC1OMd9cbgf2ykg7F3jGzPoBz8R9x3HaOI+OXMCjIxe0+ToLKWdDZWVa182xtgtZViGISrxO2NYCKffrgSMl9cpIvwa4yswGE8Kz3mJmM4CbYnp/M3su5l0N2BHYD7gUQNKehDCvQ4D+wEBJO8f8/YAbzGwzM/sko97jzWwgMAg4VdKKMb078HIMDTsBODElZ7bQsEcAT5hZf2ArYFqjWqWAFE2xm9kE4H8ZycOA0XF7NDC8WPU7juM4TaZoYVvN7HvgDuDUjEO7A9dJmgY8BCwnqUeOYh40syoze4ua8Kt7xs9UYAqwMUGhA3xiZi/nKOtUSa8BLxOs+eScJcAjcTsdMjZXaNhXgZ/FOQNbmNm8HPUVnZZ2KbuKmSVvOF9RwvFwHacUyLRYk/19z+vepuospJz5lnXsMVMAqi3rZL8pFLKsAlGMsK1priYo37+n0sqAbc1sUTqjpGznp8O5KvV3pJn9LeP8vkDWrhdJQwkvFNuZ2Q+SxlMTznWp1QRTqaS2vqwTZMXMJsQegn2B2yVdaWZ3ZKu32LTaJILYYFkj0MyePZtBgwZVf0aNGtXC0jmO43RoihG2tRoz+x9wL3BCKvlJ4JRkR1L/uDmPEKa1IZ4Ajk+sfElrSFq5gXN6Ad9Gpb4xsG0e9WQNDStpHWCWmd0M3AK02lhKS1vssyStZmYzJa0GfJ0tU58+ffDobh2X39w3GIArDnq13nxn3Be+N1ceVNu6OfO+IQBcftDEIkjXsUis1Jaw1JtTZyHlbGxZhbSu24ClnnA+YYw93R3frLCtWbgC+FVq/1TgekmvE3TTBMLEuYeBMZKGkVL8mZjZk5I2AV6KVv584CiCtZ2Lx4GTJL0NvEvojm+I04C7JJ0DjE2lDwXOkrQ01n1MHmUVhZZW7A8BxxImOxxL7UZxHMdx2gD7ntf9rvhiUyts677nNS9sq5n1SG3PIvXiYGZzgEOznPMesGUq6bmM4+kyryFMbstk84xz+qZ2985D1jHAmLj9MbBdKuvvYvpoauaQtSpFi8cu6V+EN5iVgFnAH4AHCd0vawOfAD+NXTK18HjsHZPEUrf4gi06AXUt98RSz6QsvqdWUVFr3y13J802Y4I98crBw1pZksJTyHjsTvulaBa7mR2e49CPilVnKfCLv4fuv7/9rPhdngA/vy3Ud8vxdeur71hHoyO2RVu65myy5JKvLcntOK1BS3fFO05OEsu8oTH2ZEzdx9idxpBY6pn7pWi5Ox0bV+xthMRSr7Ta+9ks94XXhtUg3U7pWudYmgk3DgRg55Mn1zmWWDVQVWv/luO7p45R51hjyaZ8K98NXe2dNuqU9ZykK37JU0sB6LJH50bXWyiytcV6c+GcfbvmlL+tM//McE09Ls9+P5Nr3vHz2vstYQFnPhu5nsWG0gAeOS+k7zcyf7l/uGQhAMue3y1vGZvL/KPj/bjTexicwuCK3WlzlOX5WGZa6gluqTvZSCxzt9SdUqdok+eaQ0eePJePpV75ZrQYNgsWQ6blnljqmaQt92kPBu+I1319OQC/WvlMAPoPv7k6TyEs9TTrzNmSXw29tY7Fk/xNutAHfbg/ABt/FVwtb7r3DkDrW+6JpZ5L/rZOYqlXLzKNK3wzLfekp+T1h5cAsOX+XYDitn/SprnatjFj7ImlvuuS4Lek09ahjK5HLQNkV+yJpV71QejBKtsguPhIW+4NydhYEks9k+ZY7j55zgG32B3H6WC4pd56SKoEphN0z8fA0WY2txXkOAn4obU8wxUbt9jbIYUYY09ILPe0pV5ImjLGnljulyz3AtC6lno2Cj3G2tI0NMae0BpzHArZtov+EbyOJpZ6PrT3Mfa2brFLmp+sD5c0GnjPzC5uZbFKjpKz2As5ftZWy3ruy+Buf0/WrTffWcsHJ1GvNLvG2vLv+GBw8fv88BH1ncJ2Y8ZSxW/ZQY373j5n5zRNyAKR7V7tcd9UAJ46aOuC13fUM/8G4B8/OiS3PBW92LryY2468me58wBPbh9cefdaPbuc24wZy+3ztmWtnrlia9QwZfaXAGzLOg3mbQpN/U7c+2GIBP3T9TdvIGd2rpw6HYAztt4CgJMmBDlu2tkt+TTzj15wBBkOanrc2TwHNRm8RHQ8E93H3kRwWPMhIeLat9F3+1RgJ0K0tWOA84AtgHvM7Hfx/AcJAVy6AteY2aiYPp/gsGY/YCEwzMxmxUAt883sckknAiOALsAHhF6EHwp4nS1OySn2jsBft38XaFixU97w7S2WpZ5QRnmdSW4NWzpB7rZmqSe0ZUt97u0/B6DX+bl7aY7b4+W8lOmn24TgVPk4zy4UhWzbxljqCfVZ6gmFvv9tcTZ8VOppl7LrADfPP3oBhVDukjoRfJrcGpPuAE4xs/9K+iPBodnp8dgSMxsk6TSCt9KBhMihH0q6ysy+IbwI/E9SN+BVSffF9CT06m8lXUYIvVodQz1yf/TvToyvfgJwbXOvsTUpma74zDWqCU2xkNtqWfs9/DgAsxeHLsY+y4Qfrkf2rx32vnjyVwFVIXJPp9l0UZhglGm5bxfPqYr7SaShlxqof5sxY6EyzujqVBNGoBC9HPl0n24zZiwXTAxW4J+GvMETY4cCcMjwj1hQEa6me3m4mkJY7oml/uG84Hxx/Z4rADWWe2KpozJEVzAwfqhlude51xXB696TO68H1FjujXkmEot4wswZAOy8Wl+g6RZyJk19PpsrV2Kpv/DVVwAsrgpG2XcV4VnbbPnw7LVny71QXfHzj14wA7J21XzS487ufZtabmqMfQ3gbWBXoAcw3czWjnnWB/5tZgOixf5bM3tB0m7AeWa2R8w3ATjVzKZFC/zAWE1f4Mdm9rKkxUBXMzNJhwJ7mNnPMyz2XQjKvneU5QkzO6mp19gWcIvdaSJV5BccsIoqqnIuYbti+v0AfPHen4HfFkw6gCPGXwbAXUPPLmi5bYVfPvsOVK4EneZAVVWtY/lY7k0luWe/2eIn9ebb/uHfAPDi/lcUtP6XZ4ceq0SxO0WhWGFbF5pZf0nLEqKx/ZKG/asnIVqrqB2utQoob0bo1YTbgeFm9pqk4wiu0Ns1JaPYC7lGta2WlVjmieWeaakXo87aZZXxysEHMuSB64DcY+yJZR7G2KvYQRfnXHOeMKXij3QDltKFSqqwypVZp3sP7t1viybLDrDBV6tR+W5ltcWekGm5L7x2EeP5MZXfV1KxoIInxg6lPH49HnhwQyqo4JDhHxV0jD2xzHONsafb3ipWYq3KOYw5chjp351BfVbk+t12YJu77wPg3o8uAaD7UnKWld7PRqYFXChLvSmyZJPjsuljmiRXMqbO1Nr7PsaelU/JbrEXKmzrD5JOJcQPuQH4VtJOZvYccDTw30YU15TQq2l6AjMldSaEYf2ikee3OUpGsTuFYdeHwpDXuANOqHPMqGDIA1dRRRgCGPLAVQBMPPDXdfKecd8AqlIWeObs+MTqe+DDx2OOg2IdlYCadQ2Jpf7hvK9Y9odluGjqXfT7anUOXW+nZpXbHPINAZqZb8z7s6CqO6Kc78uWY8z7s7j33a/ps2xnps4OeX/57DugVaHTHFb4LExU7Hlj9pe+NNkU68KTx1FBBbv/6Ad+s/X61emPX7GARZWL+XDv8Tw3661a5fzfbSsB0O2qnavP//E+j/PEY0GGWU+Ee7zKdXtV1wE0GDVi4e9fCuX+MQTSGvTQ6fFI71r7kw64Ovv5sZ5uN+5abz3/719xGHnn+uXpYBQ9bKuZTY0hWg8nRPu8KVryHwHZZ4lmpymhV9NcQJhjPDv+zSf2e5um5BR7IdeottWyclnqxazzlYOHVSvyfGnMbPgVOoeZ9nOWnkUZ8OKh29V/Qp5M7/MJP/QMvXedNuqUc4w9WTq48NpFdKIT3U7pWmcZ0lM0zVof9NDpXMBF1T0ACTWKtcZSr4iR6dKctfUWPPfFd8DyOetYs+JjDlh8JWESc21G3zEAKmDdxZ145eRX+eaKvfjmihthjROzlFRTf9oirlxSE22vfurKn4smP59lc5t2XqTaco9k3hcHetzZ/a74/Bd0Vnw6FGrc3z+1W8fSNrOhqe3xwPhsx2h86NULU+k3AjfmI397oWQmzznNI7HUF1SGPtzuncKM9LTlfuXrYV353R+GvszD1g+K7owtd8hZbq5ALQm1x9hhYkWYpf/8odm95zXEkGjFTTzg6lpj7OnJc4Njnlejpbf9PWEc+sVDB/LIuS+z4xebZP2xb8rs5UdHLqCCCsriv4R9z+tey2JOLPWqOOUwyVvLcgcO7rdKtbw3vhpmrZ88uCePjP+echbTiXDfysqjV8Jrh9ZS7Duf/Gp1tz1lZdV/n35m2Vr1JnI8vs5AenZehqVLwv4un07GMG75v2+rLXUW1QxzpOXPvJZseaC2RV35/lyW3PomdCmD2cFfA326Vm93u3FX5p38FAA9b9yjTnsvHvUGVVNnV9cUL7D6eLqu6p6DDBqy8BddGZ7lrmeEZ7stuaht6+vYnZYhn9lPjtNszn3lSc595cmcxydVjGRSxcg47x6GjX2NYWNfa1adH8zahQ9m7QLUb62n+dP29+Q8Nv+E7C5ABz10eqqbuHZ62gKvooqK+C89M3ybMWOr0xOS/Wzl1sLgsUc2oHOGoVxRsYilFcbYkd9Vz3P8eJlKRt+WJZZ9RW4ru4t1onIJ9F40j96L5sXUbEMlVdS21mtfdxVVdc5oLj+/bUHWADCZbZnJY5ct4LHLst/LfLD3v8Pe/67BfI9fsYDHr2h6PY7TVLwPygFqLPMhD9xUaz/N8zM/iVvltfbTFvsX04NiXGOLQ4EaSz2XUk9mVk/4KCjx2Yvy78pNk1jqVbX2D68+/uYTZ3Ps4iUISPqohtwTXPeUV5VRVQbb3PMKxmHsfsgf6IR44t8XUk45vx++E+c/9DhdqW2xLzoj9AjUN4f2T5v9AYAL3ryoer/TkroW4SX9nqZH98mcOi045/lr/7/w3dIaHxkH91ulevvWyUFZrL0gXElV1zDmXVVWQaeqYLGbKqiymjXZe00NKwMe3+qyOnU//d/lANh96Pc8PX45oJxTBg/i7e5Pc/5HQVFu9XWYiZ68Gv3fDcsDaUu99jqJiridttxDWo2CTyvfyvfnhnI+mAvfLaktYGK5E6zspDflqldDsJ+nvhzPht9swqqbbE7Vu99S2Wkxs3q+x9pzky73RLIyFp48jp2A59YdUm2ZNzQWP+ne8Bxt/vlZtdKfPzc+09E+zrTcKzMuw3FaClfsTt7MW7q43v1sJAp90uwvau1fus2etfKVLf5P+EvoXt117dzjyYlC/fL83Vl83V2s+/3KNcq1CsoWHx7LCmomKPCDoNu/gBole/F67zQoP8D5Dz1Ol6puVC2pClb7EqALDN03eGb725MnAzAo+tNIJnNNOuBq7v3wjepZ3ABnbxaWof10/c2rFUGP7uEF45m9L2HstGAJppV65iSxvr3CfICq7xJrMAY7WdITyqqgDKqsZ3Ub9J45DlW+wcLOn3HDsmFC4//9cHH1djWZ/Xdl0HvR/FQNtUkUc1C0ZfFT2zKvqtMdXlZ9JGHORQMpW7IuvY67hYqHPqaSSgyrVuAV1WdVxReF2ixZeghW9R0zPnmSNX/Yis50Y/W5W1AVz0rOSF4+AKwSvjs5TLzuEtPnnTaO8iVLULfX6HplzRLJH755P5yTYaVv9V1slWSpYRzayLTSk/29ftPwUM7oO0KPyrHH1L+KxHHqwxW7A9RY6pn7Ew+s8dNw4iaDAbj89edr7UONpf7NjJpVKpfNnMcHFV3YYsVV85ajqR22E6PSG3L/6Tnz/HXOa/RaYzAfxP3r3gq9BKdv1J+ySrj63dfY8KNDgYvofWcvzlg6gPMferxWGYsqFtCVZWBJavlcHtNU/rTxLWzbZyN2pi9XTP2QK6Z+WH1s3oKa+QRrftNwWZUzgkJRoiOtU9S8Na3XKW5v+8XrGNC9cgndK/twx8shfcWe4idzgqWevAA9/WxwkHPa4EGUAU89uwLiPaasvEle6xTqHddLtGr8xUmarHO/Fdm1b5go+dyVU6vnIyhHjeF4KOSHTqH/YPPvvgPBp92+Y/X0E1RVM4egIr4ePLfuELafXsUOb1UFVyTUvHxY5RIqKOdzNmYTqB7LZ0urrhtqJttVz8OIiv2Vnwb/KMl8iYSGLHePx+4UGlfsTt4ks6QTxZ7POuItVlyVS7fZM6elnkyuWzf28c6qCN2hp29d1w9GYqmfv83dAOx5x5uwXDx44ZncvMmzVHXeHjrfyc6VL/J8VZjo+vfe9/HdF68ye9aDzJ5Vo8hmdg3DBViw3LecN5eaTl/4/YPPAmKpapR4edUy0W4s4+kHguWflPe3J08GgzOWDuDKg6Yw4drBrApMOuXVWv7Na5R6jSV5wfu7M3bkd6wZy0p33ddZzhUnvFaVxS7myqgmG/w2K74AlLPv5jfw9PjvY3p2lZyo1rldu1Ur4iStRn2WZ7yMpS3yutZ5kirKMKpY+v43jHs/LHUMqresVt7alFGZOj5pxRUBGPp18By3whc71pn8F8qtqN7a5+zuzD06WN5dqKo1Eq/KmgYMz9pg0kzd8jwABr8+EoB7BycxDULPRzJ/YSWeqyN5Mq8i1wS7CiqqrXVwy91pHq2i2CXtRXDM3wm4xcwuLVTZcy4K1s9Kfyi8x63m0FblSkjGTisz9tPUZ9UnY+rz/3MZ166yGz1WXp43l/wAs7/g3FeeZPo3X9Vrub9ckaw2CT/M6ZnqjWHnpS/W0VOb/fgy3nzibGbPyn3eY49vzCI2rlYM4ce/Pju1brdzY0kb+oml3mde1qwAzD8uzpyv3AQA8TYAlYs3AuC6Ld7jtI9D1/mE1QdQVV5GrwVgVDHgmymA+H8bloOtBPzA7kODYn96fLDUTxkclMlfX51UfYUAu30alMu0lTeifxxrB9j9Rz+wyfdD2WXW1xz86ee1zqmmCqrKQquWlWW2WDm5lsdVxdenTNLP5X3rhJe/naNip1N5eICrCNZ69YB/efUCgHknjqNTV7BFg2rmDJYnkldBRTlrzuvJ0vKtq0/f+vXw8zR1y3OzyppJspIh7ZMgmxvddDz2MsoY9lQY6x+7R/2z8tsrkvoCj5jZ5qm0C4muXes5bxBwjJmdGr3MLTGzFxtZ9wxgkJnNyZUuaSBhOdxPCAFlNi2Ebooyn2lm+zW3rHxpccUenf9fD+wBfE5w2P+Qmb1V/5lOeyax3DNJJtdtf08Sgy53h25iqSdZnlwj+P6+5PPD6Hrl2VxJsLTO3+ZuKIeJh2xTfe6t859ml1wua8uy15kolnILimapYNi+b/LAY5vRvbyM8oqgGCuregGwwtKotqrgjHsGwMowfI6qLfedT3kVSHleuzcsOyvrNIv/rDIJMI6eF2T+zyqPgMKLRTLGPr7ywihZ7deu67Z6FKr68eB6n3Lax2HyW0V5aKbN/vd6usn43dtlwP84YodleSIq9OTYta/Wbx32//rdWnfn6WeWA6bUKqOGaMlbGPbPTXmGXV+W+j87iU1+TfULSOz5qKyZJNd8yutsqyK0u7qF5Z7VcxTi85PsH5s6M9sKCKi7NC5ZDpn0LrilXoOZTQKS9c9DgflAoxR7Q0jakqDUDzWzqQT/hA8Vso6WpDUs9iHAB2b2EYCku4FhQLMUe2IRZ+63toXcVuXK5KU4lr5dtMJfSo2tJyTj7dnG35PrWhG4cMazMONZLllrN7pstkdWhZ7JtuVhAtrLcR17Yy315rLPPu9BWRmPPbIBAOUqp8oasMj7BMXIrMr68+UiKb5TFQ+t/zYrVsxk71mh+/fB9V+KCqNGSS3qG1y1lc8IY7+773MHAMM/2r46z657vMUF7x5XU0VZ7BmoDH8Xd2q4l+HDHsHi7Dd/HlDG3C7d6b0k32VbGTEEOmVPLiplVVSWVVFWFX7evu9aQe+KUPlry1ey1ZzeVFFFp/LEZE/1vpTDfNbky96w8dzQC/Fe7zUBGPzxwY0SI5elnpCMqafH2NPd8a3NwpPH1Qnb2u3GXQsZtrUW0cf7K4TAML2BE8zsucTiBX4FnARUSjoKOAV4hxDuNRm7Oz0GjFkR+Bch2MxL1N/9tgnBX/3RZjYxynIcwZL/laTbge8J6x9WBc42szGSyoDrgN2Az4ClwG3x2F7A1QRvfc+nrnEF4DZgvXhshJm9Hnsu1o3pawO/Jjjs2Zvg4nZ/M8twFJ2b1lDsaxAaIeFzYJt0htmzZzNoUI2PhREjRjBiRP2xv532TY3lnvuF5/x3wnfzko2t1n56BnOw3OsGfUnKP+O+AezyXujyHHZesLT/ck/40X/x0IHMfSSMv/a4ozvzj1lAhS3lT/vtxstcR6cKeOidU2A96JF6MZt/ZvhhXvfyTWoc8hwSxtihxlLP5NBNw9DE3e/OAqrY8du5/GeVCcD3PD79JfbaYjsoK6seY58ztfbLzuPTg8vVvbYCqj6i/5Ivea/z2lyx4Y0M77cT6z+6ORPX6M++53VnxmmPAbDRVfvE3pEqFq96JgDLfBV6QXff5X/Q5Wk2mXsp5dRY8BdstREHxmGM3T6dSPKzcfFx4Xdm1S4bc8Ko9LyBKu4ffA69Z4V2XmfOK6z/Q1iG9+vBA7gqltszLi+bF5eb/XrwEK56tcYQS2z50wYPiUvbKth9l++rl+f1vPFH8fwahzXfnzGBeUsXc9iPPuKxh0P7/2SPj2PvAux46Z7VY+w/2jPI/MyT68f9d7ngpV3YoOJtBo48gHknB8X+w7rHAdB1RHDQlMz1eOWwMDcgcfiT7KdprF/8tmKpR6VeJ2zrwpPHUUzlDpSb2RBJ+xBCt+6eHDCzGZJuItV1L+ku4Coze17S2oTAMpvEc583sz9K2pcQijUXY4GjzOz5evKsBuwIbEyw5JMu+77ApsDKhGh1t0nqSmi73Qjx3dPOMS4CpprZ8Bit7g6gfzy2PuGlZlPCy8hBZna2pAeAfQl+9fOiTU6e69OnD431PJdYwG3NIm6rcuUim6WeycQsebJd55VNqL8+S7267e4ZUHu/CeRyI9r7zl6186lzraHgQt6/ZP1/xfPhx/zs/7ueE+46ItRzxGTIcE5T3cYXZDxLD/4Kyr7ilsNuYNh9/1dd9qOP1ljZizvVfdlPzk8UK+Xl9Oi2PJ91+wvP7H0Ji+aGtnh7ufEMnzWUziqnnPLqUfGkJ+bqqZ/GlJrx8mOPnxKc40AcUqggNGR+Pzk53byWl9d/HOjZeRmeG/4L/jMleDUso5zXexkDVw6e8n48bDxQ8xzPe/KpuP+rGPgzrH9PLPWdokIvFm10Nvwl1PYTT9y/BGiqYs+1fiSdfn/8O5mgNBtid2BTqdogX05SD4Ln/58AmNmjkr6tp4yngZ9LesLMcnW/PWhmVcBbkhKnEjsSwstWAV9JSlwZbgx8bGbvA0j6BzAidc5BUa5nJa0oKZkC/B8zWyppOqGvK1mSM5382qKa1lDsXxAmJiSsSQlE03FajsRSbwrZXNvmepnocUf4wb2SKakhlbqKvcflNT/M6fJzWeqZlO9Y0/36l/drJqflCm6S+a2dNPy66u1d+h1ZvZ0OOLPRlTWW4ouH1uogq7bcXzl4MmFULJC4TH2FdPfwrjUrHGLK6VuvDTeGntCknXqyR3WPCOxR7Y74li27w/G1J4cllvstAMfXdRMb0neNsgAZPeJp17LLXVkTyWXkwDAj8aVhJ9Y6J9NqTiz3idSue+DIfnVkgdo9RJDdUs+kLbibbSR1l6XUn54P31A34MEKwMep/cQ5Rq4Qq5mUAduaWXpBCylFnw+/InTn3wD8IkeetNOO5kWpys1iADOrkpQON5taKJofLe4rXlI58B4httMXwKvAEWb2ZpLHfcU7juM0nkL5il948rgZZA/b+km3G3ft29RyJU0ijFE/G8ebXwb2NrMP4xj7mWY2SdJKwCQz65ueVS7pN8ByZvaHWN5dhK7t/xf3+5vZNEl/Bb42sz9L2ht4DOiTa1Y8YULeE8B/zez3WcbYH4lBZJA038x6SDqEMFfyAKAPoSt+BPAIQcftGq/rX0DPKP9fgdlm9qd4XVeZ2daZqwOSOuJ2rWP50OK+4s2sgvCG9AShIe5NK3XHcRyn1TmfMLkrTSHCth4DXCBpGvAscJGZfVj/KbV4GDhQ0jRJOwGnAoMkvS7pLcLkOghj2TtLepPQJf9p9uIC0eI/ADhA0i/zlOU+whyxt4B/EJaIfBfLGgE8KmkK8HXqnAuBgTFc7aXUXkRRMDy6m+M4TolQyOhuLT0rvj0iqYeZzY+z8CcCO5jZV60tV5ucPOc4juO0LlGJuyKvn0ck9SaEHPhTW1DqUKJhW0eNGtXaIrQ5vE3q4m1SF2+TunibOLkws6Fm1t/MNjWz21tbngRX7B0Eb5O6eJvUxdukLt4mTnujJBW74ziO43RU2uTkOUmzgU+aUcRKwJwGc3UsvE3q4m1SF2+TurSnNlnHzPq0thBO69ImFbvjOI7jOE3Du+Idx3Ecp4Rwxe44juM4JURJKXZJe0l6V9IHks5tbXlaA0lrSRon6S1Jb0o6LaavIOkpSe/Hv5k+m0seSZ0kTZX0SNxfV9Ir8Xm5R1KX1paxpZHUW9IYSe9IelvSdh39WZH06/jdeUPSvyR19WfFaU+UjGKX1Am4nhC/dlPgcEmbtq5UrUIF8Bsz25QQz/eXsR3OBZ4xs37AM3G/o3EawY1xwl8Ivpo3AL6l/tCOpco1wONmtjGwFaF9OuyzImkNoptSM9ucEGXrMPxZcdoRJaPYgSHAB2b2kZktAe4mHaqqg2BmM81sStyeR/ihXoPQFqNjttHA8FYRsJWQtCYhpvEtcV+EeMljYpaO2Ca9COEtbwUwsyVmNpcO/qwQPHJ2iwGrlgVm0sGfFad9UUqKfQ3gs9T+5zGtwyKpL7A1IdrlKmY2Mx76Clgl13klytXA2YQQiAArAnNjUCLomM/LusBs4O9xiOIWSd3pwM+KmX0BXE7wjT4T+I4Qq7ejPytOO6KUFLuTQlIPQvSh083s+/SxGOe3w6xzlLQfIYRj3WDqHZtyYABwo5ltDSwgo9u9Az4ryxN6LNYFVge6A3u1qlCO00hKSbF/AayV2l8zpnU4JHUmKPV/mtn9MXmWpNXi8dWoHUqw1NmBEI5xBmGIZjfC2HLv2N0KHfN5+Rz43MxeiftjCIq+Iz8ruwMfm9lsM1sK3E94fjr6s+K0I0pJsb8K9IuzV7sQJrw81MoytThx7PhW4G0zuzJ16CFqYv8eC4xtadlaCzM7z8zWNLO+hOfiWTM7EhgHHByzdag2AYiRqD6TtFFM+hEhtnSHfVYIXfDbSlo2fpeSNunQz4rTvigpz3OS9iGMpXYCbjOzi1tXopZH0o7Ac8B0asaTzyeMs99LiK38CfBTM/tfqwjZikgaCpxpZvtJWo9gwa8ATAWOMrPFrSheiyOpP2FCYRfgI+BnhBf+DvusSLoIOJSwwmQq8HPCmHqHflac9kNJKXbHcRzH6eiUUle84ziO43R4XLE7juM4Tgnhit1xHMdxSghX7I7jOI5TQrhidxzHcZwSwhW706aQ9NsYWet1SdMkbRPTT5e0bD3n3dIegv5IWl3SmIZz1jrnOEnXFUsmx3FKi/KGszhOyyBpO2A/YICZLZa0EmF9NcDpwD+AH7Kc18nMft5igjYDM/uSGkcnjuM4BcctdqctsRowJ3H8YWZzzOxLSacS/HaPkzQOQNJ8SVdIeg3YTtJ4SYNSxy6W9JqklyWtEtPXj/vTJf1Z0vykYklnSXo19hRcFNP6xhjlN8dehCcldYvHNpD0dKxjSiz7DknDU2X+U1KtCIOxzDfi9nGS7pf0eIx9flkq388kvSdpIsGlaZLeR9J9UdZXJe0Q08dKOiZu/0LSPwt1UxzHaV+4YnfaEk8Ca0WFdoOkXQDM7K/Al8CuZrZrzNsdeMXMtjKz5zPK6Q68bGZbAROAE2P6NcA1ZrYFwU86AJL2BPoRQv/2BwZK2jke7gdcb2abAXOBg2L6P2P6VsD2hEhgtwLHxTJ7xfRHG7jm/gQvZ1sAh0paK/pnv4ig0HcE0kMM1xDigg+OstwS00cAv5e0E/Ab4JQG6nUcp0Rxxe60GcxsPjCQoKRmA/dIOi5H9kpCoJtsLAEeiduTgb5xezvg33H7rlT+PeNnKjAF2Jig0CEEBJmWLktST2ANM3sgyr3IzH4ws/8S4hX0AQ4H7kuF+szFM2b2nZktIvgkXwfYBhgfA5EsAe5J5d8duE7SNIJP9+Uk9TCzWcDvCT7Nf9ORXMA6jlMbH2N32hRmVgmMB8ZLmk4IuHF7lqyLYt5sLLUaX8mVNPycCxhpZn+rlRji2af9gVcC3Roo6w7gKEKwmZ81kJcs5TckaxmwbXwRyGQL4BvCsIXjOB0Ut9idNoOkjST1SyX1JwQhAZgH9GxmFS9T05V+WCr9CeD4GMMeSWtIWjlXIWY2D/g8GU+XtExqxv7thIl+mNlbTZTzFWAXSSvGELyHpI49SaqbPQZxQdIQYG9ga+BMSes2sW7Hcdo5rtidtkQPYLSktyS9ThhbvjAeGwU8nkyeayKnA2fEsjcAvgMwsycJXfMvxV6CMTT8EnE0cGos60Vg1VjWLOBt4O9NFdLMZhKu+yXghVhewqnAoDjJ7y3gJEnLADcDx8dZ978BbothRx3H6WB4dDenwxCt6oVmZpIOAw43s2ENndeEOqYTlux9V8iyHcdx8sHH2J2OxEDCxDMRZrgfX8jCJe1OmBl/lSt1x3FaC7fYHcdxHKeE8DF2x3EcxykhXLE7juM4Tgnhit1xHMdxSghX7I7jOI5TQrhidxzHcZwSwhW74ziO45QQ/x+Qdczt5yB27QAAAABJRU5ErkJggg==\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
