{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage: policy measures\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.14.0-epsilon'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "196"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **17th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{2: ['Laos', 'Holy See'],\n",
        " 3: ['Timor-Leste', 'Saint Kitts and Nevis', 'Fiji'],\n",
        " 4: ['Tanzania', 'Dominica', 'Grenada'],\n",
        " 5: ['Brunei'],\n",
        " 6: ['Equatorial Guinea', 'Saint Vincent and the Grenadines'],\n",
        " 7: ['Sao Tome and Principe', 'Northern Mariana Islands', 'Mauritius',\n",
        "     'Saint Lucia', 'Antigua and Barbuda'],\n",
        " 8: ['Bahamas', 'Cambodia', 'Kyrgyzstan', 'Seychelles'],\n",
        " 9: ['Angola', 'Guam', 'Botswana', 'Barbados', 'Australia',\n",
        "     'Trinidad and Tobago', 'Jamaica', 'Madagascar', 'Liechtenstein',\n",
        "     'Ethiopia', 'Vietnam', 'Philippines', 'Libya', 'Uzbekistan', 'Gambia',\n",
        "     'Republic of the Congo', 'Zimbabwe'],\n",
        " 10: ['Iceland', 'Algeria', 'Bahrain', 'Kazakhstan', 'Virgin Islands, U.S.',\n",
        "      'Maldives', 'Belize', 'Singapore', 'India', 'Djibouti', 'Benin',\n",
        "      'Guatemala', 'Bolivia', 'Eritrea', 'Venezuela', 'Oman', 'Zambia', 'Iraq',\n",
        "      'Guyana', 'Ghana', 'Kenya', 'Papua New Guinea'],\n",
        " 11: ['Yemen', \"Cote d'Ivoire\", 'Lesotho', 'Bermuda', 'Chile', 'Pakistan',\n",
        "      'Nepal', 'Senegal', 'South Africa', 'Suriname', 'Peru', 'Monaco',\n",
        "      'Argentina', 'New Zealand', 'Gabon', 'Mongolia', 'Brazil', 'Namibia',\n",
        "      'Costa Rica', 'Syria', 'Bhutan', 'Burundi', 'Israel', 'Andorra',\n",
        "      'Honduras', 'Dominican Republic', 'Colombia', 'Paraguay', 'Taiwan',\n",
        "      'Uganda', 'Nicaragua', 'Saudi Arabia', 'Mozambique', 'Swaziland',\n",
        "      'Cape Verde', 'Ecuador', 'El Salvador', 'Kuwait', 'Bangladesh',\n",
        "      'Rwanda'],\n",
        " 12: ['Comoros', 'Egypt', 'Mexico', 'Georgia', 'Malawi', 'Cameroon', 'Togo',\n",
        "      'Puerto Rico', 'Myanmar', 'Nigeria', 'Guinea', 'Panama', 'South Sudan',\n",
        "      'Somalia', 'Liberia', 'Guinea-Bissau', 'Sudan'],\n",
        " 13: ['Indonesia', 'Serbia', 'Kosovo', 'Mali', 'Sierra Leone',\n",
        "      'Central African Republic', 'Ireland', 'Qatar', 'Chad', 'Azerbaijan',\n",
        "      'Tajikistan', 'Japan', 'Palestine', 'Malta', 'Slovenia', 'Montenegro',\n",
        "      'Moldova', 'Afghanistan', 'Democratic Republic of the Congo', 'Armenia',\n",
        "      'Morocco', 'Niger'],\n",
        " 14: ['Spain', 'China', 'Tunisia', 'Burkina Faso', 'Jordan', 'Lithuania',\n",
        "      'Russia', 'Lebanon', 'Iran', 'Bosnia and Herzegovina', 'San Marino',\n",
        "      'Cuba', 'Hungary', 'United Arab Emirates', 'United States',\n",
        "      'Mauritania'],\n",
        " 15: ['Greece', 'Thailand', 'Albania', 'Sri Lanka', 'Cyprus', 'Haiti', 'Turkey',\n",
        "      'Bulgaria', 'Ukraine', 'Latvia', 'Belarus', 'Poland', 'Luxembourg',\n",
        "      'Croatia'],\n",
        " 16: ['Finland', 'Slovakia', 'Uruguay', 'Czech Republic', 'France', 'Malaysia',\n",
        "      'North Macedonia'],\n",
        " 17: ['Sweden', 'Netherlands', 'Canada', 'Belgium', 'United Kingdom', 'Estonia',\n",
        "      'Romania', 'Denmark', 'Austria', 'Italy', 'Norway', 'Switzerland'],\n",
        " 18: ['Portugal'],\n",
        " 19: ['Germany']}\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=17)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "14"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{17: ['Sweden', 'Netherlands', 'Canada', 'Belgium', 'United Kingdom', 'Estonia',\n",
        "      'Romania', 'Denmark', 'Austria', 'Italy', 'Norway', 'Switzerland'],\n",
        " 18: ['Portugal'],\n",
        " 19: ['Germany']}\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"19\" valign=\"top\">Germany</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jan2020</td>\n",
        "      <td>22Mar2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Mar2020</td>\n",
        "      <td>02Apr2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Apr2020</td>\n",
        "      <td>20Apr2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Apr2020</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jun2020</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20Sep2020</td>\n",
        "      <td>10Oct2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Oct2020</td>\n",
        "      <td>20Oct2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Oct2020</td>\n",
        "      <td>27Oct2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Oct2020</td>\n",
        "      <td>03Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Nov2020</td>\n",
        "      <td>10Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Nov2020</td>\n",
        "      <td>17Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Nov2020</td>\n",
        "      <td>24Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Nov2020</td>\n",
        "      <td>01Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Dec2020</td>\n",
        "      <td>08Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Dec2020</td>\n",
        "      <td>15Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Dec2020</td>\n",
        "      <td>21Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>17th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Dec2020</td>\n",
        "      <td>28Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>18th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Dec2020</td>\n",
        "      <td>09Jan2021</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Germany 0th    Past  18Jan2020  22Mar2020    82905782\n",
        "        1st    Past  23Mar2020  02Apr2020    82905782\n",
        "        2nd    Past  03Apr2020  20Apr2020    82905782\n",
        "        3rd    Past  21Apr2020  17Jun2020    82905782\n",
        "        4th    Past  18Jun2020  17Aug2020    82905782\n",
        "        5th    Past  18Aug2020  19Sep2020    82905782\n",
        "        6th    Past  20Sep2020  10Oct2020    82905782\n",
        "        7th    Past  11Oct2020  20Oct2020    82905782\n",
        "        8th    Past  21Oct2020  27Oct2020    82905782\n",
        "        9th    Past  28Oct2020  03Nov2020    82905782\n",
        "        10th   Past  04Nov2020  10Nov2020    82905782\n",
        "        11th   Past  11Nov2020  17Nov2020    82905782\n",
        "        12th   Past  18Nov2020  24Nov2020    82905782\n",
        "        13th   Past  25Nov2020  01Dec2020    82905782\n",
        "        14th   Past  02Dec2020  08Dec2020    82905782\n",
        "        15th   Past  09Dec2020  15Dec2020    82905782\n",
        "        16th   Past  16Dec2020  21Dec2020    82905782\n",
        "        17th   Past  22Dec2020  28Dec2020    82905782\n",
        "        18th   Past  29Dec2020  09Jan2021    82905782"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF, timeout=10)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>\n",
        "Running optimization with 4 CPUs...\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU, 12th phase (25Nov2020 - 02Dec2020): finished  340 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE, 15th phase (11Dec2020 - 20Dec2020): finished  339 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 11th phase (15Nov2020 - 25Nov2020): finished  342 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 15th phase (18Dec2020 - 28Dec2020): finished  342 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  3rd phase (10May2020 - 03Aug2020): finished  322 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 15th phase (24Dec2020 - 02Jan2021): finished  344 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 10th phase (13Nov2020 - 19Nov2020): finished  345 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  7th phase (23Oct2020 - 28Oct2020): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  6th phase (17Oct2020 - 22Oct2020): finished  348 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  8th phase (21Oct2020 - 27Oct2020): finished  346 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 13th phase (11Dec2020 - 17Dec2020): finished  345 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 12th phase (07Dec2020 - 12Dec2020): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  8th phase (29Oct2020 - 04Nov2020): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU, 14th phase (10Dec2020 - 17Dec2020): finished  345 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 14th phase (16Dec2020 - 22Dec2020): finished  345 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  5th phase (24Sep2020 - 08Oct2020): finished  343 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (02Oct2020 - 15Oct2020): finished  344 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 15th phase (28Dec2020 - 02Jan2021): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  3rd phase (26May2020 - 22Jul2020): finished  328 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 15th phase (23Dec2020 - 30Dec2020): finished  346 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  0th phase (15Mar2020 - 15Apr2020): finished  338 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  3rd phase (21Apr2020 - 17Jun2020): finished  324 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE,  6th phase (05Oct2020 - 26Oct2020): finished  339 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  0th phase (22Feb2020 - 09Apr2020): finished  331 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (17Apr2020 - 10May2020): finished  339 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  6th phase (09Oct2020 - 19Oct2020): finished  342 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  9th phase (04Nov2020 - 11Nov2020): finished  344 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  7th phase (08Oct2020 - 24Oct2020): finished  341 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 13th phase (25Nov2020 - 01Dec2020): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  7th phase (08Oct2020 - 13Oct2020): finished  345 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  7th phase (18Oct2020 - 29Oct2020): finished  342 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 13th phase (08Dec2020 - 14Dec2020): finished  346 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (16Oct2020 - 22Oct2020): finished  344 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  7th phase (21Oct2020 - 30Oct2020): finished  343 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  0th phase (05Mar2020 - 28Mar2020): finished  337 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 17th phase (22Dec2020 - 28Dec2020): finished  345 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  1st phase (10Apr2020 - 30Apr2020): finished  338 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (01Apr2020 - 16Apr2020): finished  338 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 13th phase (04Dec2020 - 13Dec2020): finished  340 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (22Oct2020 - 28Oct2020): finished  343 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  6th phase (15Sep2020 - 05Oct2020): finished  340 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 13th phase (10Dec2020 - 15Dec2020): finished  345 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE, 10th phase (30Oct2020 - 08Nov2020): finished  342 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  4th phase (01Oct2020 - 09Oct2020): finished  343 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 11th phase (23Nov2020 - 29Nov2020): finished  323 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU, 13th phase (03Dec2020 - 09Dec2020): finished  298 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  9th phase (20Oct2020 - 25Oct2020): finished  319 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  8th phase (31Oct2020 - 09Nov2020): finished  303 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 14th phase (14Dec2020 - 23Dec2020): finished  339 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 10th phase (09Nov2020 - 22Nov2020): finished  340 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  4th phase (11Sep2020 - 23Sep2020): finished  337 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 10th phase (20Nov2020 - 30Nov2020): finished  335 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  8th phase (30Oct2020 - 05Nov2020): finished  341 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 10th phase (04Nov2020 - 10Nov2020): finished  340 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  4th phase (23Jul2020 - 12Sep2020): finished  323 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (23Oct2020 - 01Nov2020): finished  337 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE, 11th phase (09Nov2020 - 14Nov2020): finished  342 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 11th phase (20Nov2020 - 27Nov2020): finished  340 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  2nd phase (14Apr2020 - 09May2020): finished  330 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  0th phase (11Mar2020 - 09Apr2020): finished  331 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  7th phase (21Oct2020 - 28Oct2020): finished  340 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  3rd phase (10Aug2020 - 01Sep2020): finished  333 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 12th phase (26Nov2020 - 02Dec2020): finished  337 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 16th phase (16Dec2020 - 21Dec2020): finished  338 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  5th phase (03Sep2020 - 20Sep2020): finished  335 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  7th phase (20Oct2020 - 28Oct2020): finished  337 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 16th phase (25Dec2020 - 09Jan2021): finished  332 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (01Sep2020 - 24Sep2020): finished  329 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  1st phase (30Mar2020 - 13Apr2020): finished  334 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (13Oct2020 - 21Oct2020): finished  336 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 15th phase (09Dec2020 - 15Dec2020): finished  333 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE,  5th phase (13Aug2020 - 04Oct2020): finished  319 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  2nd phase (10Aug2020 - 16Sep2020): finished  325 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  6th phase (03Oct2020 - 12Oct2020): finished  334 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE,  4th phase (25Jun2020 - 12Aug2020): finished  315 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  5th phase (24Sep2020 - 07Oct2020): finished  330 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 15th phase (14Dec2020 - 26Dec2020): finished  331 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  6th phase (20Sep2020 - 10Oct2020): finished  329 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 13th phase (16Nov2020 - 29Nov2020): finished  327 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 11th phase (01Dec2020 - 06Dec2020): finished  332 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE,  7th phase (27Oct2020 - 03Nov2020): finished  332 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 19Mar2020): finished  326 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  0th phase (06Mar2020 - 05Apr2020): finished  320 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 16th phase (01Jan2021 - 09Jan2021): finished  329 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  5th phase (13Sep2020 - 03Oct2020): finished  325 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 11th phase (01Nov2020 - 07Nov2020): finished  330 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  7th phase (11Oct2020 - 20Oct2020): finished  323 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  5th phase (13Sep2020 - 28Sep2020): finished  323 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  0th phase (18Mar2020 - 01Apr2020): finished  299 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  3rd phase (28May2020 - 07Aug2020): finished  287 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 12th phase (08Nov2020 - 15Nov2020): finished  315 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  6th phase (08Oct2020 - 20Oct2020): finished  302 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  6th phase (21Sep2020 - 07Oct2020): finished  322 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  1st phase (22Mar2020 - 30Mar2020): finished  323 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  0th phase (10Mar2020 - 24Mar2020): finished  318 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  3rd phase (25Aug2020 - 14Sep2020): finished  315 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  0th phase (03Mar2020 - 21Mar2020): finished  319 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 15th phase (15Dec2020 - 24Dec2020): finished  325 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (10Jul2020 - 31Aug2020): finished  308 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (02Nov2020 - 11Nov2020): finished  322 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 12th phase (28Nov2020 - 05Dec2020): finished  326 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  1st phase (25Mar2020 - 04Apr2020): finished  321 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 10th phase (05Nov2020 - 14Nov2020): finished  319 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE, 16th phase (21Dec2020 - 09Jan2021): finished  316 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  9th phase (05Nov2020 - 11Nov2020): finished  320 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 13th phase (27Nov2020 - 06Dec2020): finished  322 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (24Apr2020 - 05Jun2020): finished  308 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  3rd phase (04Jun2020 - 24Aug2020): finished  298 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 12th phase (18Nov2020 - 24Nov2020): finished  322 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE, 14th phase (01Dec2020 - 10Dec2020): finished  321 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  6th phase (04Oct2020 - 17Oct2020): finished  320 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  3rd phase (01May2020 - 04Aug2020): finished  295 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 12th phase (04Dec2020 - 10Dec2020): finished  324 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  2nd phase (03Apr2020 - 20Apr2020): finished  317 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 11th phase (11Nov2020 - 17Nov2020): finished  321 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  3rd phase (15Apr2020 - 22Jul2020): finished  291 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  4th phase (02Sep2020 - 23Sep2020): finished  317 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 16th phase (27Dec2020 - 09Jan2021): finished  318 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 14th phase (21Dec2020 - 27Dec2020): finished  321 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  3rd phase (17Sep2020 - 30Sep2020): finished  317 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  0th phase (04Mar2020 - 06May2020): finished  306 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 14th phase (18Dec2020 - 24Dec2020): finished  321 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (11May2020 - 29Aug2020): finished  288 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 14th phase (30Nov2020 - 13Dec2020): finished  316 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  0th phase (14Mar2020 - 03Apr2020): finished  314 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  2nd phase (06May2020 - 06Aug2020): finished  295 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (25Sep2020 - 12Oct2020): finished  316 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  9th phase (02Nov2020 - 08Nov2020): finished  319 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE,  0th phase (20Feb2020 - 15Apr2020): finished  316 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 10th phase (12Nov2020 - 17Nov2020): finished  323 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  2nd phase (17Jul2020 - 09Aug2020): finished  313 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE, 13th phase (25Nov2020 - 30Nov2020): finished  319 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 13th phase (06Dec2020 - 11Dec2020): finished  310 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  6th phase (29Sep2020 - 07Oct2020): finished  304 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 10th phase (26Oct2020 - 31Oct2020): finished  302 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  4th phase (25Aug2020 - 17Sep2020): finished  290 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  2nd phase (13Jul2020 - 24Aug2020): finished  305 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 14th phase (02Dec2020 - 08Dec2020): finished  320 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  4th phase (04Aug2020 - 12Sep2020): finished  304 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  9th phase (10Nov2020 - 19Nov2020): finished  316 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  0th phase (04Mar2020 - 29Mar2020): finished  308 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 16th phase (31Dec2020 - 09Jan2021): finished  319 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  8th phase (30Oct2020 - 09Nov2020): finished  317 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 12th phase (24Nov2020 - 03Dec2020): finished  316 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 10th phase (12Nov2020 - 19Nov2020): finished  318 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  8th phase (25Oct2020 - 01Nov2020): finished  320 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  9th phase (06Nov2020 - 11Nov2020): finished  319 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 12th phase (30Nov2020 - 07Dec2020): finished  317 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 13th phase (13Dec2020 - 20Dec2020): finished  319 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  5th phase (18Aug2020 - 19Sep2020): finished  311 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  3rd phase (07Aug2020 - 10Sep2020): finished  308 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  5th phase (10Oct2020 - 16Oct2020): finished  317 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  7th phase (13Oct2020 - 20Oct2020): finished  319 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 15th phase (25Dec2020 - 31Dec2020): finished  316 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (30Aug2020 - 01Oct2020): finished  300 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  6th phase (01Oct2020 - 19Oct2020): finished  308 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  4th phase (05Aug2020 - 02Sep2020): finished  293 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  1st phase (16Apr2020 - 09Aug2020): finished  274 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  5th phase (01Oct2020 - 12Oct2020): finished  297 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (20Mar2020 - 31Mar2020): finished  301 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  2nd phase (17Apr2020 - 03Jun2020): finished  299 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 11th phase (27Nov2020 - 03Dec2020): finished  316 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 14th phase (07Dec2020 - 14Dec2020): finished  313 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (12Nov2020 - 21Nov2020): finished  312 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  7th phase (06Oct2020 - 13Oct2020): finished  313 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  4th phase (15Sep2020 - 30Sep2020): finished  313 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  1st phase (06Apr2020 - 05May2020): finished  304 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE, 12th phase (15Nov2020 - 24Nov2020): finished  313 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE,  3rd phase (08Jun2020 - 24Jun2020): finished  308 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  1st phase (23Mar2020 - 02Apr2020): finished  314 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  2nd phase (01May2020 - 27May2020): finished  306 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  5th phase (17Sep2020 - 02Oct2020): finished  311 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  4th phase (18Jun2020 - 17Aug2020): finished  297 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  9th phase (28Oct2020 - 03Nov2020): finished  317 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE,  2nd phase (13May2020 - 07Jun2020): finished  309 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSWE,  1st phase (16Apr2020 - 12May2020): finished  308 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 11th phase (20Nov2020 - 26Nov2020): finished  313 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  2nd phase (01May2020 - 25May2020): finished  309 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  9th phase (05Nov2020 - 12Nov2020): finished  314 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  8th phase (29Oct2020 - 03Nov2020): finished  316 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  2nd phase (31Mar2020 - 14Apr2020): finished  292 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 10th phase (19Nov2020 - 26Nov2020): finished  294 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  8th phase (14Oct2020 - 19Oct2020): finished  298 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  7th phase (20Oct2020 - 29Oct2020): finished  290 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 12th phase (18Nov2020 - 26Nov2020): finished  324 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 11th phase (18Nov2020 - 23Nov2020): finished  327 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR, 14th phase (15Dec2020 - 21Dec2020): finished  330 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  1st phase (07May2020 - 16Jul2020): finished  307 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  9th phase (10Nov2020 - 18Nov2020): finished  329 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (06Jun2020 - 09Jul2020): finished  321 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  5th phase (18Sep2020 - 30Sep2020): finished  328 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  4th phase (23Jul2020 - 24Aug2020): finished  324 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  1st phase (29Mar2020 - 12Jul2020): finished  298 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (04Apr2020 - 23Apr2020): finished  325 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 16th phase (03Jan2021 - 09Jan2021): finished  333 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  4th phase (08Aug2020 - 16Sep2020): finished  322 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  1st phase (02Apr2020 - 16Apr2020): finished  327 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 11th phase (22Nov2020 - 02Dec2020): finished  333 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNOR,  2nd phase (05Apr2020 - 30Apr2020): finished  324 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  0th phase (18Jan2020 - 22Mar2020): finished  315 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 14th phase (12Dec2020 - 17Dec2020): finished  337 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 18th phase (29Dec2020 - 09Jan2021): finished  331 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 9 min 13 sec\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"19\" valign=\"top\">Germany</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jan2020</td>\n",
        "      <td>22Mar2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.90</td>\n",
        "      <td>0.002491</td>\n",
        "      <td>0.000741</td>\n",
        "      <td>0.017438</td>\n",
        "      <td>0.003718</td>\n",
        "      <td>360</td>\n",
        "      <td>0.002</td>\n",
        "      <td>337</td>\n",
        "      <td>67</td>\n",
        "      <td>14</td>\n",
        "      <td>1.392700</td>\n",
        "      <td>315</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Mar2020</td>\n",
        "      <td>02Apr2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>6.02</td>\n",
        "      <td>0.027390</td>\n",
        "      <td>0.000598</td>\n",
        "      <td>0.028053</td>\n",
        "      <td>0.003935</td>\n",
        "      <td>360</td>\n",
        "      <td>0.027</td>\n",
        "      <td>418</td>\n",
        "      <td>63</td>\n",
        "      <td>8</td>\n",
        "      <td>0.135399</td>\n",
        "      <td>314</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Apr2020</td>\n",
        "      <td>20Apr2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.70</td>\n",
        "      <td>0.033746</td>\n",
        "      <td>0.000555</td>\n",
        "      <td>0.013340</td>\n",
        "      <td>0.017964</td>\n",
        "      <td>360</td>\n",
        "      <td>0.034</td>\n",
        "      <td>450</td>\n",
        "      <td>13</td>\n",
        "      <td>18</td>\n",
        "      <td>0.087361</td>\n",
        "      <td>317</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Apr2020</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.56</td>\n",
        "      <td>0.000574</td>\n",
        "      <td>0.000426</td>\n",
        "      <td>0.013803</td>\n",
        "      <td>0.024244</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>586</td>\n",
        "      <td>10</td>\n",
        "      <td>18</td>\n",
        "      <td>0.099722</td>\n",
        "      <td>324</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jun2020</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.15</td>\n",
        "      <td>0.022454</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.018746</td>\n",
        "      <td>0.015900</td>\n",
        "      <td>360</td>\n",
        "      <td>0.022</td>\n",
        "      <td>54770</td>\n",
        "      <td>15</td>\n",
        "      <td>13</td>\n",
        "      <td>0.126592</td>\n",
        "      <td>297</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.20</td>\n",
        "      <td>0.000066</td>\n",
        "      <td>0.000152</td>\n",
        "      <td>0.016936</td>\n",
        "      <td>0.013920</td>\n",
        "      <td>360</td>\n",
        "      <td>0.000</td>\n",
        "      <td>1648</td>\n",
        "      <td>17</td>\n",
        "      <td>14</td>\n",
        "      <td>0.043142</td>\n",
        "      <td>311</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20Sep2020</td>\n",
        "      <td>10Oct2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.52</td>\n",
        "      <td>0.002473</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.019209</td>\n",
        "      <td>0.012520</td>\n",
        "      <td>360</td>\n",
        "      <td>0.002</td>\n",
        "      <td>2685</td>\n",
        "      <td>19</td>\n",
        "      <td>13</td>\n",
        "      <td>0.030677</td>\n",
        "      <td>329</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Oct2020</td>\n",
        "      <td>20Oct2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.99</td>\n",
        "      <td>0.000438</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.028146</td>\n",
        "      <td>0.009179</td>\n",
        "      <td>360</td>\n",
        "      <td>0.000</td>\n",
        "      <td>1064</td>\n",
        "      <td>27</td>\n",
        "      <td>8</td>\n",
        "      <td>0.021767</td>\n",
        "      <td>323</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Oct2020</td>\n",
        "      <td>27Oct2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.81</td>\n",
        "      <td>0.002290</td>\n",
        "      <td>0.000381</td>\n",
        "      <td>0.025859</td>\n",
        "      <td>0.008814</td>\n",
        "      <td>360</td>\n",
        "      <td>0.002</td>\n",
        "      <td>655</td>\n",
        "      <td>28</td>\n",
        "      <td>9</td>\n",
        "      <td>0.020564</td>\n",
        "      <td>346</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Oct2020</td>\n",
        "      <td>03Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.34</td>\n",
        "      <td>0.018240</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.020268</td>\n",
        "      <td>0.008453</td>\n",
        "      <td>360</td>\n",
        "      <td>0.018</td>\n",
        "      <td>6162</td>\n",
        "      <td>29</td>\n",
        "      <td>12</td>\n",
        "      <td>0.026275</td>\n",
        "      <td>317</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Nov2020</td>\n",
        "      <td>10Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.57</td>\n",
        "      <td>0.000120</td>\n",
        "      <td>0.000229</td>\n",
        "      <td>0.019033</td>\n",
        "      <td>0.011917</td>\n",
        "      <td>360</td>\n",
        "      <td>0.000</td>\n",
        "      <td>1093</td>\n",
        "      <td>20</td>\n",
        "      <td>13</td>\n",
        "      <td>0.014659</td>\n",
        "      <td>340</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Nov2020</td>\n",
        "      <td>17Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.06</td>\n",
        "      <td>0.014710</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.018063</td>\n",
        "      <td>0.016807</td>\n",
        "      <td>360</td>\n",
        "      <td>0.015</td>\n",
        "      <td>17587</td>\n",
        "      <td>14</td>\n",
        "      <td>13</td>\n",
        "      <td>0.015499</td>\n",
        "      <td>321</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Nov2020</td>\n",
        "      <td>24Nov2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.96</td>\n",
        "      <td>0.002696</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.017904</td>\n",
        "      <td>0.018209</td>\n",
        "      <td>360</td>\n",
        "      <td>0.003</td>\n",
        "      <td>830</td>\n",
        "      <td>13</td>\n",
        "      <td>13</td>\n",
        "      <td>0.015456</td>\n",
        "      <td>322</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Nov2020</td>\n",
        "      <td>01Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.017786</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.017007</td>\n",
        "      <td>0.019053</td>\n",
        "      <td>360</td>\n",
        "      <td>0.018</td>\n",
        "      <td>6171</td>\n",
        "      <td>13</td>\n",
        "      <td>14</td>\n",
        "      <td>0.014568</td>\n",
        "      <td>347</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Dec2020</td>\n",
        "      <td>08Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.88</td>\n",
        "      <td>0.015989</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.018249</td>\n",
        "      <td>0.020225</td>\n",
        "      <td>360</td>\n",
        "      <td>0.016</td>\n",
        "      <td>3150</td>\n",
        "      <td>12</td>\n",
        "      <td>13</td>\n",
        "      <td>0.018716</td>\n",
        "      <td>320</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Dec2020</td>\n",
        "      <td>15Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.21</td>\n",
        "      <td>0.018388</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.019743</td>\n",
        "      <td>0.015837</td>\n",
        "      <td>360</td>\n",
        "      <td>0.018</td>\n",
        "      <td>1545</td>\n",
        "      <td>15</td>\n",
        "      <td>12</td>\n",
        "      <td>0.013246</td>\n",
        "      <td>333</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Dec2020</td>\n",
        "      <td>21Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.15</td>\n",
        "      <td>0.002291</td>\n",
        "      <td>0.000381</td>\n",
        "      <td>0.017935</td>\n",
        "      <td>0.015204</td>\n",
        "      <td>360</td>\n",
        "      <td>0.002</td>\n",
        "      <td>655</td>\n",
        "      <td>16</td>\n",
        "      <td>13</td>\n",
        "      <td>0.012958</td>\n",
        "      <td>338</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>17th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Dec2020</td>\n",
        "      <td>28Dec2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.74</td>\n",
        "      <td>0.000237</td>\n",
        "      <td>0.000257</td>\n",
        "      <td>0.012922</td>\n",
        "      <td>0.017303</td>\n",
        "      <td>360</td>\n",
        "      <td>0.000</td>\n",
        "      <td>974</td>\n",
        "      <td>14</td>\n",
        "      <td>19</td>\n",
        "      <td>0.028261</td>\n",
        "      <td>345</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>18th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Dec2020</td>\n",
        "      <td>09Jan2021</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.62</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.000152</td>\n",
        "      <td>0.012783</td>\n",
        "      <td>0.020558</td>\n",
        "      <td>360</td>\n",
        "      <td>0.000</td>\n",
        "      <td>1645</td>\n",
        "      <td>12</td>\n",
        "      <td>19</td>\n",
        "      <td>0.047643</td>\n",
        "      <td>331</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt     theta  \\\n",
        "Country Phase                                                                  \n",
        "Germany 0th    Past  18Jan2020  22Mar2020    82905782  SIR-F  3.90  0.002491   \n",
        "        1st    Past  23Mar2020  02Apr2020    82905782  SIR-F  6.02  0.027390   \n",
        "        2nd    Past  03Apr2020  20Apr2020    82905782  SIR-F  0.70  0.033746   \n",
        "        3rd    Past  21Apr2020  17Jun2020    82905782  SIR-F  0.56  0.000574   \n",
        "        4th    Past  18Jun2020  17Aug2020    82905782  SIR-F  1.15  0.022454   \n",
        "        5th    Past  18Aug2020  19Sep2020    82905782  SIR-F  1.20  0.000066   \n",
        "        6th    Past  20Sep2020  10Oct2020    82905782  SIR-F  1.52  0.002473   \n",
        "        7th    Past  11Oct2020  20Oct2020    82905782  SIR-F  2.99  0.000438   \n",
        "        8th    Past  21Oct2020  27Oct2020    82905782  SIR-F  2.81  0.002290   \n",
        "        9th    Past  28Oct2020  03Nov2020    82905782  SIR-F  2.34  0.018240   \n",
        "        10th   Past  04Nov2020  10Nov2020    82905782  SIR-F  1.57  0.000120   \n",
        "        11th   Past  11Nov2020  17Nov2020    82905782  SIR-F  1.06  0.014710   \n",
        "        12th   Past  18Nov2020  24Nov2020    82905782  SIR-F  0.96  0.002696   \n",
        "        13th   Past  25Nov2020  01Dec2020    82905782  SIR-F  0.87  0.017786   \n",
        "        14th   Past  02Dec2020  08Dec2020    82905782  SIR-F  0.88  0.015989   \n",
        "        15th   Past  09Dec2020  15Dec2020    82905782  SIR-F  1.21  0.018388   \n",
        "        16th   Past  16Dec2020  21Dec2020    82905782  SIR-F  1.15  0.002291   \n",
        "        17th   Past  22Dec2020  28Dec2020    82905782  SIR-F  0.74  0.000237   \n",
        "        18th   Past  29Dec2020  09Jan2021    82905782  SIR-F  0.62  0.000067   \n",
        "\n",
        "                  kappa       rho     sigma  tau  alpha1 [-]  1/alpha2 [day]  \\\n",
        "Country Phase                                                                  \n",
        "Germany 0th    0.000741  0.017438  0.003718  360       0.002             337   \n",
        "        1st    0.000598  0.028053  0.003935  360       0.027             418   \n",
        "        2nd    0.000555  0.013340  0.017964  360       0.034             450   \n",
        "        3rd    0.000426  0.013803  0.024244  360       0.001             586   \n",
        "        4th    0.000005  0.018746  0.015900  360       0.022           54770   \n",
        "        5th    0.000152  0.016936  0.013920  360       0.000            1648   \n",
        "        6th    0.000093  0.019209  0.012520  360       0.002            2685   \n",
        "        7th    0.000235  0.028146  0.009179  360       0.000            1064   \n",
        "        8th    0.000381  0.025859  0.008814  360       0.002             655   \n",
        "        9th    0.000041  0.020268  0.008453  360       0.018            6162   \n",
        "        10th   0.000229  0.019033  0.011917  360       0.000            1093   \n",
        "        11th   0.000014  0.018063  0.016807  360       0.015           17587   \n",
        "        12th   0.000301  0.017904  0.018209  360       0.003             830   \n",
        "        13th   0.000041  0.017007  0.019053  360       0.018            6171   \n",
        "        14th   0.000079  0.018249  0.020225  360       0.016            3150   \n",
        "        15th   0.000162  0.019743  0.015837  360       0.018            1545   \n",
        "        16th   0.000381  0.017935  0.015204  360       0.002             655   \n",
        "        17th   0.000257  0.012922  0.017303  360       0.000             974   \n",
        "        18th   0.000152  0.012783  0.020558  360       0.000            1645   \n",
        "\n",
        "               1/gamma [day]  1/beta [day]     RMSLE  Trials       Runtime  \n",
        "Country Phase                                                               \n",
        "Germany 0th               67            14  1.392700     315  0 min 10 sec  \n",
        "        1st               63             8  0.135399     314  0 min 10 sec  \n",
        "        2nd               13            18  0.087361     317  0 min 10 sec  \n",
        "        3rd               10            18  0.099722     324  0 min 10 sec  \n",
        "        4th               15            13  0.126592     297  0 min 10 sec  \n",
        "        5th               17            14  0.043142     311  0 min 10 sec  \n",
        "        6th               19            13  0.030677     329  0 min 10 sec  \n",
        "        7th               27             8  0.021767     323  0 min 10 sec  \n",
        "        8th               28             9  0.020564     346  0 min 10 sec  \n",
        "        9th               29            12  0.026275     317  0 min 10 sec  \n",
        "        10th              20            13  0.014659     340  0 min 10 sec  \n",
        "        11th              14            13  0.015499     321  0 min 10 sec  \n",
        "        12th              13            13  0.015456     322  0 min 10 sec  \n",
        "        13th              13            14  0.014568     347  0 min 10 sec  \n",
        "        14th              12            13  0.018716     320  0 min 10 sec  \n",
        "        15th              15            12  0.013246     333  0 min 10 sec  \n",
        "        16th              16            13  0.012958     338  0 min 10 sec  \n",
        "        17th              14            19  0.028261     345  0 min 10 sec  \n",
        "        18th              12            19  0.047643     331  0 min 10 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-01-18</td>\n",
        "      <td>Germany</td>\n",
        "      <td>0.002491</td>\n",
        "      <td>0.000741</td>\n",
        "      <td>0.017438</td>\n",
        "      <td>0.003718</td>\n",
        "      <td>0.002</td>\n",
        "      <td>337</td>\n",
        "      <td>14</td>\n",
        "      <td>67</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-01-18</td>\n",
        "      <td>Germany</td>\n",
        "      <td>0.002491</td>\n",
        "      <td>0.000741</td>\n",
        "      <td>0.017438</td>\n",
        "      <td>0.003718</td>\n",
        "      <td>0.002</td>\n",
        "      <td>337</td>\n",
        "      <td>14</td>\n",
        "      <td>67</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-01-18</td>\n",
        "      <td>Germany</td>\n",
        "      <td>0.002491</td>\n",
        "      <td>0.000741</td>\n",
        "      <td>0.017438</td>\n",
        "      <td>0.003718</td>\n",
        "      <td>0.002</td>\n",
        "      <td>337</td>\n",
        "      <td>14</td>\n",
        "      <td>67</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-01-18</td>\n",
        "      <td>Germany</td>\n",
        "      <td>0.002491</td>\n",
        "      <td>0.000741</td>\n",
        "      <td>0.017438</td>\n",
        "      <td>0.003718</td>\n",
        "      <td>0.002</td>\n",
        "      <td>337</td>\n",
        "      <td>14</td>\n",
        "      <td>67</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-01-18</td>\n",
        "      <td>Germany</td>\n",
        "      <td>0.002491</td>\n",
        "      <td>0.000741</td>\n",
        "      <td>0.017438</td>\n",
        "      <td>0.003718</td>\n",
        "      <td>0.002</td>\n",
        "      <td>337</td>\n",
        "      <td>14</td>\n",
        "      <td>67</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date  Country     theta     kappa       rho     sigma alpha1 [-]  \\\n",
        "0 2020-01-18  Germany  0.002491  0.000741  0.017438  0.003718      0.002   \n",
        "1 2020-01-18  Germany  0.002491  0.000741  0.017438  0.003718      0.002   \n",
        "2 2020-01-18  Germany  0.002491  0.000741  0.017438  0.003718      0.002   \n",
        "3 2020-01-18  Germany  0.002491  0.000741  0.017438  0.003718      0.002   \n",
        "4 2020-01-18  Germany  0.002491  0.000741  0.017438  0.003718      0.002   \n",
        "\n",
        "  1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0            337           14            67  ...             0   \n",
        "1            337           14            67  ...             0   \n",
        "2            337           14            67  ...             0   \n",
        "3            337           14            67  ...             0   \n",
        "4            337           14            67  ...             0   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        0                  0                       0   \n",
        "4                        0                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    0   \n",
        "1                               0                                    0   \n",
        "2                               0                                    0   \n",
        "3                               0                                    0   \n",
        "4                               0                                    0   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      0               0                0               0.0  \n",
        "1                      0               0                0               0.0  \n",
        "2                      0               0                0               0.0  \n",
        "3                      0               0                0               0.0  \n",
        "4                      0               0                0               0.0  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Norway</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Sweden</th>\n",
        "      <th>Switzerland</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2021-01-05</th>\n",
        "      <td>1.11</td>\n",
        "      <td>2.61</td>\n",
        "      <td>1.01</td>\n",
        "      <td>1.19</td>\n",
        "      <td>1.07</td>\n",
        "      <td>0.62</td>\n",
        "      <td>1.07</td>\n",
        "      <td>1.55</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.75</td>\n",
        "      <td>0.82</td>\n",
        "      <td>3.79</td>\n",
        "      <td>15.71</td>\n",
        "      <td>1.98</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-06</th>\n",
        "      <td>1.11</td>\n",
        "      <td>2.61</td>\n",
        "      <td>1.01</td>\n",
        "      <td>1.19</td>\n",
        "      <td>1.07</td>\n",
        "      <td>0.62</td>\n",
        "      <td>1.07</td>\n",
        "      <td>1.55</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.75</td>\n",
        "      <td>0.82</td>\n",
        "      <td>3.79</td>\n",
        "      <td>15.71</td>\n",
        "      <td>1.98</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-07</th>\n",
        "      <td>1.11</td>\n",
        "      <td>2.61</td>\n",
        "      <td>1.01</td>\n",
        "      <td>1.19</td>\n",
        "      <td>1.07</td>\n",
        "      <td>0.62</td>\n",
        "      <td>1.07</td>\n",
        "      <td>1.55</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.75</td>\n",
        "      <td>0.82</td>\n",
        "      <td>3.79</td>\n",
        "      <td>15.71</td>\n",
        "      <td>1.98</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-08</th>\n",
        "      <td>1.11</td>\n",
        "      <td>2.61</td>\n",
        "      <td>1.01</td>\n",
        "      <td>1.19</td>\n",
        "      <td>1.07</td>\n",
        "      <td>0.62</td>\n",
        "      <td>1.07</td>\n",
        "      <td>1.55</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.75</td>\n",
        "      <td>0.82</td>\n",
        "      <td>3.79</td>\n",
        "      <td>15.71</td>\n",
        "      <td>1.98</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-09</th>\n",
        "      <td>1.11</td>\n",
        "      <td>2.61</td>\n",
        "      <td>1.01</td>\n",
        "      <td>1.19</td>\n",
        "      <td>1.07</td>\n",
        "      <td>0.62</td>\n",
        "      <td>1.07</td>\n",
        "      <td>1.55</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.75</td>\n",
        "      <td>0.82</td>\n",
        "      <td>3.79</td>\n",
        "      <td>15.71</td>\n",
        "      <td>1.98</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Austria  Belgium  Canada  Denmark  Estonia  Germany  Italy  \\\n",
        "Date                                                                     \n",
        "2021-01-05     1.11     2.61    1.01     1.19     1.07     0.62   1.07   \n",
        "2021-01-06     1.11     2.61    1.01     1.19     1.07     0.62   1.07   \n",
        "2021-01-07     1.11     2.61    1.01     1.19     1.07     0.62   1.07   \n",
        "2021-01-08     1.11     2.61    1.01     1.19     1.07     0.62   1.07   \n",
        "2021-01-09     1.11     2.61    1.01     1.19     1.07     0.62   1.07   \n",
        "\n",
        "Country     Netherlands  Norway  Portugal  Romania  Sweden  Switzerland  \\\n",
        "Date                                                                      \n",
        "2021-01-05         1.55    1.02      0.75     0.82    3.79        15.71   \n",
        "2021-01-06         1.55    1.02      0.75     0.82    3.79        15.71   \n",
        "2021-01-07         1.55    1.02      0.75     0.82    3.79        15.71   \n",
        "2021-01-08         1.55    1.02      0.75     0.82    3.79        15.71   \n",
        "2021-01-09         1.55    1.02      0.75     0.82    3.79        15.71   \n",
        "\n",
        "Country     United Kingdom  \n",
        "Date                        \n",
        "2021-01-05            1.98  \n",
        "2021-01-06            1.98  \n",
        "2021-01-07            1.98  \n",
        "2021-01-08            1.98  \n",
        "2021-01-09            1.98  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Norway</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Sweden</th>\n",
        "      <th>Switzerland</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2021-01-05</th>\n",
        "      <td>0.021162</td>\n",
        "      <td>0.000997</td>\n",
        "      <td>0.024506</td>\n",
        "      <td>0.020485</td>\n",
        "      <td>0.014108</td>\n",
        "      <td>0.012783</td>\n",
        "      <td>0.007454</td>\n",
        "      <td>0.018163</td>\n",
        "      <td>0.016911</td>\n",
        "      <td>0.011522</td>\n",
        "      <td>0.018264</td>\n",
        "      <td>0.030468</td>\n",
        "      <td>0.006913</td>\n",
        "      <td>0.022098</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-06</th>\n",
        "      <td>0.021162</td>\n",
        "      <td>0.000997</td>\n",
        "      <td>0.024506</td>\n",
        "      <td>0.020485</td>\n",
        "      <td>0.014108</td>\n",
        "      <td>0.012783</td>\n",
        "      <td>0.007454</td>\n",
        "      <td>0.018163</td>\n",
        "      <td>0.016911</td>\n",
        "      <td>0.011522</td>\n",
        "      <td>0.018264</td>\n",
        "      <td>0.030468</td>\n",
        "      <td>0.006913</td>\n",
        "      <td>0.022098</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-07</th>\n",
        "      <td>0.021162</td>\n",
        "      <td>0.000997</td>\n",
        "      <td>0.024506</td>\n",
        "      <td>0.020485</td>\n",
        "      <td>0.014108</td>\n",
        "      <td>0.012783</td>\n",
        "      <td>0.007454</td>\n",
        "      <td>0.018163</td>\n",
        "      <td>0.016911</td>\n",
        "      <td>0.011522</td>\n",
        "      <td>0.018264</td>\n",
        "      <td>0.030468</td>\n",
        "      <td>0.006913</td>\n",
        "      <td>0.022098</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-08</th>\n",
        "      <td>0.021162</td>\n",
        "      <td>0.000997</td>\n",
        "      <td>0.024506</td>\n",
        "      <td>0.020485</td>\n",
        "      <td>0.014108</td>\n",
        "      <td>0.012783</td>\n",
        "      <td>0.007454</td>\n",
        "      <td>0.018163</td>\n",
        "      <td>0.016911</td>\n",
        "      <td>0.011522</td>\n",
        "      <td>0.018264</td>\n",
        "      <td>0.030468</td>\n",
        "      <td>0.006913</td>\n",
        "      <td>0.022098</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-09</th>\n",
        "      <td>0.021162</td>\n",
        "      <td>0.000997</td>\n",
        "      <td>0.024506</td>\n",
        "      <td>0.020485</td>\n",
        "      <td>0.014108</td>\n",
        "      <td>0.012783</td>\n",
        "      <td>0.007454</td>\n",
        "      <td>0.018163</td>\n",
        "      <td>0.016911</td>\n",
        "      <td>0.011522</td>\n",
        "      <td>0.018264</td>\n",
        "      <td>0.030468</td>\n",
        "      <td>0.006913</td>\n",
        "      <td>0.022098</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Austria   Belgium    Canada   Denmark   Estonia   Germany  \\\n",
        "Date                                                                     \n",
        "2021-01-05  0.021162  0.000997  0.024506  0.020485  0.014108  0.012783   \n",
        "2021-01-06  0.021162  0.000997  0.024506  0.020485  0.014108  0.012783   \n",
        "2021-01-07  0.021162  0.000997  0.024506  0.020485  0.014108  0.012783   \n",
        "2021-01-08  0.021162  0.000997  0.024506  0.020485  0.014108  0.012783   \n",
        "2021-01-09  0.021162  0.000997  0.024506  0.020485  0.014108  0.012783   \n",
        "\n",
        "Country        Italy  Netherlands    Norway  Portugal   Romania    Sweden  \\\n",
        "Date                                                                        \n",
        "2021-01-05  0.007454     0.018163  0.016911  0.011522  0.018264  0.030468   \n",
        "2021-01-06  0.007454     0.018163  0.016911  0.011522  0.018264  0.030468   \n",
        "2021-01-07  0.007454     0.018163  0.016911  0.011522  0.018264  0.030468   \n",
        "2021-01-08  0.007454     0.018163  0.016911  0.011522  0.018264  0.030468   \n",
        "2021-01-09  0.007454     0.018163  0.016911  0.011522  0.018264  0.030468   \n",
        "\n",
        "Country     Switzerland  United Kingdom  \n",
        "Date                                     \n",
        "2021-01-05     0.006913        0.022098  \n",
        "2021-01-06     0.006913        0.022098  \n",
        "2021-01-07     0.006913        0.022098  \n",
        "2021-01-08     0.006913        0.022098  \n",
        "2021-01-09     0.006913        0.022098  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Norway</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Sweden</th>\n",
        "      <th>Switzerland</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2021-01-05</th>\n",
        "      <td>0.018669</td>\n",
        "      <td>0.000279</td>\n",
        "      <td>0.023749</td>\n",
        "      <td>0.017145</td>\n",
        "      <td>0.01308</td>\n",
        "      <td>0.020558</td>\n",
        "      <td>0.006815</td>\n",
        "      <td>0.011574</td>\n",
        "      <td>0.016419</td>\n",
        "      <td>0.01507</td>\n",
        "      <td>0.02176</td>\n",
        "      <td>0.007805</td>\n",
        "      <td>0.000377</td>\n",
        "      <td>0.010929</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-06</th>\n",
        "      <td>0.018669</td>\n",
        "      <td>0.000279</td>\n",
        "      <td>0.023749</td>\n",
        "      <td>0.017145</td>\n",
        "      <td>0.01308</td>\n",
        "      <td>0.020558</td>\n",
        "      <td>0.006815</td>\n",
        "      <td>0.011574</td>\n",
        "      <td>0.016419</td>\n",
        "      <td>0.01507</td>\n",
        "      <td>0.02176</td>\n",
        "      <td>0.007805</td>\n",
        "      <td>0.000377</td>\n",
        "      <td>0.010929</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-07</th>\n",
        "      <td>0.018669</td>\n",
        "      <td>0.000279</td>\n",
        "      <td>0.023749</td>\n",
        "      <td>0.017145</td>\n",
        "      <td>0.01308</td>\n",
        "      <td>0.020558</td>\n",
        "      <td>0.006815</td>\n",
        "      <td>0.011574</td>\n",
        "      <td>0.016419</td>\n",
        "      <td>0.01507</td>\n",
        "      <td>0.02176</td>\n",
        "      <td>0.007805</td>\n",
        "      <td>0.000377</td>\n",
        "      <td>0.010929</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-08</th>\n",
        "      <td>0.018669</td>\n",
        "      <td>0.000279</td>\n",
        "      <td>0.023749</td>\n",
        "      <td>0.017145</td>\n",
        "      <td>0.01308</td>\n",
        "      <td>0.020558</td>\n",
        "      <td>0.006815</td>\n",
        "      <td>0.011574</td>\n",
        "      <td>0.016419</td>\n",
        "      <td>0.01507</td>\n",
        "      <td>0.02176</td>\n",
        "      <td>0.007805</td>\n",
        "      <td>0.000377</td>\n",
        "      <td>0.010929</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-09</th>\n",
        "      <td>0.018669</td>\n",
        "      <td>0.000279</td>\n",
        "      <td>0.023749</td>\n",
        "      <td>0.017145</td>\n",
        "      <td>0.01308</td>\n",
        "      <td>0.020558</td>\n",
        "      <td>0.006815</td>\n",
        "      <td>0.011574</td>\n",
        "      <td>0.016419</td>\n",
        "      <td>0.01507</td>\n",
        "      <td>0.02176</td>\n",
        "      <td>0.007805</td>\n",
        "      <td>0.000377</td>\n",
        "      <td>0.010929</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Austria   Belgium    Canada   Denmark  Estonia   Germany  \\\n",
        "Date                                                                    \n",
        "2021-01-05  0.018669  0.000279  0.023749  0.017145  0.01308  0.020558   \n",
        "2021-01-06  0.018669  0.000279  0.023749  0.017145  0.01308  0.020558   \n",
        "2021-01-07  0.018669  0.000279  0.023749  0.017145  0.01308  0.020558   \n",
        "2021-01-08  0.018669  0.000279  0.023749  0.017145  0.01308  0.020558   \n",
        "2021-01-09  0.018669  0.000279  0.023749  0.017145  0.01308  0.020558   \n",
        "\n",
        "Country        Italy  Netherlands    Norway  Portugal  Romania    Sweden  \\\n",
        "Date                                                                       \n",
        "2021-01-05  0.006815     0.011574  0.016419   0.01507  0.02176  0.007805   \n",
        "2021-01-06  0.006815     0.011574  0.016419   0.01507  0.02176  0.007805   \n",
        "2021-01-07  0.006815     0.011574  0.016419   0.01507  0.02176  0.007805   \n",
        "2021-01-08  0.006815     0.011574  0.016419   0.01507  0.02176  0.007805   \n",
        "2021-01-09  0.006815     0.011574  0.016419   0.01507  0.02176  0.007805   \n",
        "\n",
        "Country     Switzerland  United Kingdom  \n",
        "Date                                     \n",
        "2021-01-05     0.000377        0.010929  \n",
        "2021-01-06     0.000377        0.010929  \n",
        "2021-01-07     0.000377        0.010929  \n",
        "2021-01-08     0.000377        0.010929  \n",
        "2021-01-09     0.000377        0.010929  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Norway</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Sweden</th>\n",
        "      <th>Switzerland</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2021-01-05</th>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000152</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000531</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000257</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-06</th>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000152</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000531</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000257</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-07</th>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000152</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000531</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000257</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-08</th>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000152</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000531</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000257</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-09</th>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000152</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000531</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000257</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country     Austria   Belgium    Canada   Denmark   Estonia   Germany  \\\n",
        "Date                                                                    \n",
        "2021-01-05  0.00007  0.000067  0.000059  0.000096  0.000098  0.000152   \n",
        "2021-01-06  0.00007  0.000067  0.000059  0.000096  0.000098  0.000152   \n",
        "2021-01-07  0.00007  0.000067  0.000059  0.000096  0.000098  0.000152   \n",
        "2021-01-08  0.00007  0.000067  0.000059  0.000096  0.000098  0.000152   \n",
        "2021-01-09  0.00007  0.000067  0.000059  0.000096  0.000098  0.000152   \n",
        "\n",
        "Country        Italy  Netherlands    Norway  Portugal   Romania    Sweden  \\\n",
        "Date                                                                        \n",
        "2021-01-05  0.000168     0.000096  0.000096  0.000041  0.000531  0.000235   \n",
        "2021-01-06  0.000168     0.000096  0.000096  0.000041  0.000531  0.000235   \n",
        "2021-01-07  0.000168     0.000096  0.000096  0.000041  0.000531  0.000235   \n",
        "2021-01-08  0.000168     0.000096  0.000096  0.000041  0.000531  0.000235   \n",
        "2021-01-09  0.000168     0.000096  0.000096  0.000041  0.000531  0.000235   \n",
        "\n",
        "Country     Switzerland  United Kingdom  \n",
        "Date                                     \n",
        "2021-01-05     0.000059        0.000257  \n",
        "2021-01-06     0.000059        0.000257  \n",
        "2021-01-07     0.000059        0.000257  \n",
        "2021-01-08     0.000059        0.000257  \n",
        "2021-01-09     0.000059        0.000257  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Norway</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Sweden</th>\n",
        "      <th>Switzerland</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2021-01-05</th>\n",
        "      <td>0.018055</td>\n",
        "      <td>0.092504</td>\n",
        "      <td>0.019296</td>\n",
        "      <td>0.000683</td>\n",
        "      <td>0.000437</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.000137</td>\n",
        "      <td>0.001223</td>\n",
        "      <td>0.000859</td>\n",
        "      <td>0.017892</td>\n",
        "      <td>0.001643</td>\n",
        "      <td>0.000581</td>\n",
        "      <td>0.008493</td>\n",
        "      <td>0.000256</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-06</th>\n",
        "      <td>0.018055</td>\n",
        "      <td>0.092504</td>\n",
        "      <td>0.019296</td>\n",
        "      <td>0.000683</td>\n",
        "      <td>0.000437</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.000137</td>\n",
        "      <td>0.001223</td>\n",
        "      <td>0.000859</td>\n",
        "      <td>0.017892</td>\n",
        "      <td>0.001643</td>\n",
        "      <td>0.000581</td>\n",
        "      <td>0.008493</td>\n",
        "      <td>0.000256</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-07</th>\n",
        "      <td>0.018055</td>\n",
        "      <td>0.092504</td>\n",
        "      <td>0.019296</td>\n",
        "      <td>0.000683</td>\n",
        "      <td>0.000437</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.000137</td>\n",
        "      <td>0.001223</td>\n",
        "      <td>0.000859</td>\n",
        "      <td>0.017892</td>\n",
        "      <td>0.001643</td>\n",
        "      <td>0.000581</td>\n",
        "      <td>0.008493</td>\n",
        "      <td>0.000256</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-08</th>\n",
        "      <td>0.018055</td>\n",
        "      <td>0.092504</td>\n",
        "      <td>0.019296</td>\n",
        "      <td>0.000683</td>\n",
        "      <td>0.000437</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.000137</td>\n",
        "      <td>0.001223</td>\n",
        "      <td>0.000859</td>\n",
        "      <td>0.017892</td>\n",
        "      <td>0.001643</td>\n",
        "      <td>0.000581</td>\n",
        "      <td>0.008493</td>\n",
        "      <td>0.000256</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2021-01-09</th>\n",
        "      <td>0.018055</td>\n",
        "      <td>0.092504</td>\n",
        "      <td>0.019296</td>\n",
        "      <td>0.000683</td>\n",
        "      <td>0.000437</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.000137</td>\n",
        "      <td>0.001223</td>\n",
        "      <td>0.000859</td>\n",
        "      <td>0.017892</td>\n",
        "      <td>0.001643</td>\n",
        "      <td>0.000581</td>\n",
        "      <td>0.008493</td>\n",
        "      <td>0.000256</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Austria   Belgium    Canada   Denmark   Estonia   Germany  \\\n",
        "Date                                                                     \n",
        "2021-01-05  0.018055  0.092504  0.019296  0.000683  0.000437  0.000067   \n",
        "2021-01-06  0.018055  0.092504  0.019296  0.000683  0.000437  0.000067   \n",
        "2021-01-07  0.018055  0.092504  0.019296  0.000683  0.000437  0.000067   \n",
        "2021-01-08  0.018055  0.092504  0.019296  0.000683  0.000437  0.000067   \n",
        "2021-01-09  0.018055  0.092504  0.019296  0.000683  0.000437  0.000067   \n",
        "\n",
        "Country        Italy  Netherlands    Norway  Portugal   Romania    Sweden  \\\n",
        "Date                                                                        \n",
        "2021-01-05  0.000137     0.001223  0.000859  0.017892  0.001643  0.000581   \n",
        "2021-01-06  0.000137     0.001223  0.000859  0.017892  0.001643  0.000581   \n",
        "2021-01-07  0.000137     0.001223  0.000859  0.017892  0.001643  0.000581   \n",
        "2021-01-08  0.000137     0.001223  0.000859  0.017892  0.001643  0.000581   \n",
        "2021-01-09  0.000137     0.001223  0.000859  0.017892  0.001643  0.000581   \n",
        "\n",
        "Country     Switzerland  United Kingdom  \n",
        "Date                                     \n",
        "2021-01-05     0.008493        0.000256  \n",
        "2021-01-06     0.008493        0.000256  \n",
        "2021-01-07     0.008493        0.000256  \n",
        "2021-01-08     0.008493        0.000256  \n",
        "2021-01-09     0.008493        0.000256  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 52502 entries, 0 to 52683\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 52502 non-null  datetime64[ns]\n",
        " 1   Country                              52502 non-null  object        \n",
        " 2   Rt                                   52502 non-null  float64       \n",
        " 3   theta                                52502 non-null  float64       \n",
        " 4   kappa                                52502 non-null  float64       \n",
        " 5   rho                                  52502 non-null  float64       \n",
        " 6   sigma                                52502 non-null  float64       \n",
        " 7   School_closing                       52502 non-null  int64         \n",
        " 8   Workplace_closing                    52502 non-null  int64         \n",
        " 9   Cancel_events                        52502 non-null  int64         \n",
        " 10  Gatherings_restrictions              52502 non-null  int64         \n",
        " 11  Transport_closing                    52502 non-null  int64         \n",
        " 12  Stay_home_restrictions               52502 non-null  int64         \n",
        " 13  Internal_movement_restrictions       52502 non-null  int64         \n",
        " 14  International_movement_restrictions  52502 non-null  int64         \n",
        " 15  Information_campaigns                52502 non-null  int64         \n",
        " 16  Testing_policy                       52502 non-null  int64         \n",
        " 17  Contact_tracing                      52502 non-null  int64         \n",
        " 18  Stringency_index                     52502 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 8.0+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_7462f_row0_col0,#T_7462f_row1_col1,#T_7462f_row2_col2,#T_7462f_row3_col3,#T_7462f_row4_col4,#T_7462f_row5_col5,#T_7462f_row6_col6,#T_7462f_row7_col7,#T_7462f_row8_col8,#T_7462f_row9_col9,#T_7462f_row10_col10,#T_7462f_row11_col11,#T_7462f_row12_col12,#T_7462f_row13_col13,#T_7462f_row14_col14,#T_7462f_row15_col15,#T_7462f_row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7462f_row0_col1,#T_7462f_row1_col0{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row0_col2,#T_7462f_row2_col0,#T_7462f_row4_col11,#T_7462f_row11_col4{\n",
        "            background-color:  #c9cee4;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row0_col3,#T_7462f_row3_col0,#T_7462f_row6_col10,#T_7462f_row10_col6{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row0_col4,#T_7462f_row4_col0{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row0_col5,#T_7462f_row0_col15,#T_7462f_row5_col0,#T_7462f_row15_col0{\n",
        "            background-color:  #dbdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row0_col6,#T_7462f_row0_col10,#T_7462f_row3_col13,#T_7462f_row6_col0,#T_7462f_row10_col0,#T_7462f_row13_col3{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row0_col7,#T_7462f_row7_col0{\n",
        "            background-color:  #cacee5;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row0_col8,#T_7462f_row8_col0{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row0_col9,#T_7462f_row1_col6,#T_7462f_row1_col12,#T_7462f_row6_col1,#T_7462f_row9_col0,#T_7462f_row12_col1{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row0_col11,#T_7462f_row2_col7,#T_7462f_row7_col2,#T_7462f_row11_col0{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row0_col12,#T_7462f_row12_col0{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row0_col13,#T_7462f_row13_col0{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row0_col14,#T_7462f_row14_col0{\n",
        "            background-color:  #ede8f3;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row0_col16,#T_7462f_row1_col16,#T_7462f_row2_col4,#T_7462f_row3_col16,#T_7462f_row4_col2,#T_7462f_row16_col0,#T_7462f_row16_col1,#T_7462f_row16_col3{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row1_col2,#T_7462f_row2_col1{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7462f_row1_col3,#T_7462f_row3_col1{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row1_col4,#T_7462f_row2_col14,#T_7462f_row3_col4,#T_7462f_row3_col11,#T_7462f_row4_col1,#T_7462f_row4_col3,#T_7462f_row11_col3,#T_7462f_row14_col2{\n",
        "            background-color:  #e6e2ef;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row1_col5,#T_7462f_row5_col1,#T_7462f_row5_col9,#T_7462f_row9_col5,#T_7462f_row11_col15,#T_7462f_row15_col11{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row1_col7,#T_7462f_row7_col1{\n",
        "            background-color:  #bdc8e1;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row1_col8,#T_7462f_row2_col12,#T_7462f_row8_col1,#T_7462f_row12_col2,#T_7462f_row15_col16,#T_7462f_row16_col15{\n",
        "            background-color:  #dfddec;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row1_col9,#T_7462f_row9_col1{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row1_col10,#T_7462f_row10_col1{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row1_col11,#T_7462f_row11_col1{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row1_col13,#T_7462f_row3_col5,#T_7462f_row5_col3,#T_7462f_row13_col1{\n",
        "            background-color:  #e3e0ee;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row1_col14,#T_7462f_row2_col6,#T_7462f_row3_col14,#T_7462f_row6_col2,#T_7462f_row14_col1,#T_7462f_row14_col3{\n",
        "            background-color:  #ece7f2;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row1_col15,#T_7462f_row15_col1{\n",
        "            background-color:  #9ebad9;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row2_col3,#T_7462f_row3_col2,#T_7462f_row9_col13,#T_7462f_row13_col9{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row2_col5,#T_7462f_row5_col2{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row2_col8,#T_7462f_row2_col10,#T_7462f_row2_col11,#T_7462f_row8_col2,#T_7462f_row10_col2,#T_7462f_row11_col2{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row2_col9,#T_7462f_row8_col15,#T_7462f_row9_col2,#T_7462f_row15_col8{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row2_col13,#T_7462f_row13_col2{\n",
        "            background-color:  #f1ebf5;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row2_col15,#T_7462f_row5_col15,#T_7462f_row15_col2,#T_7462f_row15_col5{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row2_col16,#T_7462f_row3_col7,#T_7462f_row3_col15,#T_7462f_row7_col3,#T_7462f_row15_col3,#T_7462f_row16_col2{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row3_col6,#T_7462f_row6_col3{\n",
        "            background-color:  #e2dfee;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row3_col8,#T_7462f_row8_col3{\n",
        "            background-color:  #e5e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row3_col9,#T_7462f_row3_col10,#T_7462f_row9_col3,#T_7462f_row10_col3{\n",
        "            background-color:  #dedcec;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row3_col12,#T_7462f_row12_col3{\n",
        "            background-color:  #f6eff7;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row4_col5,#T_7462f_row5_col4{\n",
        "            background-color:  #9ab8d8;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row4_col6,#T_7462f_row6_col4{\n",
        "            background-color:  #adc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row4_col7,#T_7462f_row7_col4{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row4_col8,#T_7462f_row8_col4{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row4_col9,#T_7462f_row9_col4{\n",
        "            background-color:  #c0c9e2;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row4_col10,#T_7462f_row10_col4{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row4_col12,#T_7462f_row8_col9,#T_7462f_row9_col8,#T_7462f_row12_col4{\n",
        "            background-color:  #81aed2;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row4_col13,#T_7462f_row13_col4{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row4_col14,#T_7462f_row5_col13,#T_7462f_row13_col5,#T_7462f_row14_col4{\n",
        "            background-color:  #69a5cc;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row4_col15,#T_7462f_row15_col4{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row4_col16,#T_7462f_row7_col12,#T_7462f_row12_col7,#T_7462f_row16_col4{\n",
        "            background-color:  #99b8d8;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row5_col6,#T_7462f_row6_col5{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row5_col7,#T_7462f_row6_col14,#T_7462f_row7_col5,#T_7462f_row13_col15,#T_7462f_row14_col6,#T_7462f_row15_col13{\n",
        "            background-color:  #94b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row5_col8,#T_7462f_row8_col5{\n",
        "            background-color:  #89b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row5_col10,#T_7462f_row9_col16,#T_7462f_row10_col5,#T_7462f_row16_col9{\n",
        "            background-color:  #63a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row5_col11,#T_7462f_row11_col5,#T_7462f_row11_col13,#T_7462f_row13_col11{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row5_col12,#T_7462f_row12_col5{\n",
        "            background-color:  #78abd0;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row5_col14,#T_7462f_row14_col5{\n",
        "            background-color:  #a1bbda;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row5_col16,#T_7462f_row16_col5{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row6_col7,#T_7462f_row7_col6{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row6_col8,#T_7462f_row8_col6{\n",
        "            background-color:  #0569a4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7462f_row6_col9,#T_7462f_row9_col6,#T_7462f_row10_col14,#T_7462f_row14_col10{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row6_col11,#T_7462f_row11_col6{\n",
        "            background-color:  #4897c4;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row6_col12,#T_7462f_row12_col6{\n",
        "            background-color:  #7eadd1;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row6_col13,#T_7462f_row7_col10,#T_7462f_row10_col7,#T_7462f_row13_col6{\n",
        "            background-color:  #5c9fc9;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row6_col15,#T_7462f_row9_col12,#T_7462f_row9_col14,#T_7462f_row12_col9,#T_7462f_row14_col9,#T_7462f_row15_col6{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row6_col16,#T_7462f_row16_col6{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7462f_row7_col8,#T_7462f_row8_col7,#T_7462f_row8_col11,#T_7462f_row11_col8{\n",
        "            background-color:  #4496c3;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row7_col9,#T_7462f_row9_col7,#T_7462f_row13_col14,#T_7462f_row14_col13{\n",
        "            background-color:  #569dc8;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row7_col11,#T_7462f_row11_col7{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7462f_row7_col13,#T_7462f_row13_col7{\n",
        "            background-color:  #4e9ac6;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row7_col14,#T_7462f_row9_col15,#T_7462f_row14_col7,#T_7462f_row15_col9{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row7_col15,#T_7462f_row14_col16,#T_7462f_row15_col7,#T_7462f_row16_col14{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row7_col16,#T_7462f_row16_col7{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row8_col10,#T_7462f_row10_col8{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row8_col12,#T_7462f_row12_col8{\n",
        "            background-color:  #6fa7ce;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row8_col13,#T_7462f_row12_col16,#T_7462f_row13_col8,#T_7462f_row16_col12{\n",
        "            background-color:  #4a98c5;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row8_col14,#T_7462f_row12_col15,#T_7462f_row14_col8,#T_7462f_row15_col12{\n",
        "            background-color:  #8fb4d6;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row8_col16,#T_7462f_row16_col8{\n",
        "            background-color:  #045f95;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7462f_row9_col10,#T_7462f_row10_col9,#T_7462f_row10_col13,#T_7462f_row13_col10{\n",
        "            background-color:  #67a4cc;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row9_col11,#T_7462f_row11_col9{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row10_col11,#T_7462f_row11_col10{\n",
        "            background-color:  #308cbe;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row10_col12,#T_7462f_row12_col10{\n",
        "            background-color:  #83afd3;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row10_col15,#T_7462f_row15_col10{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row10_col16,#T_7462f_row16_col10{\n",
        "            background-color:  #0d75b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7462f_row11_col12,#T_7462f_row11_col14,#T_7462f_row12_col11,#T_7462f_row14_col11{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row11_col16,#T_7462f_row16_col11{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row12_col13,#T_7462f_row13_col12{\n",
        "            background-color:  #4094c3;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row12_col14,#T_7462f_row14_col12{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row13_col16,#T_7462f_row16_col13{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_7462f_row14_col15,#T_7462f_row15_col14{\n",
        "            background-color:  #5a9ec9;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_7462f_\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_7462f_level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_7462f_row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_7462f_row0_col1\" class=\"data row0 col1\" >-0.129106</td>\n",
        "                        <td id=\"T_7462f_row0_col2\" class=\"data row0 col2\" >-0.067252</td>\n",
        "                        <td id=\"T_7462f_row0_col3\" class=\"data row0 col3\" >0.573324</td>\n",
        "                        <td id=\"T_7462f_row0_col4\" class=\"data row0 col4\" >-0.465330</td>\n",
        "                        <td id=\"T_7462f_row0_col5\" class=\"data row0 col5\" >-0.173160</td>\n",
        "                        <td id=\"T_7462f_row0_col6\" class=\"data row0 col6\" >-0.092349</td>\n",
        "                        <td id=\"T_7462f_row0_col7\" class=\"data row0 col7\" >-0.073546</td>\n",
        "                        <td id=\"T_7462f_row0_col8\" class=\"data row0 col8\" >-0.164429</td>\n",
        "                        <td id=\"T_7462f_row0_col9\" class=\"data row0 col9\" >-0.156362</td>\n",
        "                        <td id=\"T_7462f_row0_col10\" class=\"data row0 col10\" >-0.093168</td>\n",
        "                        <td id=\"T_7462f_row0_col11\" class=\"data row0 col11\" >-0.109980</td>\n",
        "                        <td id=\"T_7462f_row0_col12\" class=\"data row0 col12\" >-0.295324</td>\n",
        "                        <td id=\"T_7462f_row0_col13\" class=\"data row0 col13\" >-0.059141</td>\n",
        "                        <td id=\"T_7462f_row0_col14\" class=\"data row0 col14\" >-0.288867</td>\n",
        "                        <td id=\"T_7462f_row0_col15\" class=\"data row0 col15\" >-0.173228</td>\n",
        "                        <td id=\"T_7462f_row0_col16\" class=\"data row0 col16\" >-0.144817</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7462f_level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_7462f_row1_col0\" class=\"data row1 col0\" >-0.129106</td>\n",
        "                        <td id=\"T_7462f_row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_7462f_row1_col2\" class=\"data row1 col2\" >0.771013</td>\n",
        "                        <td id=\"T_7462f_row1_col3\" class=\"data row1 col3\" >-0.079723</td>\n",
        "                        <td id=\"T_7462f_row1_col4\" class=\"data row1 col4\" >-0.237299</td>\n",
        "                        <td id=\"T_7462f_row1_col5\" class=\"data row1 col5\" >0.057730</td>\n",
        "                        <td id=\"T_7462f_row1_col6\" class=\"data row1 col6\" >-0.153625</td>\n",
        "                        <td id=\"T_7462f_row1_col7\" class=\"data row1 col7\" >-0.016781</td>\n",
        "                        <td id=\"T_7462f_row1_col8\" class=\"data row1 col8\" >-0.191807</td>\n",
        "                        <td id=\"T_7462f_row1_col9\" class=\"data row1 col9\" >0.122883</td>\n",
        "                        <td id=\"T_7462f_row1_col10\" class=\"data row1 col10\" >-0.101722</td>\n",
        "                        <td id=\"T_7462f_row1_col11\" class=\"data row1 col11\" >0.005884</td>\n",
        "                        <td id=\"T_7462f_row1_col12\" class=\"data row1 col12\" >-0.153684</td>\n",
        "                        <td id=\"T_7462f_row1_col13\" class=\"data row1 col13\" >-0.221401</td>\n",
        "                        <td id=\"T_7462f_row1_col14\" class=\"data row1 col14\" >-0.276800</td>\n",
        "                        <td id=\"T_7462f_row1_col15\" class=\"data row1 col15\" >0.118267</td>\n",
        "                        <td id=\"T_7462f_row1_col16\" class=\"data row1 col16\" >-0.146708</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7462f_level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_7462f_row2_col0\" class=\"data row2 col0\" >-0.067252</td>\n",
        "                        <td id=\"T_7462f_row2_col1\" class=\"data row2 col1\" >0.771013</td>\n",
        "                        <td id=\"T_7462f_row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_7462f_row2_col3\" class=\"data row2 col3\" >0.157222</td>\n",
        "                        <td id=\"T_7462f_row2_col4\" class=\"data row2 col4\" >-0.148053</td>\n",
        "                        <td id=\"T_7462f_row2_col5\" class=\"data row2 col5\" >-0.144009</td>\n",
        "                        <td id=\"T_7462f_row2_col6\" class=\"data row2 col6\" >-0.276530</td>\n",
        "                        <td id=\"T_7462f_row2_col7\" class=\"data row2 col7\" >-0.106544</td>\n",
        "                        <td id=\"T_7462f_row2_col8\" class=\"data row2 col8\" >-0.202446</td>\n",
        "                        <td id=\"T_7462f_row2_col9\" class=\"data row2 col9\" >-0.095268</td>\n",
        "                        <td id=\"T_7462f_row2_col10\" class=\"data row2 col10\" >-0.205586</td>\n",
        "                        <td id=\"T_7462f_row2_col11\" class=\"data row2 col11\" >-0.202404</td>\n",
        "                        <td id=\"T_7462f_row2_col12\" class=\"data row2 col12\" >-0.192133</td>\n",
        "                        <td id=\"T_7462f_row2_col13\" class=\"data row2 col13\" >-0.329156</td>\n",
        "                        <td id=\"T_7462f_row2_col14\" class=\"data row2 col14\" >-0.238613</td>\n",
        "                        <td id=\"T_7462f_row2_col15\" class=\"data row2 col15\" >0.030489</td>\n",
        "                        <td id=\"T_7462f_row2_col16\" class=\"data row2 col16\" >-0.243395</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7462f_level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_7462f_row3_col0\" class=\"data row3 col0\" >0.573324</td>\n",
        "                        <td id=\"T_7462f_row3_col1\" class=\"data row3 col1\" >-0.079723</td>\n",
        "                        <td id=\"T_7462f_row3_col2\" class=\"data row3 col2\" >0.157222</td>\n",
        "                        <td id=\"T_7462f_row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_7462f_row3_col4\" class=\"data row3 col4\" >-0.241924</td>\n",
        "                        <td id=\"T_7462f_row3_col5\" class=\"data row3 col5\" >-0.223095</td>\n",
        "                        <td id=\"T_7462f_row3_col6\" class=\"data row3 col6\" >-0.214194</td>\n",
        "                        <td id=\"T_7462f_row3_col7\" class=\"data row3 col7\" >-0.249750</td>\n",
        "                        <td id=\"T_7462f_row3_col8\" class=\"data row3 col8\" >-0.231770</td>\n",
        "                        <td id=\"T_7462f_row3_col9\" class=\"data row3 col9\" >-0.189427</td>\n",
        "                        <td id=\"T_7462f_row3_col10\" class=\"data row3 col10\" >-0.189977</td>\n",
        "                        <td id=\"T_7462f_row3_col11\" class=\"data row3 col11\" >-0.242067</td>\n",
        "                        <td id=\"T_7462f_row3_col12\" class=\"data row3 col12\" >-0.378737</td>\n",
        "                        <td id=\"T_7462f_row3_col13\" class=\"data row3 col13\" >-0.091760</td>\n",
        "                        <td id=\"T_7462f_row3_col14\" class=\"data row3 col14\" >-0.279557</td>\n",
        "                        <td id=\"T_7462f_row3_col15\" class=\"data row3 col15\" >-0.247098</td>\n",
        "                        <td id=\"T_7462f_row3_col16\" class=\"data row3 col16\" >-0.146213</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7462f_level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_7462f_row4_col0\" class=\"data row4 col0\" >-0.465330</td>\n",
        "                        <td id=\"T_7462f_row4_col1\" class=\"data row4 col1\" >-0.237299</td>\n",
        "                        <td id=\"T_7462f_row4_col2\" class=\"data row4 col2\" >-0.148053</td>\n",
        "                        <td id=\"T_7462f_row4_col3\" class=\"data row4 col3\" >-0.241924</td>\n",
        "                        <td id=\"T_7462f_row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_7462f_row4_col5\" class=\"data row4 col5\" >0.127640</td>\n",
        "                        <td id=\"T_7462f_row4_col6\" class=\"data row4 col6\" >0.055189</td>\n",
        "                        <td id=\"T_7462f_row4_col7\" class=\"data row4 col7\" >0.061380</td>\n",
        "                        <td id=\"T_7462f_row4_col8\" class=\"data row4 col8\" >0.247842</td>\n",
        "                        <td id=\"T_7462f_row4_col9\" class=\"data row4 col9\" >-0.028925</td>\n",
        "                        <td id=\"T_7462f_row4_col10\" class=\"data row4 col10\" >-0.004115</td>\n",
        "                        <td id=\"T_7462f_row4_col11\" class=\"data row4 col11\" >-0.065295</td>\n",
        "                        <td id=\"T_7462f_row4_col12\" class=\"data row4 col12\" >0.218476</td>\n",
        "                        <td id=\"T_7462f_row4_col13\" class=\"data row4 col13\" >0.174510</td>\n",
        "                        <td id=\"T_7462f_row4_col14\" class=\"data row4 col14\" >0.299708</td>\n",
        "                        <td id=\"T_7462f_row4_col15\" class=\"data row4 col15\" >0.077401</td>\n",
        "                        <td id=\"T_7462f_row4_col16\" class=\"data row4 col16\" >0.133283</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7462f_level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_7462f_row5_col0\" class=\"data row5 col0\" >-0.173160</td>\n",
        "                        <td id=\"T_7462f_row5_col1\" class=\"data row5 col1\" >0.057730</td>\n",
        "                        <td id=\"T_7462f_row5_col2\" class=\"data row5 col2\" >-0.144009</td>\n",
        "                        <td id=\"T_7462f_row5_col3\" class=\"data row5 col3\" >-0.223095</td>\n",
        "                        <td id=\"T_7462f_row5_col4\" class=\"data row5 col4\" >0.127640</td>\n",
        "                        <td id=\"T_7462f_row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_7462f_row5_col6\" class=\"data row5 col6\" >0.434662</td>\n",
        "                        <td id=\"T_7462f_row5_col7\" class=\"data row5 col7\" >0.151703</td>\n",
        "                        <td id=\"T_7462f_row5_col8\" class=\"data row5 col8\" >0.189150</td>\n",
        "                        <td id=\"T_7462f_row5_col9\" class=\"data row5 col9\" >0.057037</td>\n",
        "                        <td id=\"T_7462f_row5_col10\" class=\"data row5 col10\" >0.314389</td>\n",
        "                        <td id=\"T_7462f_row5_col11\" class=\"data row5 col11\" >0.241294</td>\n",
        "                        <td id=\"T_7462f_row5_col12\" class=\"data row5 col12\" >0.254516</td>\n",
        "                        <td id=\"T_7462f_row5_col13\" class=\"data row5 col13\" >0.300795</td>\n",
        "                        <td id=\"T_7462f_row5_col14\" class=\"data row5 col14\" >0.102150</td>\n",
        "                        <td id=\"T_7462f_row5_col15\" class=\"data row5 col15\" >0.032443</td>\n",
        "                        <td id=\"T_7462f_row5_col16\" class=\"data row5 col16\" >0.481888</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7462f_level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_7462f_row6_col0\" class=\"data row6 col0\" >-0.092349</td>\n",
        "                        <td id=\"T_7462f_row6_col1\" class=\"data row6 col1\" >-0.153625</td>\n",
        "                        <td id=\"T_7462f_row6_col2\" class=\"data row6 col2\" >-0.276530</td>\n",
        "                        <td id=\"T_7462f_row6_col3\" class=\"data row6 col3\" >-0.214194</td>\n",
        "                        <td id=\"T_7462f_row6_col4\" class=\"data row6 col4\" >0.055189</td>\n",
        "                        <td id=\"T_7462f_row6_col5\" class=\"data row6 col5\" >0.434662</td>\n",
        "                        <td id=\"T_7462f_row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_7462f_row6_col7\" class=\"data row6 col7\" >0.270489</td>\n",
        "                        <td id=\"T_7462f_row6_col8\" class=\"data row6 col8\" >0.691438</td>\n",
        "                        <td id=\"T_7462f_row6_col9\" class=\"data row6 col9\" >0.196629</td>\n",
        "                        <td id=\"T_7462f_row6_col10\" class=\"data row6 col10\" >0.575663</td>\n",
        "                        <td id=\"T_7462f_row6_col11\" class=\"data row6 col11\" >0.395750</td>\n",
        "                        <td id=\"T_7462f_row6_col12\" class=\"data row6 col12\" >0.231886</td>\n",
        "                        <td id=\"T_7462f_row6_col13\" class=\"data row6 col13\" >0.340587</td>\n",
        "                        <td id=\"T_7462f_row6_col14\" class=\"data row6 col14\" >0.147263</td>\n",
        "                        <td id=\"T_7462f_row6_col15\" class=\"data row6 col15\" >-0.084602</td>\n",
        "                        <td id=\"T_7462f_row6_col16\" class=\"data row6 col16\" >0.758028</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7462f_level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_7462f_row7_col0\" class=\"data row7 col0\" >-0.073546</td>\n",
        "                        <td id=\"T_7462f_row7_col1\" class=\"data row7 col1\" >-0.016781</td>\n",
        "                        <td id=\"T_7462f_row7_col2\" class=\"data row7 col2\" >-0.106544</td>\n",
        "                        <td id=\"T_7462f_row7_col3\" class=\"data row7 col3\" >-0.249750</td>\n",
        "                        <td id=\"T_7462f_row7_col4\" class=\"data row7 col4\" >0.061380</td>\n",
        "                        <td id=\"T_7462f_row7_col5\" class=\"data row7 col5\" >0.151703</td>\n",
        "                        <td id=\"T_7462f_row7_col6\" class=\"data row7 col6\" >0.270489</td>\n",
        "                        <td id=\"T_7462f_row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_7462f_row7_col8\" class=\"data row7 col8\" >0.408839</td>\n",
        "                        <td id=\"T_7462f_row7_col9\" class=\"data row7 col9\" >0.355036</td>\n",
        "                        <td id=\"T_7462f_row7_col10\" class=\"data row7 col10\" >0.339807</td>\n",
        "                        <td id=\"T_7462f_row7_col11\" class=\"data row7 col11\" >0.611834</td>\n",
        "                        <td id=\"T_7462f_row7_col12\" class=\"data row7 col12\" >0.130487</td>\n",
        "                        <td id=\"T_7462f_row7_col13\" class=\"data row7 col13\" >0.379722</td>\n",
        "                        <td id=\"T_7462f_row7_col14\" class=\"data row7 col14\" >-0.047379</td>\n",
        "                        <td id=\"T_7462f_row7_col15\" class=\"data row7 col15\" >0.109172</td>\n",
        "                        <td id=\"T_7462f_row7_col16\" class=\"data row7 col16\" >0.385245</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7462f_level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_7462f_row8_col0\" class=\"data row8 col0\" >-0.164429</td>\n",
        "                        <td id=\"T_7462f_row8_col1\" class=\"data row8 col1\" >-0.191807</td>\n",
        "                        <td id=\"T_7462f_row8_col2\" class=\"data row8 col2\" >-0.202446</td>\n",
        "                        <td id=\"T_7462f_row8_col3\" class=\"data row8 col3\" >-0.231770</td>\n",
        "                        <td id=\"T_7462f_row8_col4\" class=\"data row8 col4\" >0.247842</td>\n",
        "                        <td id=\"T_7462f_row8_col5\" class=\"data row8 col5\" >0.189150</td>\n",
        "                        <td id=\"T_7462f_row8_col6\" class=\"data row8 col6\" >0.691438</td>\n",
        "                        <td id=\"T_7462f_row8_col7\" class=\"data row8 col7\" >0.408839</td>\n",
        "                        <td id=\"T_7462f_row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_7462f_row8_col9\" class=\"data row8 col9\" >0.219966</td>\n",
        "                        <td id=\"T_7462f_row8_col10\" class=\"data row8 col10\" >0.457850</td>\n",
        "                        <td id=\"T_7462f_row8_col11\" class=\"data row8 col11\" >0.408976</td>\n",
        "                        <td id=\"T_7462f_row8_col12\" class=\"data row8 col12\" >0.280604</td>\n",
        "                        <td id=\"T_7462f_row8_col13\" class=\"data row8 col13\" >0.391891</td>\n",
        "                        <td id=\"T_7462f_row8_col14\" class=\"data row8 col14\" >0.169411</td>\n",
        "                        <td id=\"T_7462f_row8_col15\" class=\"data row8 col15\" >-0.094798</td>\n",
        "                        <td id=\"T_7462f_row8_col16\" class=\"data row8 col16\" >0.771134</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7462f_level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_7462f_row9_col0\" class=\"data row9 col0\" >-0.156362</td>\n",
        "                        <td id=\"T_7462f_row9_col1\" class=\"data row9 col1\" >0.122883</td>\n",
        "                        <td id=\"T_7462f_row9_col2\" class=\"data row9 col2\" >-0.095268</td>\n",
        "                        <td id=\"T_7462f_row9_col3\" class=\"data row9 col3\" >-0.189427</td>\n",
        "                        <td id=\"T_7462f_row9_col4\" class=\"data row9 col4\" >-0.028925</td>\n",
        "                        <td id=\"T_7462f_row9_col5\" class=\"data row9 col5\" >0.057037</td>\n",
        "                        <td id=\"T_7462f_row9_col6\" class=\"data row9 col6\" >0.196629</td>\n",
        "                        <td id=\"T_7462f_row9_col7\" class=\"data row9 col7\" >0.355036</td>\n",
        "                        <td id=\"T_7462f_row9_col8\" class=\"data row9 col8\" >0.219966</td>\n",
        "                        <td id=\"T_7462f_row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_7462f_row9_col10\" class=\"data row9 col10\" >0.306256</td>\n",
        "                        <td id=\"T_7462f_row9_col11\" class=\"data row9 col11\" >0.536733</td>\n",
        "                        <td id=\"T_7462f_row9_col12\" class=\"data row9 col12\" >-0.084486</td>\n",
        "                        <td id=\"T_7462f_row9_col13\" class=\"data row9 col13\" >0.154588</td>\n",
        "                        <td id=\"T_7462f_row9_col14\" class=\"data row9 col14\" >-0.085825</td>\n",
        "                        <td id=\"T_7462f_row9_col15\" class=\"data row9 col15\" >-0.046616</td>\n",
        "                        <td id=\"T_7462f_row9_col16\" class=\"data row9 col16\" >0.316016</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7462f_level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_7462f_row10_col0\" class=\"data row10 col0\" >-0.093168</td>\n",
        "                        <td id=\"T_7462f_row10_col1\" class=\"data row10 col1\" >-0.101722</td>\n",
        "                        <td id=\"T_7462f_row10_col2\" class=\"data row10 col2\" >-0.205586</td>\n",
        "                        <td id=\"T_7462f_row10_col3\" class=\"data row10 col3\" >-0.189977</td>\n",
        "                        <td id=\"T_7462f_row10_col4\" class=\"data row10 col4\" >-0.004115</td>\n",
        "                        <td id=\"T_7462f_row10_col5\" class=\"data row10 col5\" >0.314389</td>\n",
        "                        <td id=\"T_7462f_row10_col6\" class=\"data row10 col6\" >0.575663</td>\n",
        "                        <td id=\"T_7462f_row10_col7\" class=\"data row10 col7\" >0.339807</td>\n",
        "                        <td id=\"T_7462f_row10_col8\" class=\"data row10 col8\" >0.457850</td>\n",
        "                        <td id=\"T_7462f_row10_col9\" class=\"data row10 col9\" >0.306256</td>\n",
        "                        <td id=\"T_7462f_row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_7462f_row10_col11\" class=\"data row10 col11\" >0.472238</td>\n",
        "                        <td id=\"T_7462f_row10_col12\" class=\"data row10 col12\" >0.210825</td>\n",
        "                        <td id=\"T_7462f_row10_col13\" class=\"data row10 col13\" >0.303438</td>\n",
        "                        <td id=\"T_7462f_row10_col14\" class=\"data row10 col14\" >0.194950</td>\n",
        "                        <td id=\"T_7462f_row10_col15\" class=\"data row10 col15\" >-0.010589</td>\n",
        "                        <td id=\"T_7462f_row10_col16\" class=\"data row10 col16\" >0.604082</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7462f_level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_7462f_row11_col0\" class=\"data row11 col0\" >-0.109980</td>\n",
        "                        <td id=\"T_7462f_row11_col1\" class=\"data row11 col1\" >0.005884</td>\n",
        "                        <td id=\"T_7462f_row11_col2\" class=\"data row11 col2\" >-0.202404</td>\n",
        "                        <td id=\"T_7462f_row11_col3\" class=\"data row11 col3\" >-0.242067</td>\n",
        "                        <td id=\"T_7462f_row11_col4\" class=\"data row11 col4\" >-0.065295</td>\n",
        "                        <td id=\"T_7462f_row11_col5\" class=\"data row11 col5\" >0.241294</td>\n",
        "                        <td id=\"T_7462f_row11_col6\" class=\"data row11 col6\" >0.395750</td>\n",
        "                        <td id=\"T_7462f_row11_col7\" class=\"data row11 col7\" >0.611834</td>\n",
        "                        <td id=\"T_7462f_row11_col8\" class=\"data row11 col8\" >0.408976</td>\n",
        "                        <td id=\"T_7462f_row11_col9\" class=\"data row11 col9\" >0.536733</td>\n",
        "                        <td id=\"T_7462f_row11_col10\" class=\"data row11 col10\" >0.472238</td>\n",
        "                        <td id=\"T_7462f_row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_7462f_row11_col12\" class=\"data row11 col12\" >-0.053859</td>\n",
        "                        <td id=\"T_7462f_row11_col13\" class=\"data row11 col13\" >0.242179</td>\n",
        "                        <td id=\"T_7462f_row11_col14\" class=\"data row11 col14\" >-0.055364</td>\n",
        "                        <td id=\"T_7462f_row11_col15\" class=\"data row11 col15\" >0.061212</td>\n",
        "                        <td id=\"T_7462f_row11_col16\" class=\"data row11 col16\" >0.423549</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7462f_level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_7462f_row12_col0\" class=\"data row12 col0\" >-0.295324</td>\n",
        "                        <td id=\"T_7462f_row12_col1\" class=\"data row12 col1\" >-0.153684</td>\n",
        "                        <td id=\"T_7462f_row12_col2\" class=\"data row12 col2\" >-0.192133</td>\n",
        "                        <td id=\"T_7462f_row12_col3\" class=\"data row12 col3\" >-0.378737</td>\n",
        "                        <td id=\"T_7462f_row12_col4\" class=\"data row12 col4\" >0.218476</td>\n",
        "                        <td id=\"T_7462f_row12_col5\" class=\"data row12 col5\" >0.254516</td>\n",
        "                        <td id=\"T_7462f_row12_col6\" class=\"data row12 col6\" >0.231886</td>\n",
        "                        <td id=\"T_7462f_row12_col7\" class=\"data row12 col7\" >0.130487</td>\n",
        "                        <td id=\"T_7462f_row12_col8\" class=\"data row12 col8\" >0.280604</td>\n",
        "                        <td id=\"T_7462f_row12_col9\" class=\"data row12 col9\" >-0.084486</td>\n",
        "                        <td id=\"T_7462f_row12_col10\" class=\"data row12 col10\" >0.210825</td>\n",
        "                        <td id=\"T_7462f_row12_col11\" class=\"data row12 col11\" >-0.053859</td>\n",
        "                        <td id=\"T_7462f_row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_7462f_row12_col13\" class=\"data row12 col13\" >0.419113</td>\n",
        "                        <td id=\"T_7462f_row12_col14\" class=\"data row12 col14\" >0.447255</td>\n",
        "                        <td id=\"T_7462f_row12_col15\" class=\"data row12 col15\" >0.169895</td>\n",
        "                        <td id=\"T_7462f_row12_col16\" class=\"data row12 col16\" >0.390291</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7462f_level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_7462f_row13_col0\" class=\"data row13 col0\" >-0.059141</td>\n",
        "                        <td id=\"T_7462f_row13_col1\" class=\"data row13 col1\" >-0.221401</td>\n",
        "                        <td id=\"T_7462f_row13_col2\" class=\"data row13 col2\" >-0.329156</td>\n",
        "                        <td id=\"T_7462f_row13_col3\" class=\"data row13 col3\" >-0.091760</td>\n",
        "                        <td id=\"T_7462f_row13_col4\" class=\"data row13 col4\" >0.174510</td>\n",
        "                        <td id=\"T_7462f_row13_col5\" class=\"data row13 col5\" >0.300795</td>\n",
        "                        <td id=\"T_7462f_row13_col6\" class=\"data row13 col6\" >0.340587</td>\n",
        "                        <td id=\"T_7462f_row13_col7\" class=\"data row13 col7\" >0.379722</td>\n",
        "                        <td id=\"T_7462f_row13_col8\" class=\"data row13 col8\" >0.391891</td>\n",
        "                        <td id=\"T_7462f_row13_col9\" class=\"data row13 col9\" >0.154588</td>\n",
        "                        <td id=\"T_7462f_row13_col10\" class=\"data row13 col10\" >0.303438</td>\n",
        "                        <td id=\"T_7462f_row13_col11\" class=\"data row13 col11\" >0.242179</td>\n",
        "                        <td id=\"T_7462f_row13_col12\" class=\"data row13 col12\" >0.419113</td>\n",
        "                        <td id=\"T_7462f_row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_7462f_row13_col14\" class=\"data row13 col14\" >0.353732</td>\n",
        "                        <td id=\"T_7462f_row13_col15\" class=\"data row13 col15\" >0.152006</td>\n",
        "                        <td id=\"T_7462f_row13_col16\" class=\"data row13 col16\" >0.510695</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7462f_level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_7462f_row14_col0\" class=\"data row14 col0\" >-0.288867</td>\n",
        "                        <td id=\"T_7462f_row14_col1\" class=\"data row14 col1\" >-0.276800</td>\n",
        "                        <td id=\"T_7462f_row14_col2\" class=\"data row14 col2\" >-0.238613</td>\n",
        "                        <td id=\"T_7462f_row14_col3\" class=\"data row14 col3\" >-0.279557</td>\n",
        "                        <td id=\"T_7462f_row14_col4\" class=\"data row14 col4\" >0.299708</td>\n",
        "                        <td id=\"T_7462f_row14_col5\" class=\"data row14 col5\" >0.102150</td>\n",
        "                        <td id=\"T_7462f_row14_col6\" class=\"data row14 col6\" >0.147263</td>\n",
        "                        <td id=\"T_7462f_row14_col7\" class=\"data row14 col7\" >-0.047379</td>\n",
        "                        <td id=\"T_7462f_row14_col8\" class=\"data row14 col8\" >0.169411</td>\n",
        "                        <td id=\"T_7462f_row14_col9\" class=\"data row14 col9\" >-0.085825</td>\n",
        "                        <td id=\"T_7462f_row14_col10\" class=\"data row14 col10\" >0.194950</td>\n",
        "                        <td id=\"T_7462f_row14_col11\" class=\"data row14 col11\" >-0.055364</td>\n",
        "                        <td id=\"T_7462f_row14_col12\" class=\"data row14 col12\" >0.447255</td>\n",
        "                        <td id=\"T_7462f_row14_col13\" class=\"data row14 col13\" >0.353732</td>\n",
        "                        <td id=\"T_7462f_row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_7462f_row14_col15\" class=\"data row14 col15\" >0.343767</td>\n",
        "                        <td id=\"T_7462f_row14_col16\" class=\"data row14 col16\" >0.112042</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7462f_level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_7462f_row15_col0\" class=\"data row15 col0\" >-0.173228</td>\n",
        "                        <td id=\"T_7462f_row15_col1\" class=\"data row15 col1\" >0.118267</td>\n",
        "                        <td id=\"T_7462f_row15_col2\" class=\"data row15 col2\" >0.030489</td>\n",
        "                        <td id=\"T_7462f_row15_col3\" class=\"data row15 col3\" >-0.247098</td>\n",
        "                        <td id=\"T_7462f_row15_col4\" class=\"data row15 col4\" >0.077401</td>\n",
        "                        <td id=\"T_7462f_row15_col5\" class=\"data row15 col5\" >0.032443</td>\n",
        "                        <td id=\"T_7462f_row15_col6\" class=\"data row15 col6\" >-0.084602</td>\n",
        "                        <td id=\"T_7462f_row15_col7\" class=\"data row15 col7\" >0.109172</td>\n",
        "                        <td id=\"T_7462f_row15_col8\" class=\"data row15 col8\" >-0.094798</td>\n",
        "                        <td id=\"T_7462f_row15_col9\" class=\"data row15 col9\" >-0.046616</td>\n",
        "                        <td id=\"T_7462f_row15_col10\" class=\"data row15 col10\" >-0.010589</td>\n",
        "                        <td id=\"T_7462f_row15_col11\" class=\"data row15 col11\" >0.061212</td>\n",
        "                        <td id=\"T_7462f_row15_col12\" class=\"data row15 col12\" >0.169895</td>\n",
        "                        <td id=\"T_7462f_row15_col13\" class=\"data row15 col13\" >0.152006</td>\n",
        "                        <td id=\"T_7462f_row15_col14\" class=\"data row15 col14\" >0.343767</td>\n",
        "                        <td id=\"T_7462f_row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_7462f_row15_col16\" class=\"data row15 col16\" >-0.193254</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7462f_level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_7462f_row16_col0\" class=\"data row16 col0\" >-0.144817</td>\n",
        "                        <td id=\"T_7462f_row16_col1\" class=\"data row16 col1\" >-0.146708</td>\n",
        "                        <td id=\"T_7462f_row16_col2\" class=\"data row16 col2\" >-0.243395</td>\n",
        "                        <td id=\"T_7462f_row16_col3\" class=\"data row16 col3\" >-0.146213</td>\n",
        "                        <td id=\"T_7462f_row16_col4\" class=\"data row16 col4\" >0.133283</td>\n",
        "                        <td id=\"T_7462f_row16_col5\" class=\"data row16 col5\" >0.481888</td>\n",
        "                        <td id=\"T_7462f_row16_col6\" class=\"data row16 col6\" >0.758028</td>\n",
        "                        <td id=\"T_7462f_row16_col7\" class=\"data row16 col7\" >0.385245</td>\n",
        "                        <td id=\"T_7462f_row16_col8\" class=\"data row16 col8\" >0.771134</td>\n",
        "                        <td id=\"T_7462f_row16_col9\" class=\"data row16 col9\" >0.316016</td>\n",
        "                        <td id=\"T_7462f_row16_col10\" class=\"data row16 col10\" >0.604082</td>\n",
        "                        <td id=\"T_7462f_row16_col11\" class=\"data row16 col11\" >0.423549</td>\n",
        "                        <td id=\"T_7462f_row16_col12\" class=\"data row16 col12\" >0.390291</td>\n",
        "                        <td id=\"T_7462f_row16_col13\" class=\"data row16 col13\" >0.510695</td>\n",
        "                        <td id=\"T_7462f_row16_col14\" class=\"data row16 col14\" >0.112042</td>\n",
        "                        <td id=\"T_7462f_row16_col15\" class=\"data row16 col15\" >-0.193254</td>\n",
        "                        <td id=\"T_7462f_row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7fa903638be0>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
